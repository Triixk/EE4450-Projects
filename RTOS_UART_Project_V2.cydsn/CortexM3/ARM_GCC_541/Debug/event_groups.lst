ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"event_groups.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTestWaitCondition,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvTestWaitCondition, %function
  24              	prvTestWaitCondition:
  25              	.LFB78:
  26              		.file 1 "..\\FreeRTOS\\event_groups.c"
   1:..\FreeRTOS/event_groups.c **** /*
   2:..\FreeRTOS/event_groups.c ****  * FreeRTOS Kernel V10.0.0
   3:..\FreeRTOS/event_groups.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS/event_groups.c ****  *
   5:..\FreeRTOS/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS/event_groups.c ****  * subject to the following conditions:
  11:..\FreeRTOS/event_groups.c ****  *
  12:..\FreeRTOS/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS/event_groups.c ****  * copies or substantial portions of the Software. If you wish to use our Amazon
  14:..\FreeRTOS/event_groups.c ****  * FreeRTOS name, please do so in a fair use way that does not cause confusion.
  15:..\FreeRTOS/event_groups.c ****  *
  16:..\FreeRTOS/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:..\FreeRTOS/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:..\FreeRTOS/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:..\FreeRTOS/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:..\FreeRTOS/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:..\FreeRTOS/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:..\FreeRTOS/event_groups.c ****  *
  23:..\FreeRTOS/event_groups.c ****  * http://www.FreeRTOS.org
  24:..\FreeRTOS/event_groups.c ****  * http://aws.amazon.com/freertos
  25:..\FreeRTOS/event_groups.c ****  *
  26:..\FreeRTOS/event_groups.c ****  * 1 tab == 4 spaces!
  27:..\FreeRTOS/event_groups.c ****  */
  28:..\FreeRTOS/event_groups.c **** 
  29:..\FreeRTOS/event_groups.c **** /* Standard includes. */
  30:..\FreeRTOS/event_groups.c **** #include <stdlib.h>
  31:..\FreeRTOS/event_groups.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 2


  32:..\FreeRTOS/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:..\FreeRTOS/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:..\FreeRTOS/event_groups.c **** task.h is included from an application file. */
  35:..\FreeRTOS/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:..\FreeRTOS/event_groups.c **** 
  37:..\FreeRTOS/event_groups.c **** /* FreeRTOS includes. */
  38:..\FreeRTOS/event_groups.c **** #include "FreeRTOS.h"
  39:..\FreeRTOS/event_groups.c **** #include "task.h"
  40:..\FreeRTOS/event_groups.c **** #include "timers.h"
  41:..\FreeRTOS/event_groups.c **** #include "event_groups.h"
  42:..\FreeRTOS/event_groups.c **** 
  43:..\FreeRTOS/event_groups.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:..\FreeRTOS/event_groups.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:..\FreeRTOS/event_groups.c **** header files above, but not in this file, in order to generate the correct
  46:..\FreeRTOS/event_groups.c **** privileged Vs unprivileged linkage and placement. */
  47:..\FreeRTOS/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:..\FreeRTOS/event_groups.c **** 
  49:..\FreeRTOS/event_groups.c **** /* The following bit fields convey control information in a task's event list
  50:..\FreeRTOS/event_groups.c **** item value.  It is important they don't clash with the
  51:..\FreeRTOS/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  52:..\FreeRTOS/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  53:..\FreeRTOS/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  54:..\FreeRTOS/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  55:..\FreeRTOS/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  56:..\FreeRTOS/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  57:..\FreeRTOS/event_groups.c **** #else
  58:..\FreeRTOS/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  59:..\FreeRTOS/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  60:..\FreeRTOS/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  61:..\FreeRTOS/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  62:..\FreeRTOS/event_groups.c **** #endif
  63:..\FreeRTOS/event_groups.c **** 
  64:..\FreeRTOS/event_groups.c **** typedef struct xEventGroupDefinition
  65:..\FreeRTOS/event_groups.c **** {
  66:..\FreeRTOS/event_groups.c **** 	EventBits_t uxEventBits;
  67:..\FreeRTOS/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  68:..\FreeRTOS/event_groups.c **** 
  69:..\FreeRTOS/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  70:..\FreeRTOS/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  71:..\FreeRTOS/event_groups.c **** 	#endif
  72:..\FreeRTOS/event_groups.c **** 
  73:..\FreeRTOS/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  74:..\FreeRTOS/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  75:..\FreeRTOS/event_groups.c **** 	#endif
  76:..\FreeRTOS/event_groups.c **** } EventGroup_t;
  77:..\FreeRTOS/event_groups.c **** 
  78:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
  79:..\FreeRTOS/event_groups.c **** 
  80:..\FreeRTOS/event_groups.c **** /*
  81:..\FreeRTOS/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  82:..\FreeRTOS/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  83:..\FreeRTOS/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  84:..\FreeRTOS/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  85:..\FreeRTOS/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  86:..\FreeRTOS/event_groups.c ****  * in uxCurrentEventBits.
  87:..\FreeRTOS/event_groups.c ****  */
  88:..\FreeRTOS/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 3


  89:..\FreeRTOS/event_groups.c **** 
  90:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
  91:..\FreeRTOS/event_groups.c **** 
  92:..\FreeRTOS/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  93:..\FreeRTOS/event_groups.c **** 
  94:..\FreeRTOS/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  95:..\FreeRTOS/event_groups.c **** 	{
  96:..\FreeRTOS/event_groups.c **** 	EventGroup_t *pxEventBits;
  97:..\FreeRTOS/event_groups.c **** 
  98:..\FreeRTOS/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  99:..\FreeRTOS/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
 100:..\FreeRTOS/event_groups.c **** 
 101:..\FreeRTOS/event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 102:..\FreeRTOS/event_groups.c **** 		{
 103:..\FreeRTOS/event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 104:..\FreeRTOS/event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 105:..\FreeRTOS/event_groups.c **** 			event group structure. */
 106:..\FreeRTOS/event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
 107:..\FreeRTOS/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
 108:..\FreeRTOS/event_groups.c **** 		}
 109:..\FreeRTOS/event_groups.c **** 		#endif /* configASSERT_DEFINED */
 110:..\FreeRTOS/event_groups.c **** 
 111:..\FreeRTOS/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 112:..\FreeRTOS/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 EventGroup_t and StaticEventGro
 113:..\FreeRTOS/event_groups.c **** 
 114:..\FreeRTOS/event_groups.c **** 		if( pxEventBits != NULL )
 115:..\FreeRTOS/event_groups.c **** 		{
 116:..\FreeRTOS/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 117:..\FreeRTOS/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 118:..\FreeRTOS/event_groups.c **** 
 119:..\FreeRTOS/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 120:..\FreeRTOS/event_groups.c **** 			{
 121:..\FreeRTOS/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 122:..\FreeRTOS/event_groups.c **** 				this event group was created statically in case the event group
 123:..\FreeRTOS/event_groups.c **** 				is later deleted. */
 124:..\FreeRTOS/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 125:..\FreeRTOS/event_groups.c **** 			}
 126:..\FreeRTOS/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 127:..\FreeRTOS/event_groups.c **** 
 128:..\FreeRTOS/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 129:..\FreeRTOS/event_groups.c **** 		}
 130:..\FreeRTOS/event_groups.c **** 		else
 131:..\FreeRTOS/event_groups.c **** 		{
 132:..\FreeRTOS/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 133:..\FreeRTOS/event_groups.c **** 		}
 134:..\FreeRTOS/event_groups.c **** 
 135:..\FreeRTOS/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 136:..\FreeRTOS/event_groups.c **** 	}
 137:..\FreeRTOS/event_groups.c **** 
 138:..\FreeRTOS/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 139:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 140:..\FreeRTOS/event_groups.c **** 
 141:..\FreeRTOS/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 142:..\FreeRTOS/event_groups.c **** 
 143:..\FreeRTOS/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 144:..\FreeRTOS/event_groups.c **** 	{
 145:..\FreeRTOS/event_groups.c **** 	EventGroup_t *pxEventBits;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 4


 146:..\FreeRTOS/event_groups.c **** 
 147:..\FreeRTOS/event_groups.c **** 		/* Allocate the event group. */
 148:..\FreeRTOS/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) );
 149:..\FreeRTOS/event_groups.c **** 
 150:..\FreeRTOS/event_groups.c **** 		if( pxEventBits != NULL )
 151:..\FreeRTOS/event_groups.c **** 		{
 152:..\FreeRTOS/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 153:..\FreeRTOS/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 154:..\FreeRTOS/event_groups.c **** 
 155:..\FreeRTOS/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 156:..\FreeRTOS/event_groups.c **** 			{
 157:..\FreeRTOS/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 158:..\FreeRTOS/event_groups.c **** 				event group was allocated statically in case the event group is
 159:..\FreeRTOS/event_groups.c **** 				later deleted. */
 160:..\FreeRTOS/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 161:..\FreeRTOS/event_groups.c **** 			}
 162:..\FreeRTOS/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 163:..\FreeRTOS/event_groups.c **** 
 164:..\FreeRTOS/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 165:..\FreeRTOS/event_groups.c **** 		}
 166:..\FreeRTOS/event_groups.c **** 		else
 167:..\FreeRTOS/event_groups.c **** 		{
 168:..\FreeRTOS/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 169:..\FreeRTOS/event_groups.c **** 		}
 170:..\FreeRTOS/event_groups.c **** 
 171:..\FreeRTOS/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 172:..\FreeRTOS/event_groups.c **** 	}
 173:..\FreeRTOS/event_groups.c **** 
 174:..\FreeRTOS/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 175:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 176:..\FreeRTOS/event_groups.c **** 
 177:..\FreeRTOS/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 178:..\FreeRTOS/event_groups.c **** {
 179:..\FreeRTOS/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 180:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 181:..\FreeRTOS/event_groups.c **** BaseType_t xAlreadyYielded;
 182:..\FreeRTOS/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 183:..\FreeRTOS/event_groups.c **** 
 184:..\FreeRTOS/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 185:..\FreeRTOS/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 186:..\FreeRTOS/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 187:..\FreeRTOS/event_groups.c **** 	{
 188:..\FreeRTOS/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 189:..\FreeRTOS/event_groups.c **** 	}
 190:..\FreeRTOS/event_groups.c **** 	#endif
 191:..\FreeRTOS/event_groups.c **** 
 192:..\FreeRTOS/event_groups.c **** 	vTaskSuspendAll();
 193:..\FreeRTOS/event_groups.c **** 	{
 194:..\FreeRTOS/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 195:..\FreeRTOS/event_groups.c **** 
 196:..\FreeRTOS/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 197:..\FreeRTOS/event_groups.c **** 
 198:..\FreeRTOS/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 199:..\FreeRTOS/event_groups.c **** 		{
 200:..\FreeRTOS/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 201:..\FreeRTOS/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 202:..\FreeRTOS/event_groups.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 5


 203:..\FreeRTOS/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 204:..\FreeRTOS/event_groups.c **** 			already unless this is the only task in the rendezvous. */
 205:..\FreeRTOS/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 206:..\FreeRTOS/event_groups.c **** 
 207:..\FreeRTOS/event_groups.c **** 			xTicksToWait = 0;
 208:..\FreeRTOS/event_groups.c **** 		}
 209:..\FreeRTOS/event_groups.c **** 		else
 210:..\FreeRTOS/event_groups.c **** 		{
 211:..\FreeRTOS/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 212:..\FreeRTOS/event_groups.c **** 			{
 213:..\FreeRTOS/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 214:..\FreeRTOS/event_groups.c **** 
 215:..\FreeRTOS/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 216:..\FreeRTOS/event_groups.c **** 				task's event list item so the kernel knows when a match is
 217:..\FreeRTOS/event_groups.c **** 				found.  Then enter the blocked state. */
 218:..\FreeRTOS/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 219:..\FreeRTOS/event_groups.c **** 
 220:..\FreeRTOS/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 221:..\FreeRTOS/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 222:..\FreeRTOS/event_groups.c **** 				warning about uxReturn being returned without being set if the
 223:..\FreeRTOS/event_groups.c **** 				assignment is omitted. */
 224:..\FreeRTOS/event_groups.c **** 				uxReturn = 0;
 225:..\FreeRTOS/event_groups.c **** 			}
 226:..\FreeRTOS/event_groups.c **** 			else
 227:..\FreeRTOS/event_groups.c **** 			{
 228:..\FreeRTOS/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 229:..\FreeRTOS/event_groups.c **** 				specified - just return the current event bit value. */
 230:..\FreeRTOS/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 231:..\FreeRTOS/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 232:..\FreeRTOS/event_groups.c **** 			}
 233:..\FreeRTOS/event_groups.c **** 		}
 234:..\FreeRTOS/event_groups.c **** 	}
 235:..\FreeRTOS/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 236:..\FreeRTOS/event_groups.c **** 
 237:..\FreeRTOS/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 238:..\FreeRTOS/event_groups.c **** 	{
 239:..\FreeRTOS/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 240:..\FreeRTOS/event_groups.c **** 		{
 241:..\FreeRTOS/event_groups.c **** 			portYIELD_WITHIN_API();
 242:..\FreeRTOS/event_groups.c **** 		}
 243:..\FreeRTOS/event_groups.c **** 		else
 244:..\FreeRTOS/event_groups.c **** 		{
 245:..\FreeRTOS/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 246:..\FreeRTOS/event_groups.c **** 		}
 247:..\FreeRTOS/event_groups.c **** 
 248:..\FreeRTOS/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 249:..\FreeRTOS/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 250:..\FreeRTOS/event_groups.c **** 		the required bits were set they will have been stored in the task's
 251:..\FreeRTOS/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 252:..\FreeRTOS/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 253:..\FreeRTOS/event_groups.c **** 
 254:..\FreeRTOS/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 255:..\FreeRTOS/event_groups.c **** 		{
 256:..\FreeRTOS/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 257:..\FreeRTOS/event_groups.c **** 			taskENTER_CRITICAL();
 258:..\FreeRTOS/event_groups.c **** 			{
 259:..\FreeRTOS/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 6


 260:..\FreeRTOS/event_groups.c **** 
 261:..\FreeRTOS/event_groups.c **** 				/* Although the task got here because it timed out before the
 262:..\FreeRTOS/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 263:..\FreeRTOS/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 264:..\FreeRTOS/event_groups.c **** 				then it needs to clear the bits before exiting. */
 265:..\FreeRTOS/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 266:..\FreeRTOS/event_groups.c **** 				{
 267:..\FreeRTOS/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 268:..\FreeRTOS/event_groups.c **** 				}
 269:..\FreeRTOS/event_groups.c **** 				else
 270:..\FreeRTOS/event_groups.c **** 				{
 271:..\FreeRTOS/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 272:..\FreeRTOS/event_groups.c **** 				}
 273:..\FreeRTOS/event_groups.c **** 			}
 274:..\FreeRTOS/event_groups.c **** 			taskEXIT_CRITICAL();
 275:..\FreeRTOS/event_groups.c **** 
 276:..\FreeRTOS/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 277:..\FreeRTOS/event_groups.c **** 		}
 278:..\FreeRTOS/event_groups.c **** 		else
 279:..\FreeRTOS/event_groups.c **** 		{
 280:..\FreeRTOS/event_groups.c **** 			/* The task unblocked because the bits were set. */
 281:..\FreeRTOS/event_groups.c **** 		}
 282:..\FreeRTOS/event_groups.c **** 
 283:..\FreeRTOS/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 284:..\FreeRTOS/event_groups.c **** 		returned. */
 285:..\FreeRTOS/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 286:..\FreeRTOS/event_groups.c **** 	}
 287:..\FreeRTOS/event_groups.c **** 
 288:..\FreeRTOS/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 289:..\FreeRTOS/event_groups.c **** 
 290:..\FreeRTOS/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 291:..\FreeRTOS/event_groups.c **** 	( void ) xTimeoutOccurred;
 292:..\FreeRTOS/event_groups.c **** 
 293:..\FreeRTOS/event_groups.c **** 	return uxReturn;
 294:..\FreeRTOS/event_groups.c **** }
 295:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 296:..\FreeRTOS/event_groups.c **** 
 297:..\FreeRTOS/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 298:..\FreeRTOS/event_groups.c **** {
 299:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 300:..\FreeRTOS/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 301:..\FreeRTOS/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 302:..\FreeRTOS/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 303:..\FreeRTOS/event_groups.c **** 
 304:..\FreeRTOS/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 305:..\FreeRTOS/event_groups.c **** 	itself, and that at least one bit is being requested. */
 306:..\FreeRTOS/event_groups.c **** 	configASSERT( xEventGroup );
 307:..\FreeRTOS/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 308:..\FreeRTOS/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 309:..\FreeRTOS/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 310:..\FreeRTOS/event_groups.c **** 	{
 311:..\FreeRTOS/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 312:..\FreeRTOS/event_groups.c **** 	}
 313:..\FreeRTOS/event_groups.c **** 	#endif
 314:..\FreeRTOS/event_groups.c **** 
 315:..\FreeRTOS/event_groups.c **** 	vTaskSuspendAll();
 316:..\FreeRTOS/event_groups.c **** 	{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 7


 317:..\FreeRTOS/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 318:..\FreeRTOS/event_groups.c **** 
 319:..\FreeRTOS/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 320:..\FreeRTOS/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 321:..\FreeRTOS/event_groups.c **** 
 322:..\FreeRTOS/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 323:..\FreeRTOS/event_groups.c **** 		{
 324:..\FreeRTOS/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 325:..\FreeRTOS/event_groups.c **** 			block. */
 326:..\FreeRTOS/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 327:..\FreeRTOS/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 328:..\FreeRTOS/event_groups.c **** 
 329:..\FreeRTOS/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 330:..\FreeRTOS/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 331:..\FreeRTOS/event_groups.c **** 			{
 332:..\FreeRTOS/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 333:..\FreeRTOS/event_groups.c **** 			}
 334:..\FreeRTOS/event_groups.c **** 			else
 335:..\FreeRTOS/event_groups.c **** 			{
 336:..\FreeRTOS/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 337:..\FreeRTOS/event_groups.c **** 			}
 338:..\FreeRTOS/event_groups.c **** 		}
 339:..\FreeRTOS/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 340:..\FreeRTOS/event_groups.c **** 		{
 341:..\FreeRTOS/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 342:..\FreeRTOS/event_groups.c **** 			specified, so just return the current value. */
 343:..\FreeRTOS/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 344:..\FreeRTOS/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 345:..\FreeRTOS/event_groups.c **** 		}
 346:..\FreeRTOS/event_groups.c **** 		else
 347:..\FreeRTOS/event_groups.c **** 		{
 348:..\FreeRTOS/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 349:..\FreeRTOS/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 350:..\FreeRTOS/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 351:..\FreeRTOS/event_groups.c **** 			unblock the task. */
 352:..\FreeRTOS/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 353:..\FreeRTOS/event_groups.c **** 			{
 354:..\FreeRTOS/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 355:..\FreeRTOS/event_groups.c **** 			}
 356:..\FreeRTOS/event_groups.c **** 			else
 357:..\FreeRTOS/event_groups.c **** 			{
 358:..\FreeRTOS/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 359:..\FreeRTOS/event_groups.c **** 			}
 360:..\FreeRTOS/event_groups.c **** 
 361:..\FreeRTOS/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 362:..\FreeRTOS/event_groups.c **** 			{
 363:..\FreeRTOS/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 364:..\FreeRTOS/event_groups.c **** 			}
 365:..\FreeRTOS/event_groups.c **** 			else
 366:..\FreeRTOS/event_groups.c **** 			{
 367:..\FreeRTOS/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 368:..\FreeRTOS/event_groups.c **** 			}
 369:..\FreeRTOS/event_groups.c **** 
 370:..\FreeRTOS/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 371:..\FreeRTOS/event_groups.c **** 			task's event list item so the kernel knows when a match is
 372:..\FreeRTOS/event_groups.c **** 			found.  Then enter the blocked state. */
 373:..\FreeRTOS/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 8


 374:..\FreeRTOS/event_groups.c **** 
 375:..\FreeRTOS/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 376:..\FreeRTOS/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 377:..\FreeRTOS/event_groups.c **** 			being returned without being set if it is not done. */
 378:..\FreeRTOS/event_groups.c **** 			uxReturn = 0;
 379:..\FreeRTOS/event_groups.c **** 
 380:..\FreeRTOS/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 381:..\FreeRTOS/event_groups.c **** 		}
 382:..\FreeRTOS/event_groups.c **** 	}
 383:..\FreeRTOS/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 384:..\FreeRTOS/event_groups.c **** 
 385:..\FreeRTOS/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 386:..\FreeRTOS/event_groups.c **** 	{
 387:..\FreeRTOS/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 388:..\FreeRTOS/event_groups.c **** 		{
 389:..\FreeRTOS/event_groups.c **** 			portYIELD_WITHIN_API();
 390:..\FreeRTOS/event_groups.c **** 		}
 391:..\FreeRTOS/event_groups.c **** 		else
 392:..\FreeRTOS/event_groups.c **** 		{
 393:..\FreeRTOS/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 394:..\FreeRTOS/event_groups.c **** 		}
 395:..\FreeRTOS/event_groups.c **** 
 396:..\FreeRTOS/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 397:..\FreeRTOS/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 398:..\FreeRTOS/event_groups.c **** 		the required bits were set they will have been stored in the task's
 399:..\FreeRTOS/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 400:..\FreeRTOS/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 401:..\FreeRTOS/event_groups.c **** 
 402:..\FreeRTOS/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 403:..\FreeRTOS/event_groups.c **** 		{
 404:..\FreeRTOS/event_groups.c **** 			taskENTER_CRITICAL();
 405:..\FreeRTOS/event_groups.c **** 			{
 406:..\FreeRTOS/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 407:..\FreeRTOS/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 408:..\FreeRTOS/event_groups.c **** 
 409:..\FreeRTOS/event_groups.c **** 				/* It is possible that the event bits were updated between this
 410:..\FreeRTOS/event_groups.c **** 				task leaving the Blocked state and running again. */
 411:..\FreeRTOS/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 412:..\FreeRTOS/event_groups.c **** 				{
 413:..\FreeRTOS/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 414:..\FreeRTOS/event_groups.c **** 					{
 415:..\FreeRTOS/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 416:..\FreeRTOS/event_groups.c **** 					}
 417:..\FreeRTOS/event_groups.c **** 					else
 418:..\FreeRTOS/event_groups.c **** 					{
 419:..\FreeRTOS/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 420:..\FreeRTOS/event_groups.c **** 					}
 421:..\FreeRTOS/event_groups.c **** 				}
 422:..\FreeRTOS/event_groups.c **** 				else
 423:..\FreeRTOS/event_groups.c **** 				{
 424:..\FreeRTOS/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 425:..\FreeRTOS/event_groups.c **** 				}
 426:..\FreeRTOS/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 427:..\FreeRTOS/event_groups.c **** 			}
 428:..\FreeRTOS/event_groups.c **** 			taskEXIT_CRITICAL();
 429:..\FreeRTOS/event_groups.c **** 		}
 430:..\FreeRTOS/event_groups.c **** 		else
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 9


 431:..\FreeRTOS/event_groups.c **** 		{
 432:..\FreeRTOS/event_groups.c **** 			/* The task unblocked because the bits were set. */
 433:..\FreeRTOS/event_groups.c **** 		}
 434:..\FreeRTOS/event_groups.c **** 
 435:..\FreeRTOS/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 436:..\FreeRTOS/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 437:..\FreeRTOS/event_groups.c **** 	}
 438:..\FreeRTOS/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 439:..\FreeRTOS/event_groups.c **** 
 440:..\FreeRTOS/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 441:..\FreeRTOS/event_groups.c **** 	( void ) xTimeoutOccurred;
 442:..\FreeRTOS/event_groups.c **** 
 443:..\FreeRTOS/event_groups.c **** 	return uxReturn;
 444:..\FreeRTOS/event_groups.c **** }
 445:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 446:..\FreeRTOS/event_groups.c **** 
 447:..\FreeRTOS/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 448:..\FreeRTOS/event_groups.c **** {
 449:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 450:..\FreeRTOS/event_groups.c **** EventBits_t uxReturn;
 451:..\FreeRTOS/event_groups.c **** 
 452:..\FreeRTOS/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 453:..\FreeRTOS/event_groups.c **** 	itself. */
 454:..\FreeRTOS/event_groups.c **** 	configASSERT( xEventGroup );
 455:..\FreeRTOS/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 456:..\FreeRTOS/event_groups.c **** 
 457:..\FreeRTOS/event_groups.c **** 	taskENTER_CRITICAL();
 458:..\FreeRTOS/event_groups.c **** 	{
 459:..\FreeRTOS/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 460:..\FreeRTOS/event_groups.c **** 
 461:..\FreeRTOS/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 462:..\FreeRTOS/event_groups.c **** 		cleared. */
 463:..\FreeRTOS/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 464:..\FreeRTOS/event_groups.c **** 
 465:..\FreeRTOS/event_groups.c **** 		/* Clear the bits. */
 466:..\FreeRTOS/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 467:..\FreeRTOS/event_groups.c **** 	}
 468:..\FreeRTOS/event_groups.c **** 	taskEXIT_CRITICAL();
 469:..\FreeRTOS/event_groups.c **** 
 470:..\FreeRTOS/event_groups.c **** 	return uxReturn;
 471:..\FreeRTOS/event_groups.c **** }
 472:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 473:..\FreeRTOS/event_groups.c **** 
 474:..\FreeRTOS/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 475:..\FreeRTOS/event_groups.c **** 
 476:..\FreeRTOS/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 477:..\FreeRTOS/event_groups.c **** 	{
 478:..\FreeRTOS/event_groups.c **** 		BaseType_t xReturn;
 479:..\FreeRTOS/event_groups.c **** 
 480:..\FreeRTOS/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 481:..\FreeRTOS/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 482:..\FreeRTOS/event_groups.c **** 
 483:..\FreeRTOS/event_groups.c **** 		return xReturn;
 484:..\FreeRTOS/event_groups.c **** 	}
 485:..\FreeRTOS/event_groups.c **** 
 486:..\FreeRTOS/event_groups.c **** #endif
 487:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 10


 488:..\FreeRTOS/event_groups.c **** 
 489:..\FreeRTOS/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 490:..\FreeRTOS/event_groups.c **** {
 491:..\FreeRTOS/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 492:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 493:..\FreeRTOS/event_groups.c **** EventBits_t uxReturn;
 494:..\FreeRTOS/event_groups.c **** 
 495:..\FreeRTOS/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 496:..\FreeRTOS/event_groups.c **** 	{
 497:..\FreeRTOS/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 498:..\FreeRTOS/event_groups.c **** 	}
 499:..\FreeRTOS/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 500:..\FreeRTOS/event_groups.c **** 
 501:..\FreeRTOS/event_groups.c **** 	return uxReturn;
 502:..\FreeRTOS/event_groups.c **** }
 503:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 504:..\FreeRTOS/event_groups.c **** 
 505:..\FreeRTOS/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 506:..\FreeRTOS/event_groups.c **** {
 507:..\FreeRTOS/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 508:..\FreeRTOS/event_groups.c **** ListItem_t const *pxListEnd;
 509:..\FreeRTOS/event_groups.c **** List_t *pxList;
 510:..\FreeRTOS/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 511:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 512:..\FreeRTOS/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 513:..\FreeRTOS/event_groups.c **** 
 514:..\FreeRTOS/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 515:..\FreeRTOS/event_groups.c **** 	itself. */
 516:..\FreeRTOS/event_groups.c **** 	configASSERT( xEventGroup );
 517:..\FreeRTOS/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 518:..\FreeRTOS/event_groups.c **** 
 519:..\FreeRTOS/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 520:..\FreeRTOS/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as th
 521:..\FreeRTOS/event_groups.c **** 	vTaskSuspendAll();
 522:..\FreeRTOS/event_groups.c **** 	{
 523:..\FreeRTOS/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 524:..\FreeRTOS/event_groups.c **** 
 525:..\FreeRTOS/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 526:..\FreeRTOS/event_groups.c **** 
 527:..\FreeRTOS/event_groups.c **** 		/* Set the bits. */
 528:..\FreeRTOS/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 529:..\FreeRTOS/event_groups.c **** 
 530:..\FreeRTOS/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 531:..\FreeRTOS/event_groups.c **** 		while( pxListItem != pxListEnd )
 532:..\FreeRTOS/event_groups.c **** 		{
 533:..\FreeRTOS/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 534:..\FreeRTOS/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 535:..\FreeRTOS/event_groups.c **** 			xMatchFound = pdFALSE;
 536:..\FreeRTOS/event_groups.c **** 
 537:..\FreeRTOS/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 538:..\FreeRTOS/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 539:..\FreeRTOS/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 540:..\FreeRTOS/event_groups.c **** 
 541:..\FreeRTOS/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 542:..\FreeRTOS/event_groups.c **** 			{
 543:..\FreeRTOS/event_groups.c **** 				/* Just looking for single bit being set. */
 544:..\FreeRTOS/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 11


 545:..\FreeRTOS/event_groups.c **** 				{
 546:..\FreeRTOS/event_groups.c **** 					xMatchFound = pdTRUE;
 547:..\FreeRTOS/event_groups.c **** 				}
 548:..\FreeRTOS/event_groups.c **** 				else
 549:..\FreeRTOS/event_groups.c **** 				{
 550:..\FreeRTOS/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 551:..\FreeRTOS/event_groups.c **** 				}
 552:..\FreeRTOS/event_groups.c **** 			}
 553:..\FreeRTOS/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 554:..\FreeRTOS/event_groups.c **** 			{
 555:..\FreeRTOS/event_groups.c **** 				/* All bits are set. */
 556:..\FreeRTOS/event_groups.c **** 				xMatchFound = pdTRUE;
 557:..\FreeRTOS/event_groups.c **** 			}
 558:..\FreeRTOS/event_groups.c **** 			else
 559:..\FreeRTOS/event_groups.c **** 			{
 560:..\FreeRTOS/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 561:..\FreeRTOS/event_groups.c **** 			}
 562:..\FreeRTOS/event_groups.c **** 
 563:..\FreeRTOS/event_groups.c **** 			if( xMatchFound != pdFALSE )
 564:..\FreeRTOS/event_groups.c **** 			{
 565:..\FreeRTOS/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 566:..\FreeRTOS/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 567:..\FreeRTOS/event_groups.c **** 				{
 568:..\FreeRTOS/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 569:..\FreeRTOS/event_groups.c **** 				}
 570:..\FreeRTOS/event_groups.c **** 				else
 571:..\FreeRTOS/event_groups.c **** 				{
 572:..\FreeRTOS/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 573:..\FreeRTOS/event_groups.c **** 				}
 574:..\FreeRTOS/event_groups.c **** 
 575:..\FreeRTOS/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 576:..\FreeRTOS/event_groups.c **** 				item before removing the task from the event list.  The
 577:..\FreeRTOS/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 578:..\FreeRTOS/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 579:..\FreeRTOS/event_groups.c **** 				than because it timed out. */
 580:..\FreeRTOS/event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 581:..\FreeRTOS/event_groups.c **** 			}
 582:..\FreeRTOS/event_groups.c **** 
 583:..\FreeRTOS/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 584:..\FreeRTOS/event_groups.c **** 			used here as the list item may have been removed from the event list
 585:..\FreeRTOS/event_groups.c **** 			and inserted into the ready/pending reading list. */
 586:..\FreeRTOS/event_groups.c **** 			pxListItem = pxNext;
 587:..\FreeRTOS/event_groups.c **** 		}
 588:..\FreeRTOS/event_groups.c **** 
 589:..\FreeRTOS/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 590:..\FreeRTOS/event_groups.c **** 		bit was set in the control word. */
 591:..\FreeRTOS/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 592:..\FreeRTOS/event_groups.c **** 	}
 593:..\FreeRTOS/event_groups.c **** 	( void ) xTaskResumeAll();
 594:..\FreeRTOS/event_groups.c **** 
 595:..\FreeRTOS/event_groups.c **** 	return pxEventBits->uxEventBits;
 596:..\FreeRTOS/event_groups.c **** }
 597:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 598:..\FreeRTOS/event_groups.c **** 
 599:..\FreeRTOS/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 600:..\FreeRTOS/event_groups.c **** {
 601:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 12


 602:..\FreeRTOS/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 603:..\FreeRTOS/event_groups.c **** 
 604:..\FreeRTOS/event_groups.c **** 	vTaskSuspendAll();
 605:..\FreeRTOS/event_groups.c **** 	{
 606:..\FreeRTOS/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 607:..\FreeRTOS/event_groups.c **** 
 608:..\FreeRTOS/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 609:..\FreeRTOS/event_groups.c **** 		{
 610:..\FreeRTOS/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 611:..\FreeRTOS/event_groups.c **** 			and cannot therefore have any bits set. */
 612:..\FreeRTOS/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 613:..\FreeRTOS/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 614:..\FreeRTOS/event_groups.c **** 		}
 615:..\FreeRTOS/event_groups.c **** 
 616:..\FreeRTOS/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 617:..\FreeRTOS/event_groups.c **** 		{
 618:..\FreeRTOS/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 619:..\FreeRTOS/event_groups.c **** 			it again. */
 620:..\FreeRTOS/event_groups.c **** 			vPortFree( pxEventBits );
 621:..\FreeRTOS/event_groups.c **** 		}
 622:..\FreeRTOS/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 623:..\FreeRTOS/event_groups.c **** 		{
 624:..\FreeRTOS/event_groups.c **** 			/* The event group could have been allocated statically or
 625:..\FreeRTOS/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 626:..\FreeRTOS/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 627:..\FreeRTOS/event_groups.c **** 			{
 628:..\FreeRTOS/event_groups.c **** 				vPortFree( pxEventBits );
 629:..\FreeRTOS/event_groups.c **** 			}
 630:..\FreeRTOS/event_groups.c **** 			else
 631:..\FreeRTOS/event_groups.c **** 			{
 632:..\FreeRTOS/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 633:..\FreeRTOS/event_groups.c **** 			}
 634:..\FreeRTOS/event_groups.c **** 		}
 635:..\FreeRTOS/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 636:..\FreeRTOS/event_groups.c **** 	}
 637:..\FreeRTOS/event_groups.c **** 	( void ) xTaskResumeAll();
 638:..\FreeRTOS/event_groups.c **** }
 639:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 640:..\FreeRTOS/event_groups.c **** 
 641:..\FreeRTOS/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 642:..\FreeRTOS/event_groups.c **** an interrupt. */
 643:..\FreeRTOS/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 644:..\FreeRTOS/event_groups.c **** {
 645:..\FreeRTOS/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 646:..\FreeRTOS/event_groups.c **** }
 647:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 648:..\FreeRTOS/event_groups.c **** 
 649:..\FreeRTOS/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 650:..\FreeRTOS/event_groups.c **** an interrupt. */
 651:..\FreeRTOS/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 652:..\FreeRTOS/event_groups.c **** {
 653:..\FreeRTOS/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 654:..\FreeRTOS/event_groups.c **** }
 655:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 656:..\FreeRTOS/event_groups.c **** 
 657:..\FreeRTOS/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 658:..\FreeRTOS/event_groups.c **** {
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 13


  27              		.loc 1 658 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 659:..\FreeRTOS/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 660:..\FreeRTOS/event_groups.c **** 
 661:..\FreeRTOS/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
  33              		.loc 1 661 0
  34 0000 1AB9     		cbnz	r2, .L2
 662:..\FreeRTOS/event_groups.c **** 	{
 663:..\FreeRTOS/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 664:..\FreeRTOS/event_groups.c **** 		set.  Is one already set? */
 665:..\FreeRTOS/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
  35              		.loc 1 665 0
  36 0002 0842     		tst	r0, r1
  37 0004 06D1     		bne	.L4
 659:..\FreeRTOS/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
  38              		.loc 1 659 0
  39 0006 0020     		movs	r0, #0
  40              	.LVL1:
  41 0008 7047     		bx	lr
  42              	.LVL2:
  43              	.L2:
 666:..\FreeRTOS/event_groups.c **** 		{
 667:..\FreeRTOS/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 668:..\FreeRTOS/event_groups.c **** 		}
 669:..\FreeRTOS/event_groups.c **** 		else
 670:..\FreeRTOS/event_groups.c **** 		{
 671:..\FreeRTOS/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 672:..\FreeRTOS/event_groups.c **** 		}
 673:..\FreeRTOS/event_groups.c **** 	}
 674:..\FreeRTOS/event_groups.c **** 	else
 675:..\FreeRTOS/event_groups.c **** 	{
 676:..\FreeRTOS/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 677:..\FreeRTOS/event_groups.c **** 		Are they set already? */
 678:..\FreeRTOS/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
  44              		.loc 1 678 0
  45 000a 31EA0003 		bics	r3, r1, r0
  46 000e 03D0     		beq	.L5
 659:..\FreeRTOS/event_groups.c **** 
  47              		.loc 1 659 0
  48 0010 0020     		movs	r0, #0
  49              	.LVL3:
  50 0012 7047     		bx	lr
  51              	.LVL4:
  52              	.L4:
 667:..\FreeRTOS/event_groups.c **** 		}
  53              		.loc 1 667 0
  54 0014 0120     		movs	r0, #1
  55              	.LVL5:
  56 0016 7047     		bx	lr
  57              	.LVL6:
  58              	.L5:
 679:..\FreeRTOS/event_groups.c **** 		{
 680:..\FreeRTOS/event_groups.c **** 			xWaitConditionMet = pdTRUE;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 14


  59              		.loc 1 680 0
  60 0018 0120     		movs	r0, #1
  61              	.LVL7:
 681:..\FreeRTOS/event_groups.c **** 		}
 682:..\FreeRTOS/event_groups.c **** 		else
 683:..\FreeRTOS/event_groups.c **** 		{
 684:..\FreeRTOS/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 685:..\FreeRTOS/event_groups.c **** 		}
 686:..\FreeRTOS/event_groups.c **** 	}
 687:..\FreeRTOS/event_groups.c **** 
 688:..\FreeRTOS/event_groups.c **** 	return xWaitConditionMet;
 689:..\FreeRTOS/event_groups.c **** }
  62              		.loc 1 689 0
  63 001a 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE78:
  66              		.size	prvTestWaitCondition, .-prvTestWaitCondition
  67              		.section	.text.xEventGroupCreate,"ax",%progbits
  68              		.align	2
  69              		.global	xEventGroupCreate
  70              		.thumb
  71              		.thumb_func
  72              		.type	xEventGroupCreate, %function
  73              	xEventGroupCreate:
  74              	.LFB69:
 144:..\FreeRTOS/event_groups.c **** 	EventGroup_t *pxEventBits;
  75              		.loc 1 144 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 148:..\FreeRTOS/event_groups.c **** 
  83              		.loc 1 148 0
  84 0002 1820     		movs	r0, #24
  85 0004 FFF7FEFF 		bl	pvPortMalloc
  86              	.LVL8:
 150:..\FreeRTOS/event_groups.c **** 		{
  87              		.loc 1 150 0
  88 0008 0446     		mov	r4, r0
  89 000a 20B1     		cbz	r0, .L7
 152:..\FreeRTOS/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
  90              		.loc 1 152 0
  91 000c 0023     		movs	r3, #0
  92 000e 40F8043B 		str	r3, [r0], #4
  93              	.LVL9:
 153:..\FreeRTOS/event_groups.c **** 
  94              		.loc 1 153 0
  95 0012 FFF7FEFF 		bl	vListInitialise
  96              	.LVL10:
  97              	.L7:
 172:..\FreeRTOS/event_groups.c **** 
  98              		.loc 1 172 0
  99 0016 2046     		mov	r0, r4
 100 0018 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 15


 101              		.cfi_endproc
 102              	.LFE69:
 103              		.size	xEventGroupCreate, .-xEventGroupCreate
 104 001a 00BF     		.section	.text.xEventGroupWaitBits,"ax",%progbits
 105              		.align	2
 106              		.global	xEventGroupWaitBits
 107              		.thumb
 108              		.thumb_func
 109              		.type	xEventGroupWaitBits, %function
 110              	xEventGroupWaitBits:
 111              	.LFB71:
 298:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 112              		.loc 1 298 0
 113              		.cfi_startproc
 114              		@ args = 4, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL11:
 117 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 118              		.cfi_def_cfa_offset 32
 119              		.cfi_offset 3, -32
 120              		.cfi_offset 4, -28
 121              		.cfi_offset 5, -24
 122              		.cfi_offset 6, -20
 123              		.cfi_offset 7, -16
 124              		.cfi_offset 8, -12
 125              		.cfi_offset 9, -8
 126              		.cfi_offset 14, -4
 127 0004 0746     		mov	r7, r0
 128 0006 0E46     		mov	r6, r1
 129 0008 9146     		mov	r9, r2
 130 000a 9846     		mov	r8, r3
 131 000c 089D     		ldr	r5, [sp, #32]
 132              	.LVL12:
 315:..\FreeRTOS/event_groups.c **** 	{
 133              		.loc 1 315 0
 134 000e FFF7FEFF 		bl	vTaskSuspendAll
 135              	.LVL13:
 136              	.LBB6:
 317:..\FreeRTOS/event_groups.c **** 
 137              		.loc 1 317 0
 138 0012 3C68     		ldr	r4, [r7]
 139              	.LVL14:
 320:..\FreeRTOS/event_groups.c **** 
 140              		.loc 1 320 0
 141 0014 4246     		mov	r2, r8
 142 0016 3146     		mov	r1, r6
 143 0018 2046     		mov	r0, r4
 144 001a FFF7FEFF 		bl	prvTestWaitCondition
 145              	.LVL15:
 322:..\FreeRTOS/event_groups.c **** 		{
 146              		.loc 1 322 0
 147 001e 38B1     		cbz	r0, .L10
 148              	.LVL16:
 330:..\FreeRTOS/event_groups.c **** 			{
 149              		.loc 1 330 0
 150 0020 B9F1000F 		cmp	r9, #0
 151 0024 18D0     		beq	.L18
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 16


 332:..\FreeRTOS/event_groups.c **** 			}
 152              		.loc 1 332 0
 153 0026 24EA0603 		bic	r3, r4, r6
 154 002a 3B60     		str	r3, [r7]
 327:..\FreeRTOS/event_groups.c **** 
 155              		.loc 1 327 0
 156 002c 0025     		movs	r5, #0
 157 002e 14E0     		b	.L11
 158              	.LVL17:
 159              	.L10:
 339:..\FreeRTOS/event_groups.c **** 		{
 160              		.loc 1 339 0
 161 0030 9DB1     		cbz	r5, .L11
 352:..\FreeRTOS/event_groups.c **** 			{
 162              		.loc 1 352 0
 163 0032 B9F1000F 		cmp	r9, #0
 164 0036 01D1     		bne	.L19
 165              	.LBE6:
 300:..\FreeRTOS/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 166              		.loc 1 300 0
 167 0038 0021     		movs	r1, #0
 168 003a 01E0     		b	.L12
 169              	.L19:
 170              	.LBB7:
 354:..\FreeRTOS/event_groups.c **** 			}
 171              		.loc 1 354 0
 172 003c 4FF08071 		mov	r1, #16777216
 173              	.L12:
 174              	.LVL18:
 361:..\FreeRTOS/event_groups.c **** 			{
 175              		.loc 1 361 0
 176 0040 B8F1000F 		cmp	r8, #0
 177 0044 01D0     		beq	.L13
 363:..\FreeRTOS/event_groups.c **** 			}
 178              		.loc 1 363 0
 179 0046 41F08061 		orr	r1, r1, #67108864
 180              	.LVL19:
 181              	.L13:
 373:..\FreeRTOS/event_groups.c **** 
 182              		.loc 1 373 0
 183 004a 2A46     		mov	r2, r5
 184 004c 3143     		orrs	r1, r1, r6
 185              	.LVL20:
 186 004e 381D     		adds	r0, r7, #4
 187              	.LVL21:
 188 0050 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 189              	.LVL22:
 378:..\FreeRTOS/event_groups.c **** 
 190              		.loc 1 378 0
 191 0054 0024     		movs	r4, #0
 192              	.LVL23:
 193 0056 00E0     		b	.L11
 194              	.LVL24:
 195              	.L18:
 327:..\FreeRTOS/event_groups.c **** 
 196              		.loc 1 327 0
 197 0058 0025     		movs	r5, #0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 17


 198              	.LVL25:
 199              	.L11:
 200              	.LBE7:
 383:..\FreeRTOS/event_groups.c **** 
 201              		.loc 1 383 0
 202 005a FFF7FEFF 		bl	xTaskResumeAll
 203              	.LVL26:
 385:..\FreeRTOS/event_groups.c **** 	{
 204              		.loc 1 385 0
 205 005e 0DB3     		cbz	r5, .L14
 387:..\FreeRTOS/event_groups.c **** 		{
 206              		.loc 1 387 0
 207 0060 38B9     		cbnz	r0, .L15
 389:..\FreeRTOS/event_groups.c **** 		}
 208              		.loc 1 389 0
 209 0062 4FF08052 		mov	r2, #268435456
 210 0066 114B     		ldr	r3, .L21
 211 0068 1A60     		str	r2, [r3]
 212              		.syntax unified
 213              	@ 389 "..\FreeRTOS\event_groups.c" 1
 214 006a BFF34F8F 		dsb
 215              	@ 0 "" 2
 216              	@ 389 "..\FreeRTOS\event_groups.c" 1
 217 006e BFF36F8F 		isb
 218              	@ 0 "" 2
 219              		.thumb
 220              		.syntax unified
 221              	.L15:
 400:..\FreeRTOS/event_groups.c **** 
 222              		.loc 1 400 0
 223 0072 FFF7FEFF 		bl	uxTaskResetEventItemValue
 224              	.LVL27:
 225 0076 0446     		mov	r4, r0
 226              	.LVL28:
 402:..\FreeRTOS/event_groups.c **** 		{
 227              		.loc 1 402 0
 228 0078 10F0007F 		tst	r0, #33554432
 229 007c 10D1     		bne	.L16
 404:..\FreeRTOS/event_groups.c **** 			{
 230              		.loc 1 404 0
 231 007e FFF7FEFF 		bl	vPortEnterCritical
 232              	.LVL29:
 407:..\FreeRTOS/event_groups.c **** 
 233              		.loc 1 407 0
 234 0082 3C68     		ldr	r4, [r7]
 235              	.LVL30:
 411:..\FreeRTOS/event_groups.c **** 				{
 236              		.loc 1 411 0
 237 0084 4246     		mov	r2, r8
 238 0086 3146     		mov	r1, r6
 239 0088 2046     		mov	r0, r4
 240 008a FFF7FEFF 		bl	prvTestWaitCondition
 241              	.LVL31:
 242 008e 28B1     		cbz	r0, .L17
 413:..\FreeRTOS/event_groups.c **** 					{
 243              		.loc 1 413 0
 244 0090 B9F1000F 		cmp	r9, #0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 18


 245 0094 02D0     		beq	.L17
 415:..\FreeRTOS/event_groups.c **** 					}
 246              		.loc 1 415 0
 247 0096 24EA0606 		bic	r6, r4, r6
 248              	.LVL32:
 249 009a 3E60     		str	r6, [r7]
 250              	.L17:
 251              	.LVL33:
 428:..\FreeRTOS/event_groups.c **** 		}
 252              		.loc 1 428 0
 253 009c FFF7FEFF 		bl	vPortExitCritical
 254              	.LVL34:
 255              	.L16:
 436:..\FreeRTOS/event_groups.c **** 	}
 256              		.loc 1 436 0
 257 00a0 24F07F44 		bic	r4, r4, #-16777216
 258              	.LVL35:
 259              	.L14:
 444:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 260              		.loc 1 444 0
 261 00a4 2046     		mov	r0, r4
 262 00a6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 263              	.LVL36:
 264              	.L22:
 265 00aa 00BF     		.align	2
 266              	.L21:
 267 00ac 04ED00E0 		.word	-536810236
 268              		.cfi_endproc
 269              	.LFE71:
 270              		.size	xEventGroupWaitBits, .-xEventGroupWaitBits
 271              		.section	.text.xEventGroupClearBits,"ax",%progbits
 272              		.align	2
 273              		.global	xEventGroupClearBits
 274              		.thumb
 275              		.thumb_func
 276              		.type	xEventGroupClearBits, %function
 277              	xEventGroupClearBits:
 278              	.LFB72:
 448:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 279              		.loc 1 448 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL37:
 284 0000 70B5     		push	{r4, r5, r6, lr}
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
 290 0002 0646     		mov	r6, r0
 291 0004 0C46     		mov	r4, r1
 292              	.LVL38:
 457:..\FreeRTOS/event_groups.c **** 	{
 293              		.loc 1 457 0
 294 0006 FFF7FEFF 		bl	vPortEnterCritical
 295              	.LVL39:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 19


 463:..\FreeRTOS/event_groups.c **** 
 296              		.loc 1 463 0
 297 000a 3568     		ldr	r5, [r6]
 298              	.LVL40:
 466:..\FreeRTOS/event_groups.c **** 	}
 299              		.loc 1 466 0
 300 000c 25EA0404 		bic	r4, r5, r4
 301              	.LVL41:
 302 0010 3460     		str	r4, [r6]
 468:..\FreeRTOS/event_groups.c **** 
 303              		.loc 1 468 0
 304 0012 FFF7FEFF 		bl	vPortExitCritical
 305              	.LVL42:
 471:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 306              		.loc 1 471 0
 307 0016 2846     		mov	r0, r5
 308 0018 70BD     		pop	{r4, r5, r6, pc}
 309              		.cfi_endproc
 310              	.LFE72:
 311              		.size	xEventGroupClearBits, .-xEventGroupClearBits
 312 001a 00BF     		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 313              		.align	2
 314              		.global	xEventGroupGetBitsFromISR
 315              		.thumb
 316              		.thumb_func
 317              		.type	xEventGroupGetBitsFromISR, %function
 318              	xEventGroupGetBitsFromISR:
 319              	.LFB73:
 490:..\FreeRTOS/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 320              		.loc 1 490 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL43:
 326              	.LBB8:
 327              	.LBB9:
 328              		.file 2 "..\\FreeRTOS\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.0
   3:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software. If you wish to use our Amazon
  14:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS name, please do so in a fair use way that does not cause confusion.
  15:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  16:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 20


  20:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  23:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  24:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  25:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  26:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  27:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  */
  28:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdio.h>
  29:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdlib.h>
  30:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdint.h>
  31:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdbool.h>
  32:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include "projdefs.h"
  33:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  34:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  35:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  36:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  37:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  38:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  39:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  40:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
  41:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  42:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  43:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  44:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  45:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  46:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  47:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  48:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  49:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  50:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  */
  51:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  52:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  53:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** // Added by Airs
  54:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portALIGNMENT_ASSERT_pxCurrentTCB ( void )
  55:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  56:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  57:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  58:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  59:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  60:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  61:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  62:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  63:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  64:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  65:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  67:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  68:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  69:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  70:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  71:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  72:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  73:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #else
  74:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  75:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  76:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 21


  77:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  78:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  79:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  80:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
  81:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  82:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  83:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  84:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  85:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  86:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  87:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  88:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  89:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  90:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  91:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  92:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  93:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  94:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  95:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  96:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  97:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  98:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  99:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 100:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 101:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 102:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 103:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 104:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 105:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 106:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 107:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
 108:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 109:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 110:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 111:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 112:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 113:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 114:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 115:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 116:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 117:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 118:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 119:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 120:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 121:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 122:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 123:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 124:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 125:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 126:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 127:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 128:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 129:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 130:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 131:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 132:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 133:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 22


 134:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 135:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 136:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 137:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 139:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 140:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 141:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 142:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	{
 143:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 144:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 145:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 146:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 147:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	}
 148:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 150:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 151:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 152:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 153:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 154:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 155:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 156:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 157:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 158:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 159:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 161:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 162:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 163:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 164:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 165:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 166:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 167:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 168:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 169:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 170:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 171:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 172:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 173:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 175:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 176:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 177:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 178:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 179:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 180:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 181:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 182:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 183:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 184:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 185:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 186:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 187:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 188:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 189:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	{
 190:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 23


 191:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	}
 192:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	else
 193:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	{
 194:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 195:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	}
 196:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 197:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 198:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 199:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 200:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 201:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 202:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 203:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 204:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 205:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 206:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 207:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	(
 208:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 209:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 210:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 211:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 212:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 213:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	);
 214:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 215:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 216:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 217:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 218:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 219:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 220:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 221:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 222:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 329              		.loc 2 222 0
 330              		.syntax unified
 331              	@ 222 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 332 0000 EFF31183 			mrs r3, basepri											
 333 0004 4FF0A002 		mov r2, #160												
 334 0008 82F31188 		msr basepri, r2											
 335 000c BFF36F8F 		isb														
 336 0010 BFF34F8F 		dsb														
 337              	
 338              	@ 0 "" 2
 339              		.thumb
 340              		.syntax unified
 341              	.LBE9:
 342              	.LBE8:
 497:..\FreeRTOS/event_groups.c **** 	}
 343              		.loc 1 497 0
 344 0014 0068     		ldr	r0, [r0]
 345              	.LVL44:
 346              	.LBB10:
 347              	.LBB11:
 223:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	(
 224:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 225:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 226:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 227:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 24


 228:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 229:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 230:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	);
 231:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 232:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 233:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 234:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 235:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 236:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 237:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 238:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 239:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 240:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 348              		.loc 2 240 0
 349              		.syntax unified
 350              	@ 240 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 351 0016 83F31188 			msr basepri, r3	
 352              	@ 0 "" 2
 353              		.thumb
 354              		.syntax unified
 355              	.LBE11:
 356              	.LBE10:
 502:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 357              		.loc 1 502 0
 358 001a 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE73:
 361              		.size	xEventGroupGetBitsFromISR, .-xEventGroupGetBitsFromISR
 362              		.section	.text.xEventGroupSetBits,"ax",%progbits
 363              		.align	2
 364              		.global	xEventGroupSetBits
 365              		.thumb
 366              		.thumb_func
 367              		.type	xEventGroupSetBits, %function
 368              	xEventGroupSetBits:
 369              	.LFB74:
 506:..\FreeRTOS/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 370              		.loc 1 506 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL45:
 375 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 376              		.cfi_def_cfa_offset 24
 377              		.cfi_offset 3, -24
 378              		.cfi_offset 4, -20
 379              		.cfi_offset 5, -16
 380              		.cfi_offset 6, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 0446     		mov	r4, r0
 384 0004 0D46     		mov	r5, r1
 385              	.LVL46:
 520:..\FreeRTOS/event_groups.c **** 	vTaskSuspendAll();
 386              		.loc 1 520 0
 387 0006 00F10C06 		add	r6, r0, #12
 388              	.LVL47:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 25


 521:..\FreeRTOS/event_groups.c **** 	{
 389              		.loc 1 521 0
 390 000a FFF7FEFF 		bl	vTaskSuspendAll
 391              	.LVL48:
 525:..\FreeRTOS/event_groups.c **** 
 392              		.loc 1 525 0
 393 000e 2069     		ldr	r0, [r4, #16]
 394              	.LVL49:
 528:..\FreeRTOS/event_groups.c **** 
 395              		.loc 1 528 0
 396 0010 2368     		ldr	r3, [r4]
 397 0012 1D43     		orrs	r5, r5, r3
 398              	.LVL50:
 399 0014 2560     		str	r5, [r4]
 510:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 400              		.loc 1 510 0
 401 0016 0027     		movs	r7, #0
 531:..\FreeRTOS/event_groups.c **** 		{
 402              		.loc 1 531 0
 403 0018 1FE0     		b	.L27
 404              	.LVL51:
 405              	.L32:
 533:..\FreeRTOS/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 406              		.loc 1 533 0
 407 001a 4568     		ldr	r5, [r0, #4]
 408              	.LVL52:
 534:..\FreeRTOS/event_groups.c **** 			xMatchFound = pdFALSE;
 409              		.loc 1 534 0
 410 001c 0368     		ldr	r3, [r0]
 411              	.LVL53:
 539:..\FreeRTOS/event_groups.c **** 
 412              		.loc 1 539 0
 413 001e 23F07F42 		bic	r2, r3, #-16777216
 414              	.LVL54:
 541:..\FreeRTOS/event_groups.c **** 			{
 415              		.loc 1 541 0
 416 0022 13F0806F 		tst	r3, #67108864
 417 0026 04D1     		bne	.L28
 544:..\FreeRTOS/event_groups.c **** 				{
 418              		.loc 1 544 0
 419 0028 2168     		ldr	r1, [r4]
 420 002a 0A42     		tst	r2, r1
 421 002c 07D1     		bne	.L33
 535:..\FreeRTOS/event_groups.c **** 
 422              		.loc 1 535 0
 423 002e 0021     		movs	r1, #0
 424 0030 08E0     		b	.L29
 425              	.L28:
 553:..\FreeRTOS/event_groups.c **** 			{
 426              		.loc 1 553 0
 427 0032 2168     		ldr	r1, [r4]
 428 0034 32EA0101 		bics	r1, r2, r1
 429 0038 03D0     		beq	.L34
 535:..\FreeRTOS/event_groups.c **** 
 430              		.loc 1 535 0
 431 003a 0021     		movs	r1, #0
 432 003c 02E0     		b	.L29
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 26


 433              	.L33:
 546:..\FreeRTOS/event_groups.c **** 				}
 434              		.loc 1 546 0
 435 003e 0121     		movs	r1, #1
 436 0040 00E0     		b	.L29
 437              	.L34:
 556:..\FreeRTOS/event_groups.c **** 			}
 438              		.loc 1 556 0
 439 0042 0121     		movs	r1, #1
 440              	.L29:
 441              	.LVL55:
 563:..\FreeRTOS/event_groups.c **** 			{
 442              		.loc 1 563 0
 443 0044 41B1     		cbz	r1, .L30
 566:..\FreeRTOS/event_groups.c **** 				{
 444              		.loc 1 566 0
 445 0046 13F0807F 		tst	r3, #16777216
 446 004a 00D0     		beq	.L31
 568:..\FreeRTOS/event_groups.c **** 				}
 447              		.loc 1 568 0
 448 004c 1743     		orrs	r7, r7, r2
 449              	.LVL56:
 450              	.L31:
 580:..\FreeRTOS/event_groups.c **** 			}
 451              		.loc 1 580 0
 452 004e 2168     		ldr	r1, [r4]
 453              	.LVL57:
 454 0050 41F00071 		orr	r1, r1, #33554432
 455 0054 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 456              	.LVL58:
 457              	.L30:
 535:..\FreeRTOS/event_groups.c **** 
 458              		.loc 1 535 0
 459 0058 2846     		mov	r0, r5
 460              	.LVL59:
 461              	.L27:
 531:..\FreeRTOS/event_groups.c **** 		{
 462              		.loc 1 531 0
 463 005a B042     		cmp	r0, r6
 464 005c DDD1     		bne	.L32
 591:..\FreeRTOS/event_groups.c **** 	}
 465              		.loc 1 591 0
 466 005e 2368     		ldr	r3, [r4]
 467 0060 23EA0707 		bic	r7, r3, r7
 468              	.LVL60:
 469 0064 2760     		str	r7, [r4]
 593:..\FreeRTOS/event_groups.c **** 
 470              		.loc 1 593 0
 471 0066 FFF7FEFF 		bl	xTaskResumeAll
 472              	.LVL61:
 596:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 473              		.loc 1 596 0
 474 006a 2068     		ldr	r0, [r4]
 475 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 476              		.cfi_endproc
 477              	.LFE74:
 478              		.size	xEventGroupSetBits, .-xEventGroupSetBits
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 27


 479 006e 00BF     		.section	.text.xEventGroupSync,"ax",%progbits
 480              		.align	2
 481              		.global	xEventGroupSync
 482              		.thumb
 483              		.thumb_func
 484              		.type	xEventGroupSync, %function
 485              	xEventGroupSync:
 486              	.LFB70:
 178:..\FreeRTOS/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 487              		.loc 1 178 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL62:
 492 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 493              		.cfi_def_cfa_offset 24
 494              		.cfi_offset 4, -24
 495              		.cfi_offset 5, -20
 496              		.cfi_offset 6, -16
 497              		.cfi_offset 7, -12
 498              		.cfi_offset 8, -8
 499              		.cfi_offset 14, -4
 500 0004 0546     		mov	r5, r0
 501 0006 0C46     		mov	r4, r1
 502 0008 1746     		mov	r7, r2
 503 000a 1E46     		mov	r6, r3
 504              	.LVL63:
 192:..\FreeRTOS/event_groups.c **** 	{
 505              		.loc 1 192 0
 506 000c FFF7FEFF 		bl	vTaskSuspendAll
 507              	.LVL64:
 194:..\FreeRTOS/event_groups.c **** 
 508              		.loc 1 194 0
 509 0010 D5F80080 		ldr	r8, [r5]
 510              	.LVL65:
 196:..\FreeRTOS/event_groups.c **** 
 511              		.loc 1 196 0
 512 0014 2146     		mov	r1, r4
 513 0016 2846     		mov	r0, r5
 514 0018 FFF7FEFF 		bl	xEventGroupSetBits
 515              	.LVL66:
 198:..\FreeRTOS/event_groups.c **** 		{
 516              		.loc 1 198 0
 517 001c 48EA0404 		orr	r4, r8, r4
 518              	.LVL67:
 519 0020 37EA0403 		bics	r3, r7, r4
 520 0024 05D1     		bne	.L37
 521              	.LVL68:
 205:..\FreeRTOS/event_groups.c **** 
 522              		.loc 1 205 0
 523 0026 2B68     		ldr	r3, [r5]
 524 0028 23EA0703 		bic	r3, r3, r7
 525 002c 2B60     		str	r3, [r5]
 526              	.LVL69:
 207:..\FreeRTOS/event_groups.c **** 		}
 527              		.loc 1 207 0
 528 002e 0026     		movs	r6, #0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 28


 529 0030 09E0     		b	.L38
 530              	.LVL70:
 531              	.L37:
 211:..\FreeRTOS/event_groups.c **** 			{
 532              		.loc 1 211 0
 533 0032 3EB1     		cbz	r6, .L39
 218:..\FreeRTOS/event_groups.c **** 
 534              		.loc 1 218 0
 535 0034 3246     		mov	r2, r6
 536 0036 47F0A061 		orr	r1, r7, #83886080
 537 003a 281D     		adds	r0, r5, #4
 538 003c FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 539              	.LVL71:
 224:..\FreeRTOS/event_groups.c **** 			}
 540              		.loc 1 224 0
 541 0040 0024     		movs	r4, #0
 542 0042 00E0     		b	.L38
 543              	.LVL72:
 544              	.L39:
 230:..\FreeRTOS/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 545              		.loc 1 230 0
 546 0044 2C68     		ldr	r4, [r5]
 547              	.LVL73:
 548              	.L38:
 235:..\FreeRTOS/event_groups.c **** 
 549              		.loc 1 235 0
 550 0046 FFF7FEFF 		bl	xTaskResumeAll
 551              	.LVL74:
 237:..\FreeRTOS/event_groups.c **** 	{
 552              		.loc 1 237 0
 553 004a DEB1     		cbz	r6, .L40
 239:..\FreeRTOS/event_groups.c **** 		{
 554              		.loc 1 239 0
 555 004c 38B9     		cbnz	r0, .L41
 241:..\FreeRTOS/event_groups.c **** 		}
 556              		.loc 1 241 0
 557 004e 4FF08052 		mov	r2, #268435456
 558 0052 0E4B     		ldr	r3, .L45
 559 0054 1A60     		str	r2, [r3]
 560              		.syntax unified
 561              	@ 241 "..\FreeRTOS\event_groups.c" 1
 562 0056 BFF34F8F 		dsb
 563              	@ 0 "" 2
 564              	@ 241 "..\FreeRTOS\event_groups.c" 1
 565 005a BFF36F8F 		isb
 566              	@ 0 "" 2
 567              		.thumb
 568              		.syntax unified
 569              	.L41:
 252:..\FreeRTOS/event_groups.c **** 
 570              		.loc 1 252 0
 571 005e FFF7FEFF 		bl	uxTaskResetEventItemValue
 572              	.LVL75:
 573 0062 0446     		mov	r4, r0
 574              	.LVL76:
 254:..\FreeRTOS/event_groups.c **** 		{
 575              		.loc 1 254 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 29


 576 0064 10F0007F 		tst	r0, #33554432
 577 0068 0AD1     		bne	.L42
 257:..\FreeRTOS/event_groups.c **** 			{
 578              		.loc 1 257 0
 579 006a FFF7FEFF 		bl	vPortEnterCritical
 580              	.LVL77:
 259:..\FreeRTOS/event_groups.c **** 
 581              		.loc 1 259 0
 582 006e 2C68     		ldr	r4, [r5]
 583              	.LVL78:
 265:..\FreeRTOS/event_groups.c **** 				{
 584              		.loc 1 265 0
 585 0070 37EA0403 		bics	r3, r7, r4
 586 0074 02D1     		bne	.L43
 267:..\FreeRTOS/event_groups.c **** 				}
 587              		.loc 1 267 0
 588 0076 24EA0707 		bic	r7, r4, r7
 589              	.LVL79:
 590 007a 2F60     		str	r7, [r5]
 591              	.L43:
 274:..\FreeRTOS/event_groups.c **** 
 592              		.loc 1 274 0
 593 007c FFF7FEFF 		bl	vPortExitCritical
 594              	.LVL80:
 595              	.L42:
 285:..\FreeRTOS/event_groups.c **** 	}
 596              		.loc 1 285 0
 597 0080 24F07F44 		bic	r4, r4, #-16777216
 598              	.LVL81:
 599              	.L40:
 294:..\FreeRTOS/event_groups.c **** /*-----------------------------------------------------------*/
 600              		.loc 1 294 0
 601 0084 2046     		mov	r0, r4
 602 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 603              	.LVL82:
 604              	.L46:
 605 008a 00BF     		.align	2
 606              	.L45:
 607 008c 04ED00E0 		.word	-536810236
 608              		.cfi_endproc
 609              	.LFE70:
 610              		.size	xEventGroupSync, .-xEventGroupSync
 611              		.section	.text.vEventGroupDelete,"ax",%progbits
 612              		.align	2
 613              		.global	vEventGroupDelete
 614              		.thumb
 615              		.thumb_func
 616              		.type	vEventGroupDelete, %function
 617              	vEventGroupDelete:
 618              	.LFB75:
 600:..\FreeRTOS/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 619              		.loc 1 600 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              	.LVL83:
 624 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 30


 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 628 0002 0446     		mov	r4, r0
 629              	.LVL84:
 604:..\FreeRTOS/event_groups.c **** 	{
 630              		.loc 1 604 0
 631 0004 FFF7FEFF 		bl	vTaskSuspendAll
 632              	.LVL85:
 608:..\FreeRTOS/event_groups.c **** 		{
 633              		.loc 1 608 0
 634 0008 04E0     		b	.L48
 635              	.L49:
 613:..\FreeRTOS/event_groups.c **** 		}
 636              		.loc 1 613 0
 637 000a 4FF00071 		mov	r1, #33554432
 638 000e 2069     		ldr	r0, [r4, #16]
 639 0010 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 640              	.LVL86:
 641              	.L48:
 608:..\FreeRTOS/event_groups.c **** 		{
 642              		.loc 1 608 0
 643 0014 6368     		ldr	r3, [r4, #4]
 644 0016 002B     		cmp	r3, #0
 645 0018 F7D1     		bne	.L49
 620:..\FreeRTOS/event_groups.c **** 		}
 646              		.loc 1 620 0
 647 001a 2046     		mov	r0, r4
 648 001c FFF7FEFF 		bl	vPortFree
 649              	.LVL87:
 637:..\FreeRTOS/event_groups.c **** }
 650              		.loc 1 637 0
 651 0020 FFF7FEFF 		bl	xTaskResumeAll
 652              	.LVL88:
 653 0024 10BD     		pop	{r4, pc}
 654              		.cfi_endproc
 655              	.LFE75:
 656              		.size	vEventGroupDelete, .-vEventGroupDelete
 657 0026 00BF     		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 658              		.align	2
 659              		.global	vEventGroupSetBitsCallback
 660              		.thumb
 661              		.thumb_func
 662              		.type	vEventGroupSetBitsCallback, %function
 663              	vEventGroupSetBitsCallback:
 664              	.LFB76:
 644:..\FreeRTOS/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 665              		.loc 1 644 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL89:
 670 0000 08B5     		push	{r3, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 645:..\FreeRTOS/event_groups.c **** }
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 31


 674              		.loc 1 645 0
 675 0002 FFF7FEFF 		bl	xEventGroupSetBits
 676              	.LVL90:
 677 0006 08BD     		pop	{r3, pc}
 678              		.cfi_endproc
 679              	.LFE76:
 680              		.size	vEventGroupSetBitsCallback, .-vEventGroupSetBitsCallback
 681              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 682              		.align	2
 683              		.global	vEventGroupClearBitsCallback
 684              		.thumb
 685              		.thumb_func
 686              		.type	vEventGroupClearBitsCallback, %function
 687              	vEventGroupClearBitsCallback:
 688              	.LFB77:
 652:..\FreeRTOS/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 689              		.loc 1 652 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL91:
 694 0000 08B5     		push	{r3, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 3, -8
 697              		.cfi_offset 14, -4
 653:..\FreeRTOS/event_groups.c **** }
 698              		.loc 1 653 0
 699 0002 FFF7FEFF 		bl	xEventGroupClearBits
 700              	.LVL92:
 701 0006 08BD     		pop	{r3, pc}
 702              		.cfi_endproc
 703              	.LFE77:
 704              		.size	vEventGroupClearBitsCallback, .-vEventGroupClearBitsCallback
 705              		.text
 706              	.Letext0:
 707              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 708              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 709              		.file 5 "..\\FreeRTOS\\include/list.h"
 710              		.file 6 "..\\FreeRTOS\\include/event_groups.h"
 711              		.file 7 "..\\FreeRTOS\\include/portable.h"
 712              		.file 8 "..\\FreeRTOS\\include/task.h"
 713              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 714              		.section	.debug_info,"",%progbits
 715              	.Ldebug_info0:
 716 0000 0C090000 		.4byte	0x90c
 717 0004 0400     		.2byte	0x4
 718 0006 00000000 		.4byte	.Ldebug_abbrev0
 719 000a 04       		.byte	0x4
 720 000b 01       		.uleb128 0x1
 721 000c 18050000 		.4byte	.LASF87
 722 0010 0C       		.byte	0xc
 723 0011 3B010000 		.4byte	.LASF88
 724 0015 67030000 		.4byte	.LASF89
 725 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 726 001d 00000000 		.4byte	0
 727 0021 00000000 		.4byte	.Ldebug_line0
 728 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 32


 729 0026 04       		.byte	0x4
 730 0027 07       		.byte	0x7
 731 0028 B8020000 		.4byte	.LASF0
 732 002c 03       		.uleb128 0x3
 733 002d 04       		.byte	0x4
 734 002e 05       		.byte	0x5
 735 002f 696E7400 		.ascii	"int\000"
 736 0033 02       		.uleb128 0x2
 737 0034 08       		.byte	0x8
 738 0035 05       		.byte	0x5
 739 0036 82010000 		.4byte	.LASF1
 740 003a 02       		.uleb128 0x2
 741 003b 08       		.byte	0x8
 742 003c 04       		.byte	0x4
 743 003d 4B020000 		.4byte	.LASF2
 744 0041 02       		.uleb128 0x2
 745 0042 01       		.byte	0x1
 746 0043 06       		.byte	0x6
 747 0044 77020000 		.4byte	.LASF3
 748 0048 02       		.uleb128 0x2
 749 0049 01       		.byte	0x1
 750 004a 08       		.byte	0x8
 751 004b 57020000 		.4byte	.LASF4
 752 004f 02       		.uleb128 0x2
 753 0050 02       		.byte	0x2
 754 0051 05       		.byte	0x5
 755 0052 8A000000 		.4byte	.LASF5
 756 0056 02       		.uleb128 0x2
 757 0057 02       		.byte	0x2
 758 0058 07       		.byte	0x7
 759 0059 0A030000 		.4byte	.LASF6
 760 005d 04       		.uleb128 0x4
 761 005e 9C040000 		.4byte	.LASF8
 762 0062 03       		.byte	0x3
 763 0063 3F       		.byte	0x3f
 764 0064 68000000 		.4byte	0x68
 765 0068 02       		.uleb128 0x2
 766 0069 04       		.byte	0x4
 767 006a 05       		.byte	0x5
 768 006b B4010000 		.4byte	.LASF7
 769 006f 04       		.uleb128 0x4
 770 0070 B5000000 		.4byte	.LASF9
 771 0074 03       		.byte	0x3
 772 0075 41       		.byte	0x41
 773 0076 7A000000 		.4byte	0x7a
 774 007a 02       		.uleb128 0x2
 775 007b 04       		.byte	0x4
 776 007c 07       		.byte	0x7
 777 007d 3B040000 		.4byte	.LASF10
 778 0081 02       		.uleb128 0x2
 779 0082 08       		.byte	0x8
 780 0083 07       		.byte	0x7
 781 0084 8B020000 		.4byte	.LASF11
 782 0088 02       		.uleb128 0x2
 783 0089 04       		.byte	0x4
 784 008a 07       		.byte	0x7
 785 008b BD040000 		.4byte	.LASF12
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 33


 786 008f 05       		.uleb128 0x5
 787 0090 04       		.byte	0x4
 788 0091 02       		.uleb128 0x2
 789 0092 01       		.byte	0x1
 790 0093 08       		.byte	0x8
 791 0094 55030000 		.4byte	.LASF13
 792 0098 04       		.uleb128 0x4
 793 0099 83020000 		.4byte	.LASF14
 794 009d 04       		.byte	0x4
 795 009e 2C       		.byte	0x2c
 796 009f 5D000000 		.4byte	0x5d
 797 00a3 04       		.uleb128 0x4
 798 00a4 A2020000 		.4byte	.LASF15
 799 00a8 04       		.byte	0x4
 800 00a9 30       		.byte	0x30
 801 00aa 6F000000 		.4byte	0x6f
 802 00ae 02       		.uleb128 0x2
 803 00af 04       		.byte	0x4
 804 00b0 04       		.byte	0x4
 805 00b1 56010000 		.4byte	.LASF16
 806 00b5 02       		.uleb128 0x2
 807 00b6 08       		.byte	0x8
 808 00b7 04       		.byte	0x4
 809 00b8 EC040000 		.4byte	.LASF17
 810 00bc 04       		.uleb128 0x4
 811 00bd D0020000 		.4byte	.LASF18
 812 00c1 02       		.byte	0x2
 813 00c2 43       		.byte	0x43
 814 00c3 68000000 		.4byte	0x68
 815 00c7 04       		.uleb128 0x4
 816 00c8 4D040000 		.4byte	.LASF19
 817 00cc 02       		.byte	0x2
 818 00cd 44       		.byte	0x44
 819 00ce 7A000000 		.4byte	0x7a
 820 00d2 04       		.uleb128 0x4
 821 00d3 40020000 		.4byte	.LASF20
 822 00d7 02       		.byte	0x2
 823 00d8 4A       		.byte	0x4a
 824 00d9 A3000000 		.4byte	0xa3
 825 00dd 06       		.uleb128 0x6
 826 00de 20020000 		.4byte	.LASF27
 827 00e2 14       		.byte	0x14
 828 00e3 05       		.byte	0x5
 829 00e4 8C       		.byte	0x8c
 830 00e5 26010000 		.4byte	0x126
 831 00e9 07       		.uleb128 0x7
 832 00ea E4010000 		.4byte	.LASF21
 833 00ee 05       		.byte	0x5
 834 00ef 8F       		.byte	0x8f
 835 00f0 D2000000 		.4byte	0xd2
 836 00f4 00       		.byte	0
 837 00f5 07       		.uleb128 0x7
 838 00f6 BF030000 		.4byte	.LASF22
 839 00fa 05       		.byte	0x5
 840 00fb 90       		.byte	0x90
 841 00fc 26010000 		.4byte	0x126
 842 0100 04       		.byte	0x4
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 34


 843 0101 07       		.uleb128 0x7
 844 0102 9D000000 		.4byte	.LASF23
 845 0106 05       		.byte	0x5
 846 0107 91       		.byte	0x91
 847 0108 26010000 		.4byte	0x126
 848 010c 08       		.byte	0x8
 849 010d 07       		.uleb128 0x7
 850 010e DE000000 		.4byte	.LASF24
 851 0112 05       		.byte	0x5
 852 0113 92       		.byte	0x92
 853 0114 8F000000 		.4byte	0x8f
 854 0118 0C       		.byte	0xc
 855 0119 07       		.uleb128 0x7
 856 011a DB020000 		.4byte	.LASF25
 857 011e 05       		.byte	0x5
 858 011f 93       		.byte	0x93
 859 0120 8F000000 		.4byte	0x8f
 860 0124 10       		.byte	0x10
 861 0125 00       		.byte	0
 862 0126 08       		.uleb128 0x8
 863 0127 04       		.byte	0x4
 864 0128 DD000000 		.4byte	0xdd
 865 012c 04       		.uleb128 0x4
 866 012d C5020000 		.4byte	.LASF26
 867 0131 05       		.byte	0x5
 868 0132 96       		.byte	0x96
 869 0133 DD000000 		.4byte	0xdd
 870 0137 06       		.uleb128 0x6
 871 0138 C1050000 		.4byte	.LASF28
 872 013c 0C       		.byte	0xc
 873 013d 05       		.byte	0x5
 874 013e 98       		.byte	0x98
 875 013f 68010000 		.4byte	0x168
 876 0143 07       		.uleb128 0x7
 877 0144 E4010000 		.4byte	.LASF21
 878 0148 05       		.byte	0x5
 879 0149 9B       		.byte	0x9b
 880 014a D2000000 		.4byte	0xd2
 881 014e 00       		.byte	0
 882 014f 07       		.uleb128 0x7
 883 0150 BF030000 		.4byte	.LASF22
 884 0154 05       		.byte	0x5
 885 0155 9C       		.byte	0x9c
 886 0156 26010000 		.4byte	0x126
 887 015a 04       		.byte	0x4
 888 015b 07       		.uleb128 0x7
 889 015c 9D000000 		.4byte	.LASF23
 890 0160 05       		.byte	0x5
 891 0161 9D       		.byte	0x9d
 892 0162 26010000 		.4byte	0x126
 893 0166 08       		.byte	0x8
 894 0167 00       		.byte	0
 895 0168 04       		.uleb128 0x4
 896 0169 73010000 		.4byte	.LASF29
 897 016d 05       		.byte	0x5
 898 016e 9F       		.byte	0x9f
 899 016f 37010000 		.4byte	0x137
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 35


 900 0173 06       		.uleb128 0x6
 901 0174 BD010000 		.4byte	.LASF30
 902 0178 14       		.byte	0x14
 903 0179 05       		.byte	0x5
 904 017a A4       		.byte	0xa4
 905 017b A4010000 		.4byte	0x1a4
 906 017f 07       		.uleb128 0x7
 907 0180 72040000 		.4byte	.LASF31
 908 0184 05       		.byte	0x5
 909 0185 A7       		.byte	0xa7
 910 0186 A4010000 		.4byte	0x1a4
 911 018a 00       		.byte	0
 912 018b 07       		.uleb128 0x7
 913 018c FF040000 		.4byte	.LASF32
 914 0190 05       		.byte	0x5
 915 0191 A8       		.byte	0xa8
 916 0192 A9010000 		.4byte	0x1a9
 917 0196 04       		.byte	0x4
 918 0197 07       		.uleb128 0x7
 919 0198 94000000 		.4byte	.LASF33
 920 019c 05       		.byte	0x5
 921 019d A9       		.byte	0xa9
 922 019e 68010000 		.4byte	0x168
 923 01a2 08       		.byte	0x8
 924 01a3 00       		.byte	0
 925 01a4 09       		.uleb128 0x9
 926 01a5 C7000000 		.4byte	0xc7
 927 01a9 08       		.uleb128 0x8
 928 01aa 04       		.byte	0x4
 929 01ab 2C010000 		.4byte	0x12c
 930 01af 04       		.uleb128 0x4
 931 01b0 6C010000 		.4byte	.LASF34
 932 01b4 05       		.byte	0x5
 933 01b5 AB       		.byte	0xab
 934 01b6 73010000 		.4byte	0x173
 935 01ba 04       		.uleb128 0x4
 936 01bb F3000000 		.4byte	.LASF35
 937 01bf 06       		.byte	0x6
 938 01c0 52       		.byte	0x52
 939 01c1 8F000000 		.4byte	0x8f
 940 01c5 04       		.uleb128 0x4
 941 01c6 C0000000 		.4byte	.LASF36
 942 01ca 06       		.byte	0x6
 943 01cb 5C       		.byte	0x5c
 944 01cc D2000000 		.4byte	0xd2
 945 01d0 06       		.uleb128 0x6
 946 01d1 C3010000 		.4byte	.LASF37
 947 01d5 18       		.byte	0x18
 948 01d6 01       		.byte	0x1
 949 01d7 40       		.byte	0x40
 950 01d8 F5010000 		.4byte	0x1f5
 951 01dc 07       		.uleb128 0x7
 952 01dd D9030000 		.4byte	.LASF38
 953 01e1 01       		.byte	0x1
 954 01e2 42       		.byte	0x42
 955 01e3 C5010000 		.4byte	0x1c5
 956 01e7 00       		.byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 36


 957 01e8 07       		.uleb128 0x7
 958 01e9 FB010000 		.4byte	.LASF39
 959 01ed 01       		.byte	0x1
 960 01ee 43       		.byte	0x43
 961 01ef AF010000 		.4byte	0x1af
 962 01f3 04       		.byte	0x4
 963 01f4 00       		.byte	0
 964 01f5 04       		.uleb128 0x4
 965 01f6 41060000 		.4byte	.LASF40
 966 01fa 01       		.byte	0x1
 967 01fb 4C       		.byte	0x4c
 968 01fc D0010000 		.4byte	0x1d0
 969 0200 0A       		.uleb128 0xa
 970 0201 45030000 		.4byte	.LASF90
 971 0205 02       		.byte	0x2
 972 0206 EE       		.byte	0xee
 973 0207 03       		.byte	0x3
 974 0208 18020000 		.4byte	0x218
 975 020c 0B       		.uleb128 0xb
 976 020d 59040000 		.4byte	.LASF91
 977 0211 02       		.byte	0x2
 978 0212 EE       		.byte	0xee
 979 0213 A3000000 		.4byte	0xa3
 980 0217 00       		.byte	0
 981 0218 0C       		.uleb128 0xc
 982 0219 06010000 		.4byte	.LASF92
 983 021d 02       		.byte	0x2
 984 021e DA       		.byte	0xda
 985 021f A3000000 		.4byte	0xa3
 986 0223 03       		.byte	0x3
 987 0224 3F020000 		.4byte	0x23f
 988 0228 0D       		.uleb128 0xd
 989 0229 65020000 		.4byte	.LASF41
 990 022d 02       		.byte	0x2
 991 022e DC       		.byte	0xdc
 992 022f A3000000 		.4byte	0xa3
 993 0233 0D       		.uleb128 0xd
 994 0234 34000000 		.4byte	.LASF42
 995 0238 02       		.byte	0x2
 996 0239 DC       		.byte	0xdc
 997 023a A3000000 		.4byte	0xa3
 998 023e 00       		.byte	0
 999 023f 0E       		.uleb128 0xe
 1000 0240 30030000 		.4byte	.LASF93
 1001 0244 01       		.byte	0x1
 1002 0245 9102     		.2byte	0x291
 1003 0247 BC000000 		.4byte	0xbc
 1004 024b 00000000 		.4byte	.LFB78
 1005 024f 1C000000 		.4byte	.LFE78-.LFB78
 1006 0253 01       		.uleb128 0x1
 1007 0254 9C       		.byte	0x9c
 1008 0255 96020000 		.4byte	0x296
 1009 0259 0F       		.uleb128 0xf
 1010 025a D1050000 		.4byte	.LASF43
 1011 025e 01       		.byte	0x1
 1012 025f 9102     		.2byte	0x291
 1013 0261 96020000 		.4byte	0x296
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 37


 1014 0265 00000000 		.4byte	.LLST0
 1015 0269 10       		.uleb128 0x10
 1016 026a 5C010000 		.4byte	.LASF44
 1017 026e 01       		.byte	0x1
 1018 026f 9102     		.2byte	0x291
 1019 0271 96020000 		.4byte	0x296
 1020 0275 01       		.uleb128 0x1
 1021 0276 51       		.byte	0x51
 1022 0277 10       		.uleb128 0x10
 1023 0278 60000000 		.4byte	.LASF45
 1024 027c 01       		.byte	0x1
 1025 027d 9102     		.2byte	0x291
 1026 027f 9B020000 		.4byte	0x29b
 1027 0283 01       		.uleb128 0x1
 1028 0284 52       		.byte	0x52
 1029 0285 11       		.uleb128 0x11
 1030 0286 CC000000 		.4byte	.LASF46
 1031 028a 01       		.byte	0x1
 1032 028b 9302     		.2byte	0x293
 1033 028d BC000000 		.4byte	0xbc
 1034 0291 6C000000 		.4byte	.LLST1
 1035 0295 00       		.byte	0
 1036 0296 12       		.uleb128 0x12
 1037 0297 C5010000 		.4byte	0x1c5
 1038 029b 12       		.uleb128 0x12
 1039 029c BC000000 		.4byte	0xbc
 1040 02a0 13       		.uleb128 0x13
 1041 02a1 22000000 		.4byte	.LASF48
 1042 02a5 01       		.byte	0x1
 1043 02a6 8F       		.byte	0x8f
 1044 02a7 BA010000 		.4byte	0x1ba
 1045 02ab 00000000 		.4byte	.LFB69
 1046 02af 1A000000 		.4byte	.LFE69-.LFB69
 1047 02b3 01       		.uleb128 0x1
 1048 02b4 9C       		.byte	0x9c
 1049 02b5 EC020000 		.4byte	0x2ec
 1050 02b9 14       		.uleb128 0x14
 1051 02ba F3040000 		.4byte	.LASF47
 1052 02be 01       		.byte	0x1
 1053 02bf 91       		.byte	0x91
 1054 02c0 EC020000 		.4byte	0x2ec
 1055 02c4 8B000000 		.4byte	.LLST2
 1056 02c8 15       		.uleb128 0x15
 1057 02c9 08000000 		.4byte	.LVL8
 1058 02cd 9B080000 		.4byte	0x89b
 1059 02d1 DB020000 		.4byte	0x2db
 1060 02d5 16       		.uleb128 0x16
 1061 02d6 01       		.uleb128 0x1
 1062 02d7 50       		.byte	0x50
 1063 02d8 01       		.uleb128 0x1
 1064 02d9 48       		.byte	0x48
 1065 02da 00       		.byte	0
 1066 02db 17       		.uleb128 0x17
 1067 02dc 16000000 		.4byte	.LVL10
 1068 02e0 A6080000 		.4byte	0x8a6
 1069 02e4 16       		.uleb128 0x16
 1070 02e5 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 38


 1071 02e6 50       		.byte	0x50
 1072 02e7 02       		.uleb128 0x2
 1073 02e8 74       		.byte	0x74
 1074 02e9 04       		.sleb128 4
 1075 02ea 00       		.byte	0
 1076 02eb 00       		.byte	0
 1077 02ec 08       		.uleb128 0x8
 1078 02ed 04       		.byte	0x4
 1079 02ee F5010000 		.4byte	0x1f5
 1080 02f2 18       		.uleb128 0x18
 1081 02f3 E7020000 		.4byte	.LASF49
 1082 02f7 01       		.byte	0x1
 1083 02f8 2901     		.2byte	0x129
 1084 02fa C5010000 		.4byte	0x1c5
 1085 02fe 00000000 		.4byte	.LFB71
 1086 0302 B0000000 		.4byte	.LFE71-.LFB71
 1087 0306 01       		.uleb128 0x1
 1088 0307 9C       		.byte	0x9c
 1089 0308 5A040000 		.4byte	0x45a
 1090 030c 0F       		.uleb128 0xf
 1091 030d D2040000 		.4byte	.LASF50
 1092 0311 01       		.byte	0x1
 1093 0312 2901     		.2byte	0x129
 1094 0314 BA010000 		.4byte	0x1ba
 1095 0318 A9000000 		.4byte	.LLST3
 1096 031c 0F       		.uleb128 0xf
 1097 031d 5C010000 		.4byte	.LASF44
 1098 0321 01       		.byte	0x1
 1099 0322 2901     		.2byte	0x129
 1100 0324 96020000 		.4byte	0x296
 1101 0328 D5000000 		.4byte	.LLST4
 1102 032c 0F       		.uleb128 0xf
 1103 032d A8000000 		.4byte	.LASF51
 1104 0331 01       		.byte	0x1
 1105 0332 2901     		.2byte	0x129
 1106 0334 9B020000 		.4byte	0x29b
 1107 0338 01010000 		.4byte	.LLST5
 1108 033c 0F       		.uleb128 0xf
 1109 033d 60000000 		.4byte	.LASF45
 1110 0341 01       		.byte	0x1
 1111 0342 2901     		.2byte	0x129
 1112 0344 9B020000 		.4byte	0x29b
 1113 0348 2D010000 		.4byte	.LLST6
 1114 034c 0F       		.uleb128 0xf
 1115 034d E6000000 		.4byte	.LASF52
 1116 0351 01       		.byte	0x1
 1117 0352 2901     		.2byte	0x129
 1118 0354 D2000000 		.4byte	0xd2
 1119 0358 59010000 		.4byte	.LLST7
 1120 035c 11       		.uleb128 0x11
 1121 035d F3040000 		.4byte	.LASF47
 1122 0361 01       		.byte	0x1
 1123 0362 2B01     		.2byte	0x12b
 1124 0364 EC020000 		.4byte	0x2ec
 1125 0368 9C010000 		.4byte	.LLST8
 1126 036c 11       		.uleb128 0x11
 1127 036d 32040000 		.4byte	.LASF53
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 39


 1128 0371 01       		.byte	0x1
 1129 0372 2C01     		.2byte	0x12c
 1130 0374 C5010000 		.4byte	0x1c5
 1131 0378 C8010000 		.4byte	.LLST9
 1132 037c 11       		.uleb128 0x11
 1133 037d F7030000 		.4byte	.LASF54
 1134 0381 01       		.byte	0x1
 1135 0382 2C01     		.2byte	0x12c
 1136 0384 C5010000 		.4byte	0x1c5
 1137 0388 13020000 		.4byte	.LLST10
 1138 038c 11       		.uleb128 0x11
 1139 038d CC000000 		.4byte	.LASF46
 1140 0391 01       		.byte	0x1
 1141 0392 2D01     		.2byte	0x12d
 1142 0394 BC000000 		.4byte	0xbc
 1143 0398 3E020000 		.4byte	.LLST11
 1144 039c 11       		.uleb128 0x11
 1145 039d 17060000 		.4byte	.LASF55
 1146 03a1 01       		.byte	0x1
 1147 03a2 2D01     		.2byte	0x12d
 1148 03a4 BC000000 		.4byte	0xbc
 1149 03a8 5C020000 		.4byte	.LLST12
 1150 03ac 11       		.uleb128 0x11
 1151 03ad 07050000 		.4byte	.LASF56
 1152 03b1 01       		.byte	0x1
 1153 03b2 2E01     		.2byte	0x12e
 1154 03b4 BC000000 		.4byte	0xbc
 1155 03b8 6F020000 		.4byte	.LLST13
 1156 03bc 19       		.uleb128 0x19
 1157 03bd 00000000 		.4byte	.Ldebug_ranges0+0
 1158 03c1 0C040000 		.4byte	0x40c
 1159 03c5 11       		.uleb128 0x11
 1160 03c6 D1050000 		.4byte	.LASF43
 1161 03ca 01       		.byte	0x1
 1162 03cb 3D01     		.2byte	0x13d
 1163 03cd 96020000 		.4byte	0x296
 1164 03d1 8F020000 		.4byte	.LLST14
 1165 03d5 15       		.uleb128 0x15
 1166 03d6 1E000000 		.4byte	.LVL15
 1167 03da 3F020000 		.4byte	0x23f
 1168 03de F5030000 		.4byte	0x3f5
 1169 03e2 16       		.uleb128 0x16
 1170 03e3 01       		.uleb128 0x1
 1171 03e4 50       		.byte	0x50
 1172 03e5 02       		.uleb128 0x2
 1173 03e6 74       		.byte	0x74
 1174 03e7 00       		.sleb128 0
 1175 03e8 16       		.uleb128 0x16
 1176 03e9 01       		.uleb128 0x1
 1177 03ea 51       		.byte	0x51
 1178 03eb 02       		.uleb128 0x2
 1179 03ec 76       		.byte	0x76
 1180 03ed 00       		.sleb128 0
 1181 03ee 16       		.uleb128 0x16
 1182 03ef 01       		.uleb128 0x1
 1183 03f0 52       		.byte	0x52
 1184 03f1 02       		.uleb128 0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 40


 1185 03f2 78       		.byte	0x78
 1186 03f3 00       		.sleb128 0
 1187 03f4 00       		.byte	0
 1188 03f5 17       		.uleb128 0x17
 1189 03f6 54000000 		.4byte	.LVL22
 1190 03fa B2080000 		.4byte	0x8b2
 1191 03fe 16       		.uleb128 0x16
 1192 03ff 01       		.uleb128 0x1
 1193 0400 50       		.byte	0x50
 1194 0401 02       		.uleb128 0x2
 1195 0402 77       		.byte	0x77
 1196 0403 04       		.sleb128 4
 1197 0404 16       		.uleb128 0x16
 1198 0405 01       		.uleb128 0x1
 1199 0406 52       		.byte	0x52
 1200 0407 02       		.uleb128 0x2
 1201 0408 75       		.byte	0x75
 1202 0409 00       		.sleb128 0
 1203 040a 00       		.byte	0
 1204 040b 00       		.byte	0
 1205 040c 1A       		.uleb128 0x1a
 1206 040d 12000000 		.4byte	.LVL13
 1207 0411 BE080000 		.4byte	0x8be
 1208 0415 1A       		.uleb128 0x1a
 1209 0416 5E000000 		.4byte	.LVL26
 1210 041a CA080000 		.4byte	0x8ca
 1211 041e 1A       		.uleb128 0x1a
 1212 041f 76000000 		.4byte	.LVL27
 1213 0423 D6080000 		.4byte	0x8d6
 1214 0427 1A       		.uleb128 0x1a
 1215 0428 82000000 		.4byte	.LVL29
 1216 042c E2080000 		.4byte	0x8e2
 1217 0430 15       		.uleb128 0x15
 1218 0431 8E000000 		.4byte	.LVL31
 1219 0435 3F020000 		.4byte	0x23f
 1220 0439 50040000 		.4byte	0x450
 1221 043d 16       		.uleb128 0x16
 1222 043e 01       		.uleb128 0x1
 1223 043f 50       		.byte	0x50
 1224 0440 02       		.uleb128 0x2
 1225 0441 74       		.byte	0x74
 1226 0442 00       		.sleb128 0
 1227 0443 16       		.uleb128 0x16
 1228 0444 01       		.uleb128 0x1
 1229 0445 51       		.byte	0x51
 1230 0446 02       		.uleb128 0x2
 1231 0447 76       		.byte	0x76
 1232 0448 00       		.sleb128 0
 1233 0449 16       		.uleb128 0x16
 1234 044a 01       		.uleb128 0x1
 1235 044b 52       		.byte	0x52
 1236 044c 02       		.uleb128 0x2
 1237 044d 78       		.byte	0x78
 1238 044e 00       		.sleb128 0
 1239 044f 00       		.byte	0
 1240 0450 1A       		.uleb128 0x1a
 1241 0451 A0000000 		.4byte	.LVL34
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 41


 1242 0455 ED080000 		.4byte	0x8ed
 1243 0459 00       		.byte	0
 1244 045a 18       		.uleb128 0x18
 1245 045b 2B020000 		.4byte	.LASF57
 1246 045f 01       		.byte	0x1
 1247 0460 BF01     		.2byte	0x1bf
 1248 0462 C5010000 		.4byte	0x1c5
 1249 0466 00000000 		.4byte	.LFB72
 1250 046a 1A000000 		.4byte	.LFE72-.LFB72
 1251 046e 01       		.uleb128 0x1
 1252 046f 9C       		.byte	0x9c
 1253 0470 C5040000 		.4byte	0x4c5
 1254 0474 0F       		.uleb128 0xf
 1255 0475 D2040000 		.4byte	.LASF50
 1256 0479 01       		.byte	0x1
 1257 047a BF01     		.2byte	0x1bf
 1258 047c BA010000 		.4byte	0x1ba
 1259 0480 AD020000 		.4byte	.LLST15
 1260 0484 0F       		.uleb128 0xf
 1261 0485 DE040000 		.4byte	.LASF58
 1262 0489 01       		.byte	0x1
 1263 048a BF01     		.2byte	0x1bf
 1264 048c 96020000 		.4byte	0x296
 1265 0490 CB020000 		.4byte	.LLST16
 1266 0494 11       		.uleb128 0x11
 1267 0495 F3040000 		.4byte	.LASF47
 1268 0499 01       		.byte	0x1
 1269 049a C101     		.2byte	0x1c1
 1270 049c EC020000 		.4byte	0x2ec
 1271 04a0 F7020000 		.4byte	.LLST17
 1272 04a4 1B       		.uleb128 0x1b
 1273 04a5 32040000 		.4byte	.LASF53
 1274 04a9 01       		.byte	0x1
 1275 04aa C201     		.2byte	0x1c2
 1276 04ac C5010000 		.4byte	0x1c5
 1277 04b0 01       		.uleb128 0x1
 1278 04b1 55       		.byte	0x55
 1279 04b2 1A       		.uleb128 0x1a
 1280 04b3 0A000000 		.4byte	.LVL39
 1281 04b7 E2080000 		.4byte	0x8e2
 1282 04bb 1A       		.uleb128 0x1a
 1283 04bc 16000000 		.4byte	.LVL42
 1284 04c0 ED080000 		.4byte	0x8ed
 1285 04c4 00       		.byte	0
 1286 04c5 18       		.uleb128 0x18
 1287 04c6 05040000 		.4byte	.LASF59
 1288 04ca 01       		.byte	0x1
 1289 04cb E901     		.2byte	0x1e9
 1290 04cd C5010000 		.4byte	0x1c5
 1291 04d1 00000000 		.4byte	.LFB73
 1292 04d5 1C000000 		.4byte	.LFE73-.LFB73
 1293 04d9 01       		.uleb128 0x1
 1294 04da 9C       		.byte	0x9c
 1295 04db 59050000 		.4byte	0x559
 1296 04df 0F       		.uleb128 0xf
 1297 04e0 D2040000 		.4byte	.LASF50
 1298 04e4 01       		.byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 42


 1299 04e5 E901     		.2byte	0x1e9
 1300 04e7 BA010000 		.4byte	0x1ba
 1301 04eb 15030000 		.4byte	.LLST18
 1302 04ef 1C       		.uleb128 0x1c
 1303 04f0 A6040000 		.4byte	.LASF60
 1304 04f4 01       		.byte	0x1
 1305 04f5 EB01     		.2byte	0x1eb
 1306 04f7 C7000000 		.4byte	0xc7
 1307 04fb 11       		.uleb128 0x11
 1308 04fc F3040000 		.4byte	.LASF47
 1309 0500 01       		.byte	0x1
 1310 0501 EC01     		.2byte	0x1ec
 1311 0503 EC020000 		.4byte	0x2ec
 1312 0507 36030000 		.4byte	.LLST19
 1313 050b 1B       		.uleb128 0x1b
 1314 050c 32040000 		.4byte	.LASF53
 1315 0510 01       		.byte	0x1
 1316 0511 ED01     		.2byte	0x1ed
 1317 0513 C5010000 		.4byte	0x1c5
 1318 0517 01       		.uleb128 0x1
 1319 0518 50       		.byte	0x50
 1320 0519 1D       		.uleb128 0x1d
 1321 051a 18020000 		.4byte	0x218
 1322 051e 00000000 		.4byte	.LBB8
 1323 0522 14000000 		.4byte	.LBE8-.LBB8
 1324 0526 01       		.byte	0x1
 1325 0527 EF01     		.2byte	0x1ef
 1326 0529 42050000 		.4byte	0x542
 1327 052d 1E       		.uleb128 0x1e
 1328 052e 00000000 		.4byte	.LBB9
 1329 0532 14000000 		.4byte	.LBE9-.LBB9
 1330 0536 1F       		.uleb128 0x1f
 1331 0537 28020000 		.4byte	0x228
 1332 053b 1F       		.uleb128 0x1f
 1333 053c 33020000 		.4byte	0x233
 1334 0540 00       		.byte	0
 1335 0541 00       		.byte	0
 1336 0542 20       		.uleb128 0x20
 1337 0543 00020000 		.4byte	0x200
 1338 0547 16000000 		.4byte	.LBB10
 1339 054b 04000000 		.4byte	.LBE10-.LBB10
 1340 054f 01       		.byte	0x1
 1341 0550 F301     		.2byte	0x1f3
 1342 0552 21       		.uleb128 0x21
 1343 0553 0C020000 		.4byte	0x20c
 1344 0557 00       		.byte	0
 1345 0558 00       		.byte	0
 1346 0559 18       		.uleb128 0x18
 1347 055a 1F040000 		.4byte	.LASF61
 1348 055e 01       		.byte	0x1
 1349 055f F901     		.2byte	0x1f9
 1350 0561 C5010000 		.4byte	0x1c5
 1351 0565 00000000 		.4byte	.LFB74
 1352 0569 6E000000 		.4byte	.LFE74-.LFB74
 1353 056d 01       		.uleb128 0x1
 1354 056e 9C       		.byte	0x9c
 1355 056f 3D060000 		.4byte	0x63d
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 43


 1356 0573 0F       		.uleb128 0xf
 1357 0574 D2040000 		.4byte	.LASF50
 1358 0578 01       		.byte	0x1
 1359 0579 F901     		.2byte	0x1f9
 1360 057b BA010000 		.4byte	0x1ba
 1361 057f 57030000 		.4byte	.LLST20
 1362 0583 0F       		.uleb128 0xf
 1363 0584 27060000 		.4byte	.LASF62
 1364 0588 01       		.byte	0x1
 1365 0589 F901     		.2byte	0x1f9
 1366 058b 96020000 		.4byte	0x296
 1367 058f 75030000 		.4byte	.LLST21
 1368 0593 11       		.uleb128 0x11
 1369 0594 D9010000 		.4byte	.LASF63
 1370 0598 01       		.byte	0x1
 1371 0599 FB01     		.2byte	0x1fb
 1372 059b A9010000 		.4byte	0x1a9
 1373 059f A1030000 		.4byte	.LLST22
 1374 05a3 11       		.uleb128 0x11
 1375 05a4 BF030000 		.4byte	.LASF22
 1376 05a8 01       		.byte	0x1
 1377 05a9 FB01     		.2byte	0x1fb
 1378 05ab A9010000 		.4byte	0x1a9
 1379 05af BF030000 		.4byte	.LLST23
 1380 05b3 1B       		.uleb128 0x1b
 1381 05b4 70000000 		.4byte	.LASF64
 1382 05b8 01       		.byte	0x1
 1383 05b9 FC01     		.2byte	0x1fc
 1384 05bb 3D060000 		.4byte	0x63d
 1385 05bf 01       		.uleb128 0x1
 1386 05c0 56       		.byte	0x56
 1387 05c1 11       		.uleb128 0x11
 1388 05c2 AD010000 		.4byte	.LASF65
 1389 05c6 01       		.byte	0x1
 1390 05c7 FD01     		.2byte	0x1fd
 1391 05c9 48060000 		.4byte	0x648
 1392 05cd D2030000 		.4byte	.LLST24
 1393 05d1 11       		.uleb128 0x11
 1394 05d2 DE040000 		.4byte	.LASF58
 1395 05d6 01       		.byte	0x1
 1396 05d7 FE01     		.2byte	0x1fe
 1397 05d9 C5010000 		.4byte	0x1c5
 1398 05dd F4030000 		.4byte	.LLST25
 1399 05e1 11       		.uleb128 0x11
 1400 05e2 19010000 		.4byte	.LASF66
 1401 05e6 01       		.byte	0x1
 1402 05e7 FE01     		.2byte	0x1fe
 1403 05e9 C5010000 		.4byte	0x1c5
 1404 05ed 13040000 		.4byte	.LLST26
 1405 05f1 11       		.uleb128 0x11
 1406 05f2 F7030000 		.4byte	.LASF54
 1407 05f6 01       		.byte	0x1
 1408 05f7 FE01     		.2byte	0x1fe
 1409 05f9 C5010000 		.4byte	0x1c5
 1410 05fd 31040000 		.4byte	.LLST27
 1411 0601 11       		.uleb128 0x11
 1412 0602 F3040000 		.4byte	.LASF47
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 44


 1413 0606 01       		.byte	0x1
 1414 0607 FF01     		.2byte	0x1ff
 1415 0609 EC020000 		.4byte	0x2ec
 1416 060d 4B040000 		.4byte	.LLST28
 1417 0611 11       		.uleb128 0x11
 1418 0612 C6040000 		.4byte	.LASF67
 1419 0616 01       		.byte	0x1
 1420 0617 0002     		.2byte	0x200
 1421 0619 BC000000 		.4byte	0xbc
 1422 061d 69040000 		.4byte	.LLST29
 1423 0621 1A       		.uleb128 0x1a
 1424 0622 0E000000 		.4byte	.LVL48
 1425 0626 BE080000 		.4byte	0x8be
 1426 062a 1A       		.uleb128 0x1a
 1427 062b 58000000 		.4byte	.LVL58
 1428 062f F8080000 		.4byte	0x8f8
 1429 0633 1A       		.uleb128 0x1a
 1430 0634 6A000000 		.4byte	.LVL61
 1431 0638 CA080000 		.4byte	0x8ca
 1432 063c 00       		.byte	0
 1433 063d 08       		.uleb128 0x8
 1434 063e 04       		.byte	0x4
 1435 063f 43060000 		.4byte	0x643
 1436 0643 12       		.uleb128 0x12
 1437 0644 2C010000 		.4byte	0x12c
 1438 0648 08       		.uleb128 0x8
 1439 0649 04       		.byte	0x4
 1440 064a AF010000 		.4byte	0x1af
 1441 064e 13       		.uleb128 0x13
 1442 064f 10020000 		.4byte	.LASF68
 1443 0653 01       		.byte	0x1
 1444 0654 B1       		.byte	0xb1
 1445 0655 C5010000 		.4byte	0x1c5
 1446 0659 00000000 		.4byte	.LFB70
 1447 065d 90000000 		.4byte	.LFE70-.LFB70
 1448 0661 01       		.uleb128 0x1
 1449 0662 9C       		.byte	0x9c
 1450 0663 5A070000 		.4byte	0x75a
 1451 0667 22       		.uleb128 0x22
 1452 0668 D2040000 		.4byte	.LASF50
 1453 066c 01       		.byte	0x1
 1454 066d B1       		.byte	0xb1
 1455 066e BA010000 		.4byte	0x1ba
 1456 0672 94040000 		.4byte	.LLST30
 1457 0676 22       		.uleb128 0x22
 1458 0677 27060000 		.4byte	.LASF62
 1459 067b 01       		.byte	0x1
 1460 067c B1       		.byte	0xb1
 1461 067d 96020000 		.4byte	0x296
 1462 0681 C0040000 		.4byte	.LLST31
 1463 0685 22       		.uleb128 0x22
 1464 0686 5C010000 		.4byte	.LASF44
 1465 068a 01       		.byte	0x1
 1466 068b B1       		.byte	0xb1
 1467 068c 96020000 		.4byte	0x296
 1468 0690 EC040000 		.4byte	.LLST32
 1469 0694 22       		.uleb128 0x22
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 45


 1470 0695 E6000000 		.4byte	.LASF52
 1471 0699 01       		.byte	0x1
 1472 069a B1       		.byte	0xb1
 1473 069b D2000000 		.4byte	0xd2
 1474 069f 18050000 		.4byte	.LLST33
 1475 06a3 14       		.uleb128 0x14
 1476 06a4 C6030000 		.4byte	.LASF69
 1477 06a8 01       		.byte	0x1
 1478 06a9 B3       		.byte	0xb3
 1479 06aa C5010000 		.4byte	0x1c5
 1480 06ae 4D050000 		.4byte	.LLST34
 1481 06b2 14       		.uleb128 0x14
 1482 06b3 32040000 		.4byte	.LASF53
 1483 06b7 01       		.byte	0x1
 1484 06b8 B3       		.byte	0xb3
 1485 06b9 C5010000 		.4byte	0x1c5
 1486 06bd 60050000 		.4byte	.LLST35
 1487 06c1 14       		.uleb128 0x14
 1488 06c2 F3040000 		.4byte	.LASF47
 1489 06c6 01       		.byte	0x1
 1490 06c7 B4       		.byte	0xb4
 1491 06c8 EC020000 		.4byte	0x2ec
 1492 06cc AB050000 		.4byte	.LLST36
 1493 06d0 14       		.uleb128 0x14
 1494 06d1 17060000 		.4byte	.LASF55
 1495 06d5 01       		.byte	0x1
 1496 06d6 B5       		.byte	0xb5
 1497 06d7 BC000000 		.4byte	0xbc
 1498 06db D7050000 		.4byte	.LLST37
 1499 06df 14       		.uleb128 0x14
 1500 06e0 07050000 		.4byte	.LASF56
 1501 06e4 01       		.byte	0x1
 1502 06e5 B6       		.byte	0xb6
 1503 06e6 BC000000 		.4byte	0xbc
 1504 06ea EA050000 		.4byte	.LLST38
 1505 06ee 1A       		.uleb128 0x1a
 1506 06ef 10000000 		.4byte	.LVL64
 1507 06f3 BE080000 		.4byte	0x8be
 1508 06f7 15       		.uleb128 0x15
 1509 06f8 1C000000 		.4byte	.LVL66
 1510 06fc 59050000 		.4byte	0x559
 1511 0700 11070000 		.4byte	0x711
 1512 0704 16       		.uleb128 0x16
 1513 0705 01       		.uleb128 0x1
 1514 0706 50       		.byte	0x50
 1515 0707 02       		.uleb128 0x2
 1516 0708 75       		.byte	0x75
 1517 0709 00       		.sleb128 0
 1518 070a 16       		.uleb128 0x16
 1519 070b 01       		.uleb128 0x1
 1520 070c 51       		.byte	0x51
 1521 070d 02       		.uleb128 0x2
 1522 070e 74       		.byte	0x74
 1523 070f 00       		.sleb128 0
 1524 0710 00       		.byte	0
 1525 0711 15       		.uleb128 0x15
 1526 0712 40000000 		.4byte	.LVL71
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 46


 1527 0716 B2080000 		.4byte	0x8b2
 1528 071a 35070000 		.4byte	0x735
 1529 071e 16       		.uleb128 0x16
 1530 071f 01       		.uleb128 0x1
 1531 0720 50       		.byte	0x50
 1532 0721 02       		.uleb128 0x2
 1533 0722 75       		.byte	0x75
 1534 0723 04       		.sleb128 4
 1535 0724 16       		.uleb128 0x16
 1536 0725 01       		.uleb128 0x1
 1537 0726 51       		.byte	0x51
 1538 0727 06       		.uleb128 0x6
 1539 0728 77       		.byte	0x77
 1540 0729 00       		.sleb128 0
 1541 072a 44       		.byte	0x44
 1542 072b 46       		.byte	0x46
 1543 072c 24       		.byte	0x24
 1544 072d 21       		.byte	0x21
 1545 072e 16       		.uleb128 0x16
 1546 072f 01       		.uleb128 0x1
 1547 0730 52       		.byte	0x52
 1548 0731 02       		.uleb128 0x2
 1549 0732 76       		.byte	0x76
 1550 0733 00       		.sleb128 0
 1551 0734 00       		.byte	0
 1552 0735 1A       		.uleb128 0x1a
 1553 0736 4A000000 		.4byte	.LVL74
 1554 073a CA080000 		.4byte	0x8ca
 1555 073e 1A       		.uleb128 0x1a
 1556 073f 62000000 		.4byte	.LVL75
 1557 0743 D6080000 		.4byte	0x8d6
 1558 0747 1A       		.uleb128 0x1a
 1559 0748 6E000000 		.4byte	.LVL77
 1560 074c E2080000 		.4byte	0x8e2
 1561 0750 1A       		.uleb128 0x1a
 1562 0751 80000000 		.4byte	.LVL80
 1563 0755 ED080000 		.4byte	0x8ed
 1564 0759 00       		.byte	0
 1565 075a 23       		.uleb128 0x23
 1566 075b 29010000 		.4byte	.LASF71
 1567 075f 01       		.byte	0x1
 1568 0760 5702     		.2byte	0x257
 1569 0762 00000000 		.4byte	.LFB75
 1570 0766 26000000 		.4byte	.LFE75-.LFB75
 1571 076a 01       		.uleb128 0x1
 1572 076b 9C       		.byte	0x9c
 1573 076c DC070000 		.4byte	0x7dc
 1574 0770 0F       		.uleb128 0xf
 1575 0771 D2040000 		.4byte	.LASF50
 1576 0775 01       		.byte	0x1
 1577 0776 5702     		.2byte	0x257
 1578 0778 BA010000 		.4byte	0x1ba
 1579 077c FE050000 		.4byte	.LLST39
 1580 0780 11       		.uleb128 0x11
 1581 0781 F3040000 		.4byte	.LASF47
 1582 0785 01       		.byte	0x1
 1583 0786 5902     		.2byte	0x259
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 47


 1584 0788 EC020000 		.4byte	0x2ec
 1585 078c 1C060000 		.4byte	.LLST40
 1586 0790 11       		.uleb128 0x11
 1587 0791 F1050000 		.4byte	.LASF70
 1588 0795 01       		.byte	0x1
 1589 0796 5A02     		.2byte	0x25a
 1590 0798 DC070000 		.4byte	0x7dc
 1591 079c 3A060000 		.4byte	.LLST41
 1592 07a0 1A       		.uleb128 0x1a
 1593 07a1 08000000 		.4byte	.LVL85
 1594 07a5 BE080000 		.4byte	0x8be
 1595 07a9 15       		.uleb128 0x15
 1596 07aa 14000000 		.4byte	.LVL86
 1597 07ae F8080000 		.4byte	0x8f8
 1598 07b2 BE070000 		.4byte	0x7be
 1599 07b6 16       		.uleb128 0x16
 1600 07b7 01       		.uleb128 0x1
 1601 07b8 51       		.byte	0x51
 1602 07b9 03       		.uleb128 0x3
 1603 07ba 40       		.byte	0x40
 1604 07bb 45       		.byte	0x45
 1605 07bc 24       		.byte	0x24
 1606 07bd 00       		.byte	0
 1607 07be 15       		.uleb128 0x15
 1608 07bf 20000000 		.4byte	.LVL87
 1609 07c3 04090000 		.4byte	0x904
 1610 07c7 D2070000 		.4byte	0x7d2
 1611 07cb 16       		.uleb128 0x16
 1612 07cc 01       		.uleb128 0x1
 1613 07cd 50       		.byte	0x50
 1614 07ce 02       		.uleb128 0x2
 1615 07cf 74       		.byte	0x74
 1616 07d0 00       		.sleb128 0
 1617 07d1 00       		.byte	0
 1618 07d2 1A       		.uleb128 0x1a
 1619 07d3 24000000 		.4byte	.LVL88
 1620 07d7 CA080000 		.4byte	0x8ca
 1621 07db 00       		.byte	0
 1622 07dc 08       		.uleb128 0x8
 1623 07dd 04       		.byte	0x4
 1624 07de E2070000 		.4byte	0x7e2
 1625 07e2 12       		.uleb128 0x12
 1626 07e3 AF010000 		.4byte	0x1af
 1627 07e7 23       		.uleb128 0x23
 1628 07e8 A6050000 		.4byte	.LASF72
 1629 07ec 01       		.byte	0x1
 1630 07ed 8302     		.2byte	0x283
 1631 07ef 00000000 		.4byte	.LFB76
 1632 07f3 08000000 		.4byte	.LFE76-.LFB76
 1633 07f7 01       		.uleb128 0x1
 1634 07f8 9C       		.byte	0x9c
 1635 07f9 36080000 		.4byte	0x836
 1636 07fd 0F       		.uleb128 0xf
 1637 07fe AB020000 		.4byte	.LASF73
 1638 0802 01       		.byte	0x1
 1639 0803 8302     		.2byte	0x283
 1640 0805 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 48


 1641 0809 5C060000 		.4byte	.LLST42
 1642 080d 0F       		.uleb128 0xf
 1643 080e EF010000 		.4byte	.LASF74
 1644 0812 01       		.byte	0x1
 1645 0813 8302     		.2byte	0x283
 1646 0815 36080000 		.4byte	0x836
 1647 0819 7D060000 		.4byte	.LLST43
 1648 081d 17       		.uleb128 0x17
 1649 081e 06000000 		.4byte	.LVL90
 1650 0822 59050000 		.4byte	0x559
 1651 0826 16       		.uleb128 0x16
 1652 0827 01       		.uleb128 0x1
 1653 0828 50       		.byte	0x50
 1654 0829 03       		.uleb128 0x3
 1655 082a F3       		.byte	0xf3
 1656 082b 01       		.uleb128 0x1
 1657 082c 50       		.byte	0x50
 1658 082d 16       		.uleb128 0x16
 1659 082e 01       		.uleb128 0x1
 1660 082f 51       		.byte	0x51
 1661 0830 03       		.uleb128 0x3
 1662 0831 F3       		.byte	0xf3
 1663 0832 01       		.uleb128 0x1
 1664 0833 51       		.byte	0x51
 1665 0834 00       		.byte	0
 1666 0835 00       		.byte	0
 1667 0836 12       		.uleb128 0x12
 1668 0837 A3000000 		.4byte	0xa3
 1669 083b 23       		.uleb128 0x23
 1670 083c 90010000 		.4byte	.LASF75
 1671 0840 01       		.byte	0x1
 1672 0841 8B02     		.2byte	0x28b
 1673 0843 00000000 		.4byte	.LFB77
 1674 0847 08000000 		.4byte	.LFE77-.LFB77
 1675 084b 01       		.uleb128 0x1
 1676 084c 9C       		.byte	0x9c
 1677 084d 8A080000 		.4byte	0x88a
 1678 0851 0F       		.uleb128 0xf
 1679 0852 AB020000 		.4byte	.LASF73
 1680 0856 01       		.byte	0x1
 1681 0857 8B02     		.2byte	0x28b
 1682 0859 8F000000 		.4byte	0x8f
 1683 085d 9E060000 		.4byte	.LLST44
 1684 0861 0F       		.uleb128 0xf
 1685 0862 33060000 		.4byte	.LASF76
 1686 0866 01       		.byte	0x1
 1687 0867 8B02     		.2byte	0x28b
 1688 0869 36080000 		.4byte	0x836
 1689 086d BF060000 		.4byte	.LLST45
 1690 0871 17       		.uleb128 0x17
 1691 0872 06000000 		.4byte	.LVL92
 1692 0876 5A040000 		.4byte	0x45a
 1693 087a 16       		.uleb128 0x16
 1694 087b 01       		.uleb128 0x1
 1695 087c 50       		.byte	0x50
 1696 087d 03       		.uleb128 0x3
 1697 087e F3       		.byte	0xf3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 49


 1698 087f 01       		.uleb128 0x1
 1699 0880 50       		.byte	0x50
 1700 0881 16       		.uleb128 0x16
 1701 0882 01       		.uleb128 0x1
 1702 0883 51       		.byte	0x51
 1703 0884 03       		.uleb128 0x3
 1704 0885 F3       		.byte	0xf3
 1705 0886 01       		.uleb128 0x1
 1706 0887 51       		.byte	0x51
 1707 0888 00       		.byte	0
 1708 0889 00       		.byte	0
 1709 088a 24       		.uleb128 0x24
 1710 088b 5A030000 		.4byte	.LASF94
 1711 088f 09       		.byte	0x9
 1712 0890 1207     		.2byte	0x712
 1713 0892 96080000 		.4byte	0x896
 1714 0896 09       		.uleb128 0x9
 1715 0897 98000000 		.4byte	0x98
 1716 089b 25       		.uleb128 0x25
 1717 089c E4050000 		.4byte	.LASF77
 1718 08a0 E4050000 		.4byte	.LASF77
 1719 08a4 07       		.byte	0x7
 1720 08a5 82       		.byte	0x82
 1721 08a6 26       		.uleb128 0x26
 1722 08a7 7A000000 		.4byte	.LASF78
 1723 08ab 7A000000 		.4byte	.LASF78
 1724 08af 05       		.byte	0x5
 1725 08b0 5901     		.2byte	0x159
 1726 08b2 26       		.uleb128 0x26
 1727 08b3 41000000 		.4byte	.LASF79
 1728 08b7 41000000 		.4byte	.LASF79
 1729 08bb 08       		.byte	0x8
 1730 08bc 8408     		.2byte	0x884
 1731 08be 26       		.uleb128 0x26
 1732 08bf 07060000 		.4byte	.LASF80
 1733 08c3 07060000 		.4byte	.LASF80
 1734 08c7 08       		.byte	0x8
 1735 08c8 FF04     		.2byte	0x4ff
 1736 08ca 26       		.uleb128 0x26
 1737 08cb FB020000 		.4byte	.LASF81
 1738 08cf FB020000 		.4byte	.LASF81
 1739 08d3 08       		.byte	0x8
 1740 08d4 3505     		.2byte	0x535
 1741 08d6 26       		.uleb128 0x26
 1742 08d7 82040000 		.4byte	.LASF82
 1743 08db 82040000 		.4byte	.LASF82
 1744 08df 08       		.byte	0x8
 1745 08e0 BC08     		.2byte	0x8bc
 1746 08e2 25       		.uleb128 0x25
 1747 08e3 1D030000 		.4byte	.LASF83
 1748 08e7 1D030000 		.4byte	.LASF83
 1749 08eb 02       		.byte	0x2
 1750 08ec 6C       		.byte	0x6c
 1751 08ed 25       		.uleb128 0x25
 1752 08ee E5030000 		.4byte	.LASF84
 1753 08f2 E5030000 		.4byte	.LASF84
 1754 08f6 02       		.byte	0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 50


 1755 08f7 6D       		.byte	0x6d
 1756 08f8 26       		.uleb128 0x26
 1757 08f9 00000000 		.4byte	.LASF85
 1758 08fd 00000000 		.4byte	.LASF85
 1759 0901 08       		.byte	0x8
 1760 0902 AC08     		.2byte	0x8ac
 1761 0904 25       		.uleb128 0x25
 1762 0905 68040000 		.4byte	.LASF86
 1763 0909 68040000 		.4byte	.LASF86
 1764 090d 07       		.byte	0x7
 1765 090e 83       		.byte	0x83
 1766 090f 00       		.byte	0
 1767              		.section	.debug_abbrev,"",%progbits
 1768              	.Ldebug_abbrev0:
 1769 0000 01       		.uleb128 0x1
 1770 0001 11       		.uleb128 0x11
 1771 0002 01       		.byte	0x1
 1772 0003 25       		.uleb128 0x25
 1773 0004 0E       		.uleb128 0xe
 1774 0005 13       		.uleb128 0x13
 1775 0006 0B       		.uleb128 0xb
 1776 0007 03       		.uleb128 0x3
 1777 0008 0E       		.uleb128 0xe
 1778 0009 1B       		.uleb128 0x1b
 1779 000a 0E       		.uleb128 0xe
 1780 000b 55       		.uleb128 0x55
 1781 000c 17       		.uleb128 0x17
 1782 000d 11       		.uleb128 0x11
 1783 000e 01       		.uleb128 0x1
 1784 000f 10       		.uleb128 0x10
 1785 0010 17       		.uleb128 0x17
 1786 0011 00       		.byte	0
 1787 0012 00       		.byte	0
 1788 0013 02       		.uleb128 0x2
 1789 0014 24       		.uleb128 0x24
 1790 0015 00       		.byte	0
 1791 0016 0B       		.uleb128 0xb
 1792 0017 0B       		.uleb128 0xb
 1793 0018 3E       		.uleb128 0x3e
 1794 0019 0B       		.uleb128 0xb
 1795 001a 03       		.uleb128 0x3
 1796 001b 0E       		.uleb128 0xe
 1797 001c 00       		.byte	0
 1798 001d 00       		.byte	0
 1799 001e 03       		.uleb128 0x3
 1800 001f 24       		.uleb128 0x24
 1801 0020 00       		.byte	0
 1802 0021 0B       		.uleb128 0xb
 1803 0022 0B       		.uleb128 0xb
 1804 0023 3E       		.uleb128 0x3e
 1805 0024 0B       		.uleb128 0xb
 1806 0025 03       		.uleb128 0x3
 1807 0026 08       		.uleb128 0x8
 1808 0027 00       		.byte	0
 1809 0028 00       		.byte	0
 1810 0029 04       		.uleb128 0x4
 1811 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 51


 1812 002b 00       		.byte	0
 1813 002c 03       		.uleb128 0x3
 1814 002d 0E       		.uleb128 0xe
 1815 002e 3A       		.uleb128 0x3a
 1816 002f 0B       		.uleb128 0xb
 1817 0030 3B       		.uleb128 0x3b
 1818 0031 0B       		.uleb128 0xb
 1819 0032 49       		.uleb128 0x49
 1820 0033 13       		.uleb128 0x13
 1821 0034 00       		.byte	0
 1822 0035 00       		.byte	0
 1823 0036 05       		.uleb128 0x5
 1824 0037 0F       		.uleb128 0xf
 1825 0038 00       		.byte	0
 1826 0039 0B       		.uleb128 0xb
 1827 003a 0B       		.uleb128 0xb
 1828 003b 00       		.byte	0
 1829 003c 00       		.byte	0
 1830 003d 06       		.uleb128 0x6
 1831 003e 13       		.uleb128 0x13
 1832 003f 01       		.byte	0x1
 1833 0040 03       		.uleb128 0x3
 1834 0041 0E       		.uleb128 0xe
 1835 0042 0B       		.uleb128 0xb
 1836 0043 0B       		.uleb128 0xb
 1837 0044 3A       		.uleb128 0x3a
 1838 0045 0B       		.uleb128 0xb
 1839 0046 3B       		.uleb128 0x3b
 1840 0047 0B       		.uleb128 0xb
 1841 0048 01       		.uleb128 0x1
 1842 0049 13       		.uleb128 0x13
 1843 004a 00       		.byte	0
 1844 004b 00       		.byte	0
 1845 004c 07       		.uleb128 0x7
 1846 004d 0D       		.uleb128 0xd
 1847 004e 00       		.byte	0
 1848 004f 03       		.uleb128 0x3
 1849 0050 0E       		.uleb128 0xe
 1850 0051 3A       		.uleb128 0x3a
 1851 0052 0B       		.uleb128 0xb
 1852 0053 3B       		.uleb128 0x3b
 1853 0054 0B       		.uleb128 0xb
 1854 0055 49       		.uleb128 0x49
 1855 0056 13       		.uleb128 0x13
 1856 0057 38       		.uleb128 0x38
 1857 0058 0B       		.uleb128 0xb
 1858 0059 00       		.byte	0
 1859 005a 00       		.byte	0
 1860 005b 08       		.uleb128 0x8
 1861 005c 0F       		.uleb128 0xf
 1862 005d 00       		.byte	0
 1863 005e 0B       		.uleb128 0xb
 1864 005f 0B       		.uleb128 0xb
 1865 0060 49       		.uleb128 0x49
 1866 0061 13       		.uleb128 0x13
 1867 0062 00       		.byte	0
 1868 0063 00       		.byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 52


 1869 0064 09       		.uleb128 0x9
 1870 0065 35       		.uleb128 0x35
 1871 0066 00       		.byte	0
 1872 0067 49       		.uleb128 0x49
 1873 0068 13       		.uleb128 0x13
 1874 0069 00       		.byte	0
 1875 006a 00       		.byte	0
 1876 006b 0A       		.uleb128 0xa
 1877 006c 2E       		.uleb128 0x2e
 1878 006d 01       		.byte	0x1
 1879 006e 03       		.uleb128 0x3
 1880 006f 0E       		.uleb128 0xe
 1881 0070 3A       		.uleb128 0x3a
 1882 0071 0B       		.uleb128 0xb
 1883 0072 3B       		.uleb128 0x3b
 1884 0073 0B       		.uleb128 0xb
 1885 0074 27       		.uleb128 0x27
 1886 0075 19       		.uleb128 0x19
 1887 0076 20       		.uleb128 0x20
 1888 0077 0B       		.uleb128 0xb
 1889 0078 01       		.uleb128 0x1
 1890 0079 13       		.uleb128 0x13
 1891 007a 00       		.byte	0
 1892 007b 00       		.byte	0
 1893 007c 0B       		.uleb128 0xb
 1894 007d 05       		.uleb128 0x5
 1895 007e 00       		.byte	0
 1896 007f 03       		.uleb128 0x3
 1897 0080 0E       		.uleb128 0xe
 1898 0081 3A       		.uleb128 0x3a
 1899 0082 0B       		.uleb128 0xb
 1900 0083 3B       		.uleb128 0x3b
 1901 0084 0B       		.uleb128 0xb
 1902 0085 49       		.uleb128 0x49
 1903 0086 13       		.uleb128 0x13
 1904 0087 00       		.byte	0
 1905 0088 00       		.byte	0
 1906 0089 0C       		.uleb128 0xc
 1907 008a 2E       		.uleb128 0x2e
 1908 008b 01       		.byte	0x1
 1909 008c 03       		.uleb128 0x3
 1910 008d 0E       		.uleb128 0xe
 1911 008e 3A       		.uleb128 0x3a
 1912 008f 0B       		.uleb128 0xb
 1913 0090 3B       		.uleb128 0x3b
 1914 0091 0B       		.uleb128 0xb
 1915 0092 27       		.uleb128 0x27
 1916 0093 19       		.uleb128 0x19
 1917 0094 49       		.uleb128 0x49
 1918 0095 13       		.uleb128 0x13
 1919 0096 20       		.uleb128 0x20
 1920 0097 0B       		.uleb128 0xb
 1921 0098 01       		.uleb128 0x1
 1922 0099 13       		.uleb128 0x13
 1923 009a 00       		.byte	0
 1924 009b 00       		.byte	0
 1925 009c 0D       		.uleb128 0xd
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 53


 1926 009d 34       		.uleb128 0x34
 1927 009e 00       		.byte	0
 1928 009f 03       		.uleb128 0x3
 1929 00a0 0E       		.uleb128 0xe
 1930 00a1 3A       		.uleb128 0x3a
 1931 00a2 0B       		.uleb128 0xb
 1932 00a3 3B       		.uleb128 0x3b
 1933 00a4 0B       		.uleb128 0xb
 1934 00a5 49       		.uleb128 0x49
 1935 00a6 13       		.uleb128 0x13
 1936 00a7 00       		.byte	0
 1937 00a8 00       		.byte	0
 1938 00a9 0E       		.uleb128 0xe
 1939 00aa 2E       		.uleb128 0x2e
 1940 00ab 01       		.byte	0x1
 1941 00ac 03       		.uleb128 0x3
 1942 00ad 0E       		.uleb128 0xe
 1943 00ae 3A       		.uleb128 0x3a
 1944 00af 0B       		.uleb128 0xb
 1945 00b0 3B       		.uleb128 0x3b
 1946 00b1 05       		.uleb128 0x5
 1947 00b2 27       		.uleb128 0x27
 1948 00b3 19       		.uleb128 0x19
 1949 00b4 49       		.uleb128 0x49
 1950 00b5 13       		.uleb128 0x13
 1951 00b6 11       		.uleb128 0x11
 1952 00b7 01       		.uleb128 0x1
 1953 00b8 12       		.uleb128 0x12
 1954 00b9 06       		.uleb128 0x6
 1955 00ba 40       		.uleb128 0x40
 1956 00bb 18       		.uleb128 0x18
 1957 00bc 9742     		.uleb128 0x2117
 1958 00be 19       		.uleb128 0x19
 1959 00bf 01       		.uleb128 0x1
 1960 00c0 13       		.uleb128 0x13
 1961 00c1 00       		.byte	0
 1962 00c2 00       		.byte	0
 1963 00c3 0F       		.uleb128 0xf
 1964 00c4 05       		.uleb128 0x5
 1965 00c5 00       		.byte	0
 1966 00c6 03       		.uleb128 0x3
 1967 00c7 0E       		.uleb128 0xe
 1968 00c8 3A       		.uleb128 0x3a
 1969 00c9 0B       		.uleb128 0xb
 1970 00ca 3B       		.uleb128 0x3b
 1971 00cb 05       		.uleb128 0x5
 1972 00cc 49       		.uleb128 0x49
 1973 00cd 13       		.uleb128 0x13
 1974 00ce 02       		.uleb128 0x2
 1975 00cf 17       		.uleb128 0x17
 1976 00d0 00       		.byte	0
 1977 00d1 00       		.byte	0
 1978 00d2 10       		.uleb128 0x10
 1979 00d3 05       		.uleb128 0x5
 1980 00d4 00       		.byte	0
 1981 00d5 03       		.uleb128 0x3
 1982 00d6 0E       		.uleb128 0xe
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 54


 1983 00d7 3A       		.uleb128 0x3a
 1984 00d8 0B       		.uleb128 0xb
 1985 00d9 3B       		.uleb128 0x3b
 1986 00da 05       		.uleb128 0x5
 1987 00db 49       		.uleb128 0x49
 1988 00dc 13       		.uleb128 0x13
 1989 00dd 02       		.uleb128 0x2
 1990 00de 18       		.uleb128 0x18
 1991 00df 00       		.byte	0
 1992 00e0 00       		.byte	0
 1993 00e1 11       		.uleb128 0x11
 1994 00e2 34       		.uleb128 0x34
 1995 00e3 00       		.byte	0
 1996 00e4 03       		.uleb128 0x3
 1997 00e5 0E       		.uleb128 0xe
 1998 00e6 3A       		.uleb128 0x3a
 1999 00e7 0B       		.uleb128 0xb
 2000 00e8 3B       		.uleb128 0x3b
 2001 00e9 05       		.uleb128 0x5
 2002 00ea 49       		.uleb128 0x49
 2003 00eb 13       		.uleb128 0x13
 2004 00ec 02       		.uleb128 0x2
 2005 00ed 17       		.uleb128 0x17
 2006 00ee 00       		.byte	0
 2007 00ef 00       		.byte	0
 2008 00f0 12       		.uleb128 0x12
 2009 00f1 26       		.uleb128 0x26
 2010 00f2 00       		.byte	0
 2011 00f3 49       		.uleb128 0x49
 2012 00f4 13       		.uleb128 0x13
 2013 00f5 00       		.byte	0
 2014 00f6 00       		.byte	0
 2015 00f7 13       		.uleb128 0x13
 2016 00f8 2E       		.uleb128 0x2e
 2017 00f9 01       		.byte	0x1
 2018 00fa 3F       		.uleb128 0x3f
 2019 00fb 19       		.uleb128 0x19
 2020 00fc 03       		.uleb128 0x3
 2021 00fd 0E       		.uleb128 0xe
 2022 00fe 3A       		.uleb128 0x3a
 2023 00ff 0B       		.uleb128 0xb
 2024 0100 3B       		.uleb128 0x3b
 2025 0101 0B       		.uleb128 0xb
 2026 0102 27       		.uleb128 0x27
 2027 0103 19       		.uleb128 0x19
 2028 0104 49       		.uleb128 0x49
 2029 0105 13       		.uleb128 0x13
 2030 0106 11       		.uleb128 0x11
 2031 0107 01       		.uleb128 0x1
 2032 0108 12       		.uleb128 0x12
 2033 0109 06       		.uleb128 0x6
 2034 010a 40       		.uleb128 0x40
 2035 010b 18       		.uleb128 0x18
 2036 010c 9742     		.uleb128 0x2117
 2037 010e 19       		.uleb128 0x19
 2038 010f 01       		.uleb128 0x1
 2039 0110 13       		.uleb128 0x13
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 55


 2040 0111 00       		.byte	0
 2041 0112 00       		.byte	0
 2042 0113 14       		.uleb128 0x14
 2043 0114 34       		.uleb128 0x34
 2044 0115 00       		.byte	0
 2045 0116 03       		.uleb128 0x3
 2046 0117 0E       		.uleb128 0xe
 2047 0118 3A       		.uleb128 0x3a
 2048 0119 0B       		.uleb128 0xb
 2049 011a 3B       		.uleb128 0x3b
 2050 011b 0B       		.uleb128 0xb
 2051 011c 49       		.uleb128 0x49
 2052 011d 13       		.uleb128 0x13
 2053 011e 02       		.uleb128 0x2
 2054 011f 17       		.uleb128 0x17
 2055 0120 00       		.byte	0
 2056 0121 00       		.byte	0
 2057 0122 15       		.uleb128 0x15
 2058 0123 898201   		.uleb128 0x4109
 2059 0126 01       		.byte	0x1
 2060 0127 11       		.uleb128 0x11
 2061 0128 01       		.uleb128 0x1
 2062 0129 31       		.uleb128 0x31
 2063 012a 13       		.uleb128 0x13
 2064 012b 01       		.uleb128 0x1
 2065 012c 13       		.uleb128 0x13
 2066 012d 00       		.byte	0
 2067 012e 00       		.byte	0
 2068 012f 16       		.uleb128 0x16
 2069 0130 8A8201   		.uleb128 0x410a
 2070 0133 00       		.byte	0
 2071 0134 02       		.uleb128 0x2
 2072 0135 18       		.uleb128 0x18
 2073 0136 9142     		.uleb128 0x2111
 2074 0138 18       		.uleb128 0x18
 2075 0139 00       		.byte	0
 2076 013a 00       		.byte	0
 2077 013b 17       		.uleb128 0x17
 2078 013c 898201   		.uleb128 0x4109
 2079 013f 01       		.byte	0x1
 2080 0140 11       		.uleb128 0x11
 2081 0141 01       		.uleb128 0x1
 2082 0142 31       		.uleb128 0x31
 2083 0143 13       		.uleb128 0x13
 2084 0144 00       		.byte	0
 2085 0145 00       		.byte	0
 2086 0146 18       		.uleb128 0x18
 2087 0147 2E       		.uleb128 0x2e
 2088 0148 01       		.byte	0x1
 2089 0149 3F       		.uleb128 0x3f
 2090 014a 19       		.uleb128 0x19
 2091 014b 03       		.uleb128 0x3
 2092 014c 0E       		.uleb128 0xe
 2093 014d 3A       		.uleb128 0x3a
 2094 014e 0B       		.uleb128 0xb
 2095 014f 3B       		.uleb128 0x3b
 2096 0150 05       		.uleb128 0x5
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 56


 2097 0151 27       		.uleb128 0x27
 2098 0152 19       		.uleb128 0x19
 2099 0153 49       		.uleb128 0x49
 2100 0154 13       		.uleb128 0x13
 2101 0155 11       		.uleb128 0x11
 2102 0156 01       		.uleb128 0x1
 2103 0157 12       		.uleb128 0x12
 2104 0158 06       		.uleb128 0x6
 2105 0159 40       		.uleb128 0x40
 2106 015a 18       		.uleb128 0x18
 2107 015b 9742     		.uleb128 0x2117
 2108 015d 19       		.uleb128 0x19
 2109 015e 01       		.uleb128 0x1
 2110 015f 13       		.uleb128 0x13
 2111 0160 00       		.byte	0
 2112 0161 00       		.byte	0
 2113 0162 19       		.uleb128 0x19
 2114 0163 0B       		.uleb128 0xb
 2115 0164 01       		.byte	0x1
 2116 0165 55       		.uleb128 0x55
 2117 0166 17       		.uleb128 0x17
 2118 0167 01       		.uleb128 0x1
 2119 0168 13       		.uleb128 0x13
 2120 0169 00       		.byte	0
 2121 016a 00       		.byte	0
 2122 016b 1A       		.uleb128 0x1a
 2123 016c 898201   		.uleb128 0x4109
 2124 016f 00       		.byte	0
 2125 0170 11       		.uleb128 0x11
 2126 0171 01       		.uleb128 0x1
 2127 0172 31       		.uleb128 0x31
 2128 0173 13       		.uleb128 0x13
 2129 0174 00       		.byte	0
 2130 0175 00       		.byte	0
 2131 0176 1B       		.uleb128 0x1b
 2132 0177 34       		.uleb128 0x34
 2133 0178 00       		.byte	0
 2134 0179 03       		.uleb128 0x3
 2135 017a 0E       		.uleb128 0xe
 2136 017b 3A       		.uleb128 0x3a
 2137 017c 0B       		.uleb128 0xb
 2138 017d 3B       		.uleb128 0x3b
 2139 017e 05       		.uleb128 0x5
 2140 017f 49       		.uleb128 0x49
 2141 0180 13       		.uleb128 0x13
 2142 0181 02       		.uleb128 0x2
 2143 0182 18       		.uleb128 0x18
 2144 0183 00       		.byte	0
 2145 0184 00       		.byte	0
 2146 0185 1C       		.uleb128 0x1c
 2147 0186 34       		.uleb128 0x34
 2148 0187 00       		.byte	0
 2149 0188 03       		.uleb128 0x3
 2150 0189 0E       		.uleb128 0xe
 2151 018a 3A       		.uleb128 0x3a
 2152 018b 0B       		.uleb128 0xb
 2153 018c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 57


 2154 018d 05       		.uleb128 0x5
 2155 018e 49       		.uleb128 0x49
 2156 018f 13       		.uleb128 0x13
 2157 0190 00       		.byte	0
 2158 0191 00       		.byte	0
 2159 0192 1D       		.uleb128 0x1d
 2160 0193 1D       		.uleb128 0x1d
 2161 0194 01       		.byte	0x1
 2162 0195 31       		.uleb128 0x31
 2163 0196 13       		.uleb128 0x13
 2164 0197 11       		.uleb128 0x11
 2165 0198 01       		.uleb128 0x1
 2166 0199 12       		.uleb128 0x12
 2167 019a 06       		.uleb128 0x6
 2168 019b 58       		.uleb128 0x58
 2169 019c 0B       		.uleb128 0xb
 2170 019d 59       		.uleb128 0x59
 2171 019e 05       		.uleb128 0x5
 2172 019f 01       		.uleb128 0x1
 2173 01a0 13       		.uleb128 0x13
 2174 01a1 00       		.byte	0
 2175 01a2 00       		.byte	0
 2176 01a3 1E       		.uleb128 0x1e
 2177 01a4 0B       		.uleb128 0xb
 2178 01a5 01       		.byte	0x1
 2179 01a6 11       		.uleb128 0x11
 2180 01a7 01       		.uleb128 0x1
 2181 01a8 12       		.uleb128 0x12
 2182 01a9 06       		.uleb128 0x6
 2183 01aa 00       		.byte	0
 2184 01ab 00       		.byte	0
 2185 01ac 1F       		.uleb128 0x1f
 2186 01ad 34       		.uleb128 0x34
 2187 01ae 00       		.byte	0
 2188 01af 31       		.uleb128 0x31
 2189 01b0 13       		.uleb128 0x13
 2190 01b1 00       		.byte	0
 2191 01b2 00       		.byte	0
 2192 01b3 20       		.uleb128 0x20
 2193 01b4 1D       		.uleb128 0x1d
 2194 01b5 01       		.byte	0x1
 2195 01b6 31       		.uleb128 0x31
 2196 01b7 13       		.uleb128 0x13
 2197 01b8 11       		.uleb128 0x11
 2198 01b9 01       		.uleb128 0x1
 2199 01ba 12       		.uleb128 0x12
 2200 01bb 06       		.uleb128 0x6
 2201 01bc 58       		.uleb128 0x58
 2202 01bd 0B       		.uleb128 0xb
 2203 01be 59       		.uleb128 0x59
 2204 01bf 05       		.uleb128 0x5
 2205 01c0 00       		.byte	0
 2206 01c1 00       		.byte	0
 2207 01c2 21       		.uleb128 0x21
 2208 01c3 05       		.uleb128 0x5
 2209 01c4 00       		.byte	0
 2210 01c5 31       		.uleb128 0x31
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 58


 2211 01c6 13       		.uleb128 0x13
 2212 01c7 00       		.byte	0
 2213 01c8 00       		.byte	0
 2214 01c9 22       		.uleb128 0x22
 2215 01ca 05       		.uleb128 0x5
 2216 01cb 00       		.byte	0
 2217 01cc 03       		.uleb128 0x3
 2218 01cd 0E       		.uleb128 0xe
 2219 01ce 3A       		.uleb128 0x3a
 2220 01cf 0B       		.uleb128 0xb
 2221 01d0 3B       		.uleb128 0x3b
 2222 01d1 0B       		.uleb128 0xb
 2223 01d2 49       		.uleb128 0x49
 2224 01d3 13       		.uleb128 0x13
 2225 01d4 02       		.uleb128 0x2
 2226 01d5 17       		.uleb128 0x17
 2227 01d6 00       		.byte	0
 2228 01d7 00       		.byte	0
 2229 01d8 23       		.uleb128 0x23
 2230 01d9 2E       		.uleb128 0x2e
 2231 01da 01       		.byte	0x1
 2232 01db 3F       		.uleb128 0x3f
 2233 01dc 19       		.uleb128 0x19
 2234 01dd 03       		.uleb128 0x3
 2235 01de 0E       		.uleb128 0xe
 2236 01df 3A       		.uleb128 0x3a
 2237 01e0 0B       		.uleb128 0xb
 2238 01e1 3B       		.uleb128 0x3b
 2239 01e2 05       		.uleb128 0x5
 2240 01e3 27       		.uleb128 0x27
 2241 01e4 19       		.uleb128 0x19
 2242 01e5 11       		.uleb128 0x11
 2243 01e6 01       		.uleb128 0x1
 2244 01e7 12       		.uleb128 0x12
 2245 01e8 06       		.uleb128 0x6
 2246 01e9 40       		.uleb128 0x40
 2247 01ea 18       		.uleb128 0x18
 2248 01eb 9742     		.uleb128 0x2117
 2249 01ed 19       		.uleb128 0x19
 2250 01ee 01       		.uleb128 0x1
 2251 01ef 13       		.uleb128 0x13
 2252 01f0 00       		.byte	0
 2253 01f1 00       		.byte	0
 2254 01f2 24       		.uleb128 0x24
 2255 01f3 34       		.uleb128 0x34
 2256 01f4 00       		.byte	0
 2257 01f5 03       		.uleb128 0x3
 2258 01f6 0E       		.uleb128 0xe
 2259 01f7 3A       		.uleb128 0x3a
 2260 01f8 0B       		.uleb128 0xb
 2261 01f9 3B       		.uleb128 0x3b
 2262 01fa 05       		.uleb128 0x5
 2263 01fb 49       		.uleb128 0x49
 2264 01fc 13       		.uleb128 0x13
 2265 01fd 3F       		.uleb128 0x3f
 2266 01fe 19       		.uleb128 0x19
 2267 01ff 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 59


 2268 0200 19       		.uleb128 0x19
 2269 0201 00       		.byte	0
 2270 0202 00       		.byte	0
 2271 0203 25       		.uleb128 0x25
 2272 0204 2E       		.uleb128 0x2e
 2273 0205 00       		.byte	0
 2274 0206 3F       		.uleb128 0x3f
 2275 0207 19       		.uleb128 0x19
 2276 0208 3C       		.uleb128 0x3c
 2277 0209 19       		.uleb128 0x19
 2278 020a 6E       		.uleb128 0x6e
 2279 020b 0E       		.uleb128 0xe
 2280 020c 03       		.uleb128 0x3
 2281 020d 0E       		.uleb128 0xe
 2282 020e 3A       		.uleb128 0x3a
 2283 020f 0B       		.uleb128 0xb
 2284 0210 3B       		.uleb128 0x3b
 2285 0211 0B       		.uleb128 0xb
 2286 0212 00       		.byte	0
 2287 0213 00       		.byte	0
 2288 0214 26       		.uleb128 0x26
 2289 0215 2E       		.uleb128 0x2e
 2290 0216 00       		.byte	0
 2291 0217 3F       		.uleb128 0x3f
 2292 0218 19       		.uleb128 0x19
 2293 0219 3C       		.uleb128 0x3c
 2294 021a 19       		.uleb128 0x19
 2295 021b 6E       		.uleb128 0x6e
 2296 021c 0E       		.uleb128 0xe
 2297 021d 03       		.uleb128 0x3
 2298 021e 0E       		.uleb128 0xe
 2299 021f 3A       		.uleb128 0x3a
 2300 0220 0B       		.uleb128 0xb
 2301 0221 3B       		.uleb128 0x3b
 2302 0222 05       		.uleb128 0x5
 2303 0223 00       		.byte	0
 2304 0224 00       		.byte	0
 2305 0225 00       		.byte	0
 2306              		.section	.debug_loc,"",%progbits
 2307              	.Ldebug_loc0:
 2308              	.LLST0:
 2309 0000 00000000 		.4byte	.LVL0
 2310 0004 08000000 		.4byte	.LVL1
 2311 0008 0100     		.2byte	0x1
 2312 000a 50       		.byte	0x50
 2313 000b 08000000 		.4byte	.LVL1
 2314 000f 0A000000 		.4byte	.LVL2
 2315 0013 0400     		.2byte	0x4
 2316 0015 F3       		.byte	0xf3
 2317 0016 01       		.uleb128 0x1
 2318 0017 50       		.byte	0x50
 2319 0018 9F       		.byte	0x9f
 2320 0019 0A000000 		.4byte	.LVL2
 2321 001d 12000000 		.4byte	.LVL3
 2322 0021 0100     		.2byte	0x1
 2323 0023 50       		.byte	0x50
 2324 0024 12000000 		.4byte	.LVL3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 60


 2325 0028 14000000 		.4byte	.LVL4
 2326 002c 0400     		.2byte	0x4
 2327 002e F3       		.byte	0xf3
 2328 002f 01       		.uleb128 0x1
 2329 0030 50       		.byte	0x50
 2330 0031 9F       		.byte	0x9f
 2331 0032 14000000 		.4byte	.LVL4
 2332 0036 16000000 		.4byte	.LVL5
 2333 003a 0100     		.2byte	0x1
 2334 003c 50       		.byte	0x50
 2335 003d 16000000 		.4byte	.LVL5
 2336 0041 18000000 		.4byte	.LVL6
 2337 0045 0400     		.2byte	0x4
 2338 0047 F3       		.byte	0xf3
 2339 0048 01       		.uleb128 0x1
 2340 0049 50       		.byte	0x50
 2341 004a 9F       		.byte	0x9f
 2342 004b 18000000 		.4byte	.LVL6
 2343 004f 1A000000 		.4byte	.LVL7
 2344 0053 0100     		.2byte	0x1
 2345 0055 50       		.byte	0x50
 2346 0056 1A000000 		.4byte	.LVL7
 2347 005a 1C000000 		.4byte	.LFE78
 2348 005e 0400     		.2byte	0x4
 2349 0060 F3       		.byte	0xf3
 2350 0061 01       		.uleb128 0x1
 2351 0062 50       		.byte	0x50
 2352 0063 9F       		.byte	0x9f
 2353 0064 00000000 		.4byte	0
 2354 0068 00000000 		.4byte	0
 2355              	.LLST1:
 2356 006c 00000000 		.4byte	.LVL0
 2357 0070 1A000000 		.4byte	.LVL7
 2358 0074 0200     		.2byte	0x2
 2359 0076 30       		.byte	0x30
 2360 0077 9F       		.byte	0x9f
 2361 0078 1A000000 		.4byte	.LVL7
 2362 007c 1C000000 		.4byte	.LFE78
 2363 0080 0100     		.2byte	0x1
 2364 0082 50       		.byte	0x50
 2365 0083 00000000 		.4byte	0
 2366 0087 00000000 		.4byte	0
 2367              	.LLST2:
 2368 008b 08000000 		.4byte	.LVL8
 2369 008f 12000000 		.4byte	.LVL9
 2370 0093 0100     		.2byte	0x1
 2371 0095 50       		.byte	0x50
 2372 0096 12000000 		.4byte	.LVL9
 2373 009a 1A000000 		.4byte	.LFE69
 2374 009e 0100     		.2byte	0x1
 2375 00a0 54       		.byte	0x54
 2376 00a1 00000000 		.4byte	0
 2377 00a5 00000000 		.4byte	0
 2378              	.LLST3:
 2379 00a9 00000000 		.4byte	.LVL11
 2380 00ad 11000000 		.4byte	.LVL13-1
 2381 00b1 0100     		.2byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 61


 2382 00b3 50       		.byte	0x50
 2383 00b4 11000000 		.4byte	.LVL13-1
 2384 00b8 AA000000 		.4byte	.LVL36
 2385 00bc 0100     		.2byte	0x1
 2386 00be 57       		.byte	0x57
 2387 00bf AA000000 		.4byte	.LVL36
 2388 00c3 B0000000 		.4byte	.LFE71
 2389 00c7 0400     		.2byte	0x4
 2390 00c9 F3       		.byte	0xf3
 2391 00ca 01       		.uleb128 0x1
 2392 00cb 50       		.byte	0x50
 2393 00cc 9F       		.byte	0x9f
 2394 00cd 00000000 		.4byte	0
 2395 00d1 00000000 		.4byte	0
 2396              	.LLST4:
 2397 00d5 00000000 		.4byte	.LVL11
 2398 00d9 11000000 		.4byte	.LVL13-1
 2399 00dd 0100     		.2byte	0x1
 2400 00df 51       		.byte	0x51
 2401 00e0 11000000 		.4byte	.LVL13-1
 2402 00e4 9A000000 		.4byte	.LVL32
 2403 00e8 0100     		.2byte	0x1
 2404 00ea 56       		.byte	0x56
 2405 00eb 9A000000 		.4byte	.LVL32
 2406 00ef B0000000 		.4byte	.LFE71
 2407 00f3 0400     		.2byte	0x4
 2408 00f5 F3       		.byte	0xf3
 2409 00f6 01       		.uleb128 0x1
 2410 00f7 51       		.byte	0x51
 2411 00f8 9F       		.byte	0x9f
 2412 00f9 00000000 		.4byte	0
 2413 00fd 00000000 		.4byte	0
 2414              	.LLST5:
 2415 0101 00000000 		.4byte	.LVL11
 2416 0105 11000000 		.4byte	.LVL13-1
 2417 0109 0100     		.2byte	0x1
 2418 010b 52       		.byte	0x52
 2419 010c 11000000 		.4byte	.LVL13-1
 2420 0110 AA000000 		.4byte	.LVL36
 2421 0114 0100     		.2byte	0x1
 2422 0116 59       		.byte	0x59
 2423 0117 AA000000 		.4byte	.LVL36
 2424 011b B0000000 		.4byte	.LFE71
 2425 011f 0400     		.2byte	0x4
 2426 0121 F3       		.byte	0xf3
 2427 0122 01       		.uleb128 0x1
 2428 0123 52       		.byte	0x52
 2429 0124 9F       		.byte	0x9f
 2430 0125 00000000 		.4byte	0
 2431 0129 00000000 		.4byte	0
 2432              	.LLST6:
 2433 012d 00000000 		.4byte	.LVL11
 2434 0131 11000000 		.4byte	.LVL13-1
 2435 0135 0100     		.2byte	0x1
 2436 0137 53       		.byte	0x53
 2437 0138 11000000 		.4byte	.LVL13-1
 2438 013c AA000000 		.4byte	.LVL36
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 62


 2439 0140 0100     		.2byte	0x1
 2440 0142 58       		.byte	0x58
 2441 0143 AA000000 		.4byte	.LVL36
 2442 0147 B0000000 		.4byte	.LFE71
 2443 014b 0400     		.2byte	0x4
 2444 014d F3       		.byte	0xf3
 2445 014e 01       		.uleb128 0x1
 2446 014f 53       		.byte	0x53
 2447 0150 9F       		.byte	0x9f
 2448 0151 00000000 		.4byte	0
 2449 0155 00000000 		.4byte	0
 2450              	.LLST7:
 2451 0159 00000000 		.4byte	.LVL11
 2452 015d 20000000 		.4byte	.LVL16
 2453 0161 0200     		.2byte	0x2
 2454 0163 91       		.byte	0x91
 2455 0164 00       		.sleb128 0
 2456 0165 20000000 		.4byte	.LVL16
 2457 0169 30000000 		.4byte	.LVL17
 2458 016d 0200     		.2byte	0x2
 2459 016f 30       		.byte	0x30
 2460 0170 9F       		.byte	0x9f
 2461 0171 30000000 		.4byte	.LVL17
 2462 0175 58000000 		.4byte	.LVL24
 2463 0179 0200     		.2byte	0x2
 2464 017b 91       		.byte	0x91
 2465 017c 00       		.sleb128 0
 2466 017d 58000000 		.4byte	.LVL24
 2467 0181 5A000000 		.4byte	.LVL25
 2468 0185 0200     		.2byte	0x2
 2469 0187 30       		.byte	0x30
 2470 0188 9F       		.byte	0x9f
 2471 0189 5A000000 		.4byte	.LVL25
 2472 018d AA000000 		.4byte	.LVL36
 2473 0191 0100     		.2byte	0x1
 2474 0193 55       		.byte	0x55
 2475 0194 00000000 		.4byte	0
 2476 0198 00000000 		.4byte	0
 2477              	.LLST8:
 2478 019c 0E000000 		.4byte	.LVL12
 2479 01a0 11000000 		.4byte	.LVL13-1
 2480 01a4 0100     		.2byte	0x1
 2481 01a6 50       		.byte	0x50
 2482 01a7 11000000 		.4byte	.LVL13-1
 2483 01ab AA000000 		.4byte	.LVL36
 2484 01af 0100     		.2byte	0x1
 2485 01b1 57       		.byte	0x57
 2486 01b2 AA000000 		.4byte	.LVL36
 2487 01b6 B0000000 		.4byte	.LFE71
 2488 01ba 0400     		.2byte	0x4
 2489 01bc F3       		.byte	0xf3
 2490 01bd 01       		.uleb128 0x1
 2491 01be 50       		.byte	0x50
 2492 01bf 9F       		.byte	0x9f
 2493 01c0 00000000 		.4byte	0
 2494 01c4 00000000 		.4byte	0
 2495              	.LLST9:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 63


 2496 01c8 20000000 		.4byte	.LVL16
 2497 01cc 30000000 		.4byte	.LVL17
 2498 01d0 0100     		.2byte	0x1
 2499 01d2 54       		.byte	0x54
 2500 01d3 54000000 		.4byte	.LVL22
 2501 01d7 58000000 		.4byte	.LVL24
 2502 01db 0200     		.2byte	0x2
 2503 01dd 30       		.byte	0x30
 2504 01de 9F       		.byte	0x9f
 2505 01df 58000000 		.4byte	.LVL24
 2506 01e3 78000000 		.4byte	.LVL28
 2507 01e7 0100     		.2byte	0x1
 2508 01e9 54       		.byte	0x54
 2509 01ea 78000000 		.4byte	.LVL28
 2510 01ee 81000000 		.4byte	.LVL29-1
 2511 01f2 0100     		.2byte	0x1
 2512 01f4 50       		.byte	0x50
 2513 01f5 81000000 		.4byte	.LVL29-1
 2514 01f9 AA000000 		.4byte	.LVL36
 2515 01fd 0100     		.2byte	0x1
 2516 01ff 54       		.byte	0x54
 2517 0200 AA000000 		.4byte	.LVL36
 2518 0204 B0000000 		.4byte	.LFE71
 2519 0208 0100     		.2byte	0x1
 2520 020a 50       		.byte	0x50
 2521 020b 00000000 		.4byte	0
 2522 020f 00000000 		.4byte	0
 2523              	.LLST10:
 2524 0213 0E000000 		.4byte	.LVL12
 2525 0217 40000000 		.4byte	.LVL18
 2526 021b 0200     		.2byte	0x2
 2527 021d 30       		.byte	0x30
 2528 021e 9F       		.byte	0x9f
 2529 021f 40000000 		.4byte	.LVL18
 2530 0223 4E000000 		.4byte	.LVL20
 2531 0227 0100     		.2byte	0x1
 2532 0229 51       		.byte	0x51
 2533 022a 58000000 		.4byte	.LVL24
 2534 022e 5A000000 		.4byte	.LVL25
 2535 0232 0200     		.2byte	0x2
 2536 0234 30       		.byte	0x30
 2537 0235 9F       		.byte	0x9f
 2538 0236 00000000 		.4byte	0
 2539 023a 00000000 		.4byte	0
 2540              	.LLST11:
 2541 023e 1E000000 		.4byte	.LVL15
 2542 0242 50000000 		.4byte	.LVL21
 2543 0246 0100     		.2byte	0x1
 2544 0248 50       		.byte	0x50
 2545 0249 58000000 		.4byte	.LVL24
 2546 024d 5A000000 		.4byte	.LVL25
 2547 0251 0100     		.2byte	0x1
 2548 0253 50       		.byte	0x50
 2549 0254 00000000 		.4byte	0
 2550 0258 00000000 		.4byte	0
 2551              	.LLST12:
 2552 025c 5E000000 		.4byte	.LVL26
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 64


 2553 0260 75000000 		.4byte	.LVL27-1
 2554 0264 0100     		.2byte	0x1
 2555 0266 50       		.byte	0x50
 2556 0267 00000000 		.4byte	0
 2557 026b 00000000 		.4byte	0
 2558              	.LLST13:
 2559 026f 0E000000 		.4byte	.LVL12
 2560 0273 9C000000 		.4byte	.LVL33
 2561 0277 0200     		.2byte	0x2
 2562 0279 30       		.byte	0x30
 2563 027a 9F       		.byte	0x9f
 2564 027b 9C000000 		.4byte	.LVL33
 2565 027f A0000000 		.4byte	.LVL34
 2566 0283 0200     		.2byte	0x2
 2567 0285 31       		.byte	0x31
 2568 0286 9F       		.byte	0x9f
 2569 0287 00000000 		.4byte	0
 2570 028b 00000000 		.4byte	0
 2571              	.LLST14:
 2572 028f 14000000 		.4byte	.LVL14
 2573 0293 56000000 		.4byte	.LVL23
 2574 0297 0100     		.2byte	0x1
 2575 0299 54       		.byte	0x54
 2576 029a 58000000 		.4byte	.LVL24
 2577 029e 5A000000 		.4byte	.LVL25
 2578 02a2 0100     		.2byte	0x1
 2579 02a4 54       		.byte	0x54
 2580 02a5 00000000 		.4byte	0
 2581 02a9 00000000 		.4byte	0
 2582              	.LLST15:
 2583 02ad 00000000 		.4byte	.LVL37
 2584 02b1 09000000 		.4byte	.LVL39-1
 2585 02b5 0100     		.2byte	0x1
 2586 02b7 50       		.byte	0x50
 2587 02b8 09000000 		.4byte	.LVL39-1
 2588 02bc 1A000000 		.4byte	.LFE72
 2589 02c0 0100     		.2byte	0x1
 2590 02c2 56       		.byte	0x56
 2591 02c3 00000000 		.4byte	0
 2592 02c7 00000000 		.4byte	0
 2593              	.LLST16:
 2594 02cb 00000000 		.4byte	.LVL37
 2595 02cf 09000000 		.4byte	.LVL39-1
 2596 02d3 0100     		.2byte	0x1
 2597 02d5 51       		.byte	0x51
 2598 02d6 09000000 		.4byte	.LVL39-1
 2599 02da 10000000 		.4byte	.LVL41
 2600 02de 0100     		.2byte	0x1
 2601 02e0 54       		.byte	0x54
 2602 02e1 10000000 		.4byte	.LVL41
 2603 02e5 1A000000 		.4byte	.LFE72
 2604 02e9 0400     		.2byte	0x4
 2605 02eb F3       		.byte	0xf3
 2606 02ec 01       		.uleb128 0x1
 2607 02ed 51       		.byte	0x51
 2608 02ee 9F       		.byte	0x9f
 2609 02ef 00000000 		.4byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 65


 2610 02f3 00000000 		.4byte	0
 2611              	.LLST17:
 2612 02f7 06000000 		.4byte	.LVL38
 2613 02fb 09000000 		.4byte	.LVL39-1
 2614 02ff 0100     		.2byte	0x1
 2615 0301 50       		.byte	0x50
 2616 0302 09000000 		.4byte	.LVL39-1
 2617 0306 1A000000 		.4byte	.LFE72
 2618 030a 0100     		.2byte	0x1
 2619 030c 56       		.byte	0x56
 2620 030d 00000000 		.4byte	0
 2621 0311 00000000 		.4byte	0
 2622              	.LLST18:
 2623 0315 00000000 		.4byte	.LVL43
 2624 0319 16000000 		.4byte	.LVL44
 2625 031d 0100     		.2byte	0x1
 2626 031f 50       		.byte	0x50
 2627 0320 16000000 		.4byte	.LVL44
 2628 0324 1C000000 		.4byte	.LFE73
 2629 0328 0400     		.2byte	0x4
 2630 032a F3       		.byte	0xf3
 2631 032b 01       		.uleb128 0x1
 2632 032c 50       		.byte	0x50
 2633 032d 9F       		.byte	0x9f
 2634 032e 00000000 		.4byte	0
 2635 0332 00000000 		.4byte	0
 2636              	.LLST19:
 2637 0336 00000000 		.4byte	.LVL43
 2638 033a 16000000 		.4byte	.LVL44
 2639 033e 0100     		.2byte	0x1
 2640 0340 50       		.byte	0x50
 2641 0341 16000000 		.4byte	.LVL44
 2642 0345 1C000000 		.4byte	.LFE73
 2643 0349 0400     		.2byte	0x4
 2644 034b F3       		.byte	0xf3
 2645 034c 01       		.uleb128 0x1
 2646 034d 50       		.byte	0x50
 2647 034e 9F       		.byte	0x9f
 2648 034f 00000000 		.4byte	0
 2649 0353 00000000 		.4byte	0
 2650              	.LLST20:
 2651 0357 00000000 		.4byte	.LVL45
 2652 035b 0D000000 		.4byte	.LVL48-1
 2653 035f 0100     		.2byte	0x1
 2654 0361 50       		.byte	0x50
 2655 0362 0D000000 		.4byte	.LVL48-1
 2656 0366 6E000000 		.4byte	.LFE74
 2657 036a 0100     		.2byte	0x1
 2658 036c 54       		.byte	0x54
 2659 036d 00000000 		.4byte	0
 2660 0371 00000000 		.4byte	0
 2661              	.LLST21:
 2662 0375 00000000 		.4byte	.LVL45
 2663 0379 0D000000 		.4byte	.LVL48-1
 2664 037d 0100     		.2byte	0x1
 2665 037f 51       		.byte	0x51
 2666 0380 0D000000 		.4byte	.LVL48-1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 66


 2667 0384 14000000 		.4byte	.LVL50
 2668 0388 0100     		.2byte	0x1
 2669 038a 55       		.byte	0x55
 2670 038b 14000000 		.4byte	.LVL50
 2671 038f 6E000000 		.4byte	.LFE74
 2672 0393 0400     		.2byte	0x4
 2673 0395 F3       		.byte	0xf3
 2674 0396 01       		.uleb128 0x1
 2675 0397 51       		.byte	0x51
 2676 0398 9F       		.byte	0x9f
 2677 0399 00000000 		.4byte	0
 2678 039d 00000000 		.4byte	0
 2679              	.LLST22:
 2680 03a1 10000000 		.4byte	.LVL49
 2681 03a5 57000000 		.4byte	.LVL58-1
 2682 03a9 0100     		.2byte	0x1
 2683 03ab 50       		.byte	0x50
 2684 03ac 5A000000 		.4byte	.LVL59
 2685 03b0 69000000 		.4byte	.LVL61-1
 2686 03b4 0100     		.2byte	0x1
 2687 03b6 50       		.byte	0x50
 2688 03b7 00000000 		.4byte	0
 2689 03bb 00000000 		.4byte	0
 2690              	.LLST23:
 2691 03bf 1C000000 		.4byte	.LVL52
 2692 03c3 5A000000 		.4byte	.LVL59
 2693 03c7 0100     		.2byte	0x1
 2694 03c9 55       		.byte	0x55
 2695 03ca 00000000 		.4byte	0
 2696 03ce 00000000 		.4byte	0
 2697              	.LLST24:
 2698 03d2 06000000 		.4byte	.LVL46
 2699 03d6 0D000000 		.4byte	.LVL48-1
 2700 03da 0300     		.2byte	0x3
 2701 03dc 70       		.byte	0x70
 2702 03dd 04       		.sleb128 4
 2703 03de 9F       		.byte	0x9f
 2704 03df 0D000000 		.4byte	.LVL48-1
 2705 03e3 6E000000 		.4byte	.LFE74
 2706 03e7 0300     		.2byte	0x3
 2707 03e9 74       		.byte	0x74
 2708 03ea 04       		.sleb128 4
 2709 03eb 9F       		.byte	0x9f
 2710 03ec 00000000 		.4byte	0
 2711 03f0 00000000 		.4byte	0
 2712              	.LLST25:
 2713 03f4 06000000 		.4byte	.LVL46
 2714 03f8 1A000000 		.4byte	.LVL51
 2715 03fc 0200     		.2byte	0x2
 2716 03fe 30       		.byte	0x30
 2717 03ff 9F       		.byte	0x9f
 2718 0400 1A000000 		.4byte	.LVL51
 2719 0404 64000000 		.4byte	.LVL60
 2720 0408 0100     		.2byte	0x1
 2721 040a 57       		.byte	0x57
 2722 040b 00000000 		.4byte	0
 2723 040f 00000000 		.4byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 67


 2724              	.LLST26:
 2725 0413 1E000000 		.4byte	.LVL53
 2726 0417 22000000 		.4byte	.LVL54
 2727 041b 0100     		.2byte	0x1
 2728 041d 53       		.byte	0x53
 2729 041e 22000000 		.4byte	.LVL54
 2730 0422 57000000 		.4byte	.LVL58-1
 2731 0426 0100     		.2byte	0x1
 2732 0428 52       		.byte	0x52
 2733 0429 00000000 		.4byte	0
 2734 042d 00000000 		.4byte	0
 2735              	.LLST27:
 2736 0431 1E000000 		.4byte	.LVL53
 2737 0435 57000000 		.4byte	.LVL58-1
 2738 0439 0800     		.2byte	0x8
 2739 043b 73       		.byte	0x73
 2740 043c 00       		.sleb128 0
 2741 043d 40       		.byte	0x40
 2742 043e 44       		.byte	0x44
 2743 043f 24       		.byte	0x24
 2744 0440 1F       		.byte	0x1f
 2745 0441 1A       		.byte	0x1a
 2746 0442 9F       		.byte	0x9f
 2747 0443 00000000 		.4byte	0
 2748 0447 00000000 		.4byte	0
 2749              	.LLST28:
 2750 044b 06000000 		.4byte	.LVL46
 2751 044f 0D000000 		.4byte	.LVL48-1
 2752 0453 0100     		.2byte	0x1
 2753 0455 50       		.byte	0x50
 2754 0456 0D000000 		.4byte	.LVL48-1
 2755 045a 6E000000 		.4byte	.LFE74
 2756 045e 0100     		.2byte	0x1
 2757 0460 54       		.byte	0x54
 2758 0461 00000000 		.4byte	0
 2759 0465 00000000 		.4byte	0
 2760              	.LLST29:
 2761 0469 06000000 		.4byte	.LVL46
 2762 046d 1A000000 		.4byte	.LVL51
 2763 0471 0200     		.2byte	0x2
 2764 0473 30       		.byte	0x30
 2765 0474 9F       		.byte	0x9f
 2766 0475 1E000000 		.4byte	.LVL53
 2767 0479 44000000 		.4byte	.LVL55
 2768 047d 0200     		.2byte	0x2
 2769 047f 30       		.byte	0x30
 2770 0480 9F       		.byte	0x9f
 2771 0481 44000000 		.4byte	.LVL55
 2772 0485 50000000 		.4byte	.LVL57
 2773 0489 0100     		.2byte	0x1
 2774 048b 51       		.byte	0x51
 2775 048c 00000000 		.4byte	0
 2776 0490 00000000 		.4byte	0
 2777              	.LLST30:
 2778 0494 00000000 		.4byte	.LVL62
 2779 0498 0F000000 		.4byte	.LVL64-1
 2780 049c 0100     		.2byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 68


 2781 049e 50       		.byte	0x50
 2782 049f 0F000000 		.4byte	.LVL64-1
 2783 04a3 8A000000 		.4byte	.LVL82
 2784 04a7 0100     		.2byte	0x1
 2785 04a9 55       		.byte	0x55
 2786 04aa 8A000000 		.4byte	.LVL82
 2787 04ae 90000000 		.4byte	.LFE70
 2788 04b2 0400     		.2byte	0x4
 2789 04b4 F3       		.byte	0xf3
 2790 04b5 01       		.uleb128 0x1
 2791 04b6 50       		.byte	0x50
 2792 04b7 9F       		.byte	0x9f
 2793 04b8 00000000 		.4byte	0
 2794 04bc 00000000 		.4byte	0
 2795              	.LLST31:
 2796 04c0 00000000 		.4byte	.LVL62
 2797 04c4 0F000000 		.4byte	.LVL64-1
 2798 04c8 0100     		.2byte	0x1
 2799 04ca 51       		.byte	0x51
 2800 04cb 0F000000 		.4byte	.LVL64-1
 2801 04cf 20000000 		.4byte	.LVL67
 2802 04d3 0100     		.2byte	0x1
 2803 04d5 54       		.byte	0x54
 2804 04d6 20000000 		.4byte	.LVL67
 2805 04da 90000000 		.4byte	.LFE70
 2806 04de 0400     		.2byte	0x4
 2807 04e0 F3       		.byte	0xf3
 2808 04e1 01       		.uleb128 0x1
 2809 04e2 51       		.byte	0x51
 2810 04e3 9F       		.byte	0x9f
 2811 04e4 00000000 		.4byte	0
 2812 04e8 00000000 		.4byte	0
 2813              	.LLST32:
 2814 04ec 00000000 		.4byte	.LVL62
 2815 04f0 0F000000 		.4byte	.LVL64-1
 2816 04f4 0100     		.2byte	0x1
 2817 04f6 52       		.byte	0x52
 2818 04f7 0F000000 		.4byte	.LVL64-1
 2819 04fb 7A000000 		.4byte	.LVL79
 2820 04ff 0100     		.2byte	0x1
 2821 0501 57       		.byte	0x57
 2822 0502 7A000000 		.4byte	.LVL79
 2823 0506 90000000 		.4byte	.LFE70
 2824 050a 0400     		.2byte	0x4
 2825 050c F3       		.byte	0xf3
 2826 050d 01       		.uleb128 0x1
 2827 050e 52       		.byte	0x52
 2828 050f 9F       		.byte	0x9f
 2829 0510 00000000 		.4byte	0
 2830 0514 00000000 		.4byte	0
 2831              	.LLST33:
 2832 0518 00000000 		.4byte	.LVL62
 2833 051c 0F000000 		.4byte	.LVL64-1
 2834 0520 0100     		.2byte	0x1
 2835 0522 53       		.byte	0x53
 2836 0523 0F000000 		.4byte	.LVL64-1
 2837 0527 2E000000 		.4byte	.LVL69
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 69


 2838 052b 0100     		.2byte	0x1
 2839 052d 56       		.byte	0x56
 2840 052e 2E000000 		.4byte	.LVL69
 2841 0532 32000000 		.4byte	.LVL70
 2842 0536 0200     		.2byte	0x2
 2843 0538 30       		.byte	0x30
 2844 0539 9F       		.byte	0x9f
 2845 053a 32000000 		.4byte	.LVL70
 2846 053e 8A000000 		.4byte	.LVL82
 2847 0542 0100     		.2byte	0x1
 2848 0544 56       		.byte	0x56
 2849 0545 00000000 		.4byte	0
 2850 0549 00000000 		.4byte	0
 2851              	.LLST34:
 2852 054d 14000000 		.4byte	.LVL65
 2853 0551 8A000000 		.4byte	.LVL82
 2854 0555 0100     		.2byte	0x1
 2855 0557 58       		.byte	0x58
 2856 0558 00000000 		.4byte	0
 2857 055c 00000000 		.4byte	0
 2858              	.LLST35:
 2859 0560 26000000 		.4byte	.LVL68
 2860 0564 32000000 		.4byte	.LVL70
 2861 0568 0100     		.2byte	0x1
 2862 056a 54       		.byte	0x54
 2863 056b 40000000 		.4byte	.LVL71
 2864 056f 44000000 		.4byte	.LVL72
 2865 0573 0200     		.2byte	0x2
 2866 0575 30       		.byte	0x30
 2867 0576 9F       		.byte	0x9f
 2868 0577 46000000 		.4byte	.LVL73
 2869 057b 64000000 		.4byte	.LVL76
 2870 057f 0100     		.2byte	0x1
 2871 0581 54       		.byte	0x54
 2872 0582 64000000 		.4byte	.LVL76
 2873 0586 6D000000 		.4byte	.LVL77-1
 2874 058a 0100     		.2byte	0x1
 2875 058c 50       		.byte	0x50
 2876 058d 6D000000 		.4byte	.LVL77-1
 2877 0591 8A000000 		.4byte	.LVL82
 2878 0595 0100     		.2byte	0x1
 2879 0597 54       		.byte	0x54
 2880 0598 8A000000 		.4byte	.LVL82
 2881 059c 90000000 		.4byte	.LFE70
 2882 05a0 0100     		.2byte	0x1
 2883 05a2 50       		.byte	0x50
 2884 05a3 00000000 		.4byte	0
 2885 05a7 00000000 		.4byte	0
 2886              	.LLST36:
 2887 05ab 0C000000 		.4byte	.LVL63
 2888 05af 0F000000 		.4byte	.LVL64-1
 2889 05b3 0100     		.2byte	0x1
 2890 05b5 50       		.byte	0x50
 2891 05b6 0F000000 		.4byte	.LVL64-1
 2892 05ba 8A000000 		.4byte	.LVL82
 2893 05be 0100     		.2byte	0x1
 2894 05c0 55       		.byte	0x55
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 70


 2895 05c1 8A000000 		.4byte	.LVL82
 2896 05c5 90000000 		.4byte	.LFE70
 2897 05c9 0400     		.2byte	0x4
 2898 05cb F3       		.byte	0xf3
 2899 05cc 01       		.uleb128 0x1
 2900 05cd 50       		.byte	0x50
 2901 05ce 9F       		.byte	0x9f
 2902 05cf 00000000 		.4byte	0
 2903 05d3 00000000 		.4byte	0
 2904              	.LLST37:
 2905 05d7 4A000000 		.4byte	.LVL74
 2906 05db 61000000 		.4byte	.LVL75-1
 2907 05df 0100     		.2byte	0x1
 2908 05e1 50       		.byte	0x50
 2909 05e2 00000000 		.4byte	0
 2910 05e6 00000000 		.4byte	0
 2911              	.LLST38:
 2912 05ea 0C000000 		.4byte	.LVL63
 2913 05ee 46000000 		.4byte	.LVL73
 2914 05f2 0200     		.2byte	0x2
 2915 05f4 30       		.byte	0x30
 2916 05f5 9F       		.byte	0x9f
 2917 05f6 00000000 		.4byte	0
 2918 05fa 00000000 		.4byte	0
 2919              	.LLST39:
 2920 05fe 00000000 		.4byte	.LVL83
 2921 0602 07000000 		.4byte	.LVL85-1
 2922 0606 0100     		.2byte	0x1
 2923 0608 50       		.byte	0x50
 2924 0609 07000000 		.4byte	.LVL85-1
 2925 060d 26000000 		.4byte	.LFE75
 2926 0611 0100     		.2byte	0x1
 2927 0613 54       		.byte	0x54
 2928 0614 00000000 		.4byte	0
 2929 0618 00000000 		.4byte	0
 2930              	.LLST40:
 2931 061c 04000000 		.4byte	.LVL84
 2932 0620 07000000 		.4byte	.LVL85-1
 2933 0624 0100     		.2byte	0x1
 2934 0626 50       		.byte	0x50
 2935 0627 07000000 		.4byte	.LVL85-1
 2936 062b 26000000 		.4byte	.LFE75
 2937 062f 0100     		.2byte	0x1
 2938 0631 54       		.byte	0x54
 2939 0632 00000000 		.4byte	0
 2940 0636 00000000 		.4byte	0
 2941              	.LLST41:
 2942 063a 04000000 		.4byte	.LVL84
 2943 063e 07000000 		.4byte	.LVL85-1
 2944 0642 0300     		.2byte	0x3
 2945 0644 70       		.byte	0x70
 2946 0645 04       		.sleb128 4
 2947 0646 9F       		.byte	0x9f
 2948 0647 07000000 		.4byte	.LVL85-1
 2949 064b 26000000 		.4byte	.LFE75
 2950 064f 0300     		.2byte	0x3
 2951 0651 74       		.byte	0x74
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 71


 2952 0652 04       		.sleb128 4
 2953 0653 9F       		.byte	0x9f
 2954 0654 00000000 		.4byte	0
 2955 0658 00000000 		.4byte	0
 2956              	.LLST42:
 2957 065c 00000000 		.4byte	.LVL89
 2958 0660 05000000 		.4byte	.LVL90-1
 2959 0664 0100     		.2byte	0x1
 2960 0666 50       		.byte	0x50
 2961 0667 05000000 		.4byte	.LVL90-1
 2962 066b 08000000 		.4byte	.LFE76
 2963 066f 0400     		.2byte	0x4
 2964 0671 F3       		.byte	0xf3
 2965 0672 01       		.uleb128 0x1
 2966 0673 50       		.byte	0x50
 2967 0674 9F       		.byte	0x9f
 2968 0675 00000000 		.4byte	0
 2969 0679 00000000 		.4byte	0
 2970              	.LLST43:
 2971 067d 00000000 		.4byte	.LVL89
 2972 0681 05000000 		.4byte	.LVL90-1
 2973 0685 0100     		.2byte	0x1
 2974 0687 51       		.byte	0x51
 2975 0688 05000000 		.4byte	.LVL90-1
 2976 068c 08000000 		.4byte	.LFE76
 2977 0690 0400     		.2byte	0x4
 2978 0692 F3       		.byte	0xf3
 2979 0693 01       		.uleb128 0x1
 2980 0694 51       		.byte	0x51
 2981 0695 9F       		.byte	0x9f
 2982 0696 00000000 		.4byte	0
 2983 069a 00000000 		.4byte	0
 2984              	.LLST44:
 2985 069e 00000000 		.4byte	.LVL91
 2986 06a2 05000000 		.4byte	.LVL92-1
 2987 06a6 0100     		.2byte	0x1
 2988 06a8 50       		.byte	0x50
 2989 06a9 05000000 		.4byte	.LVL92-1
 2990 06ad 08000000 		.4byte	.LFE77
 2991 06b1 0400     		.2byte	0x4
 2992 06b3 F3       		.byte	0xf3
 2993 06b4 01       		.uleb128 0x1
 2994 06b5 50       		.byte	0x50
 2995 06b6 9F       		.byte	0x9f
 2996 06b7 00000000 		.4byte	0
 2997 06bb 00000000 		.4byte	0
 2998              	.LLST45:
 2999 06bf 00000000 		.4byte	.LVL91
 3000 06c3 05000000 		.4byte	.LVL92-1
 3001 06c7 0100     		.2byte	0x1
 3002 06c9 51       		.byte	0x51
 3003 06ca 05000000 		.4byte	.LVL92-1
 3004 06ce 08000000 		.4byte	.LFE77
 3005 06d2 0400     		.2byte	0x4
 3006 06d4 F3       		.byte	0xf3
 3007 06d5 01       		.uleb128 0x1
 3008 06d6 51       		.byte	0x51
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 72


 3009 06d7 9F       		.byte	0x9f
 3010 06d8 00000000 		.4byte	0
 3011 06dc 00000000 		.4byte	0
 3012              		.section	.debug_aranges,"",%progbits
 3013 0000 64000000 		.4byte	0x64
 3014 0004 0200     		.2byte	0x2
 3015 0006 00000000 		.4byte	.Ldebug_info0
 3016 000a 04       		.byte	0x4
 3017 000b 00       		.byte	0
 3018 000c 0000     		.2byte	0
 3019 000e 0000     		.2byte	0
 3020 0010 00000000 		.4byte	.LFB78
 3021 0014 1C000000 		.4byte	.LFE78-.LFB78
 3022 0018 00000000 		.4byte	.LFB69
 3023 001c 1A000000 		.4byte	.LFE69-.LFB69
 3024 0020 00000000 		.4byte	.LFB71
 3025 0024 B0000000 		.4byte	.LFE71-.LFB71
 3026 0028 00000000 		.4byte	.LFB72
 3027 002c 1A000000 		.4byte	.LFE72-.LFB72
 3028 0030 00000000 		.4byte	.LFB73
 3029 0034 1C000000 		.4byte	.LFE73-.LFB73
 3030 0038 00000000 		.4byte	.LFB74
 3031 003c 6E000000 		.4byte	.LFE74-.LFB74
 3032 0040 00000000 		.4byte	.LFB70
 3033 0044 90000000 		.4byte	.LFE70-.LFB70
 3034 0048 00000000 		.4byte	.LFB75
 3035 004c 26000000 		.4byte	.LFE75-.LFB75
 3036 0050 00000000 		.4byte	.LFB76
 3037 0054 08000000 		.4byte	.LFE76-.LFB76
 3038 0058 00000000 		.4byte	.LFB77
 3039 005c 08000000 		.4byte	.LFE77-.LFB77
 3040 0060 00000000 		.4byte	0
 3041 0064 00000000 		.4byte	0
 3042              		.section	.debug_ranges,"",%progbits
 3043              	.Ldebug_ranges0:
 3044 0000 12000000 		.4byte	.LBB6
 3045 0004 38000000 		.4byte	.LBE6
 3046 0008 3C000000 		.4byte	.LBB7
 3047 000c 5A000000 		.4byte	.LBE7
 3048 0010 00000000 		.4byte	0
 3049 0014 00000000 		.4byte	0
 3050 0018 00000000 		.4byte	.LFB78
 3051 001c 1C000000 		.4byte	.LFE78
 3052 0020 00000000 		.4byte	.LFB69
 3053 0024 1A000000 		.4byte	.LFE69
 3054 0028 00000000 		.4byte	.LFB71
 3055 002c B0000000 		.4byte	.LFE71
 3056 0030 00000000 		.4byte	.LFB72
 3057 0034 1A000000 		.4byte	.LFE72
 3058 0038 00000000 		.4byte	.LFB73
 3059 003c 1C000000 		.4byte	.LFE73
 3060 0040 00000000 		.4byte	.LFB74
 3061 0044 6E000000 		.4byte	.LFE74
 3062 0048 00000000 		.4byte	.LFB70
 3063 004c 90000000 		.4byte	.LFE70
 3064 0050 00000000 		.4byte	.LFB75
 3065 0054 26000000 		.4byte	.LFE75
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 73


 3066 0058 00000000 		.4byte	.LFB76
 3067 005c 08000000 		.4byte	.LFE76
 3068 0060 00000000 		.4byte	.LFB77
 3069 0064 08000000 		.4byte	.LFE77
 3070 0068 00000000 		.4byte	0
 3071 006c 00000000 		.4byte	0
 3072              		.section	.debug_line,"",%progbits
 3073              	.Ldebug_line0:
 3074 0000 35030000 		.section	.debug_str,"MS",%progbits,1
 3074      0200CB01 
 3074      00000201 
 3074      FB0E0D00 
 3074      01010101 
 3075              	.LASF85:
 3076 0000 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 3076      6B52656D 
 3076      6F766546 
 3076      726F6D55 
 3076      6E6F7264 
 3077              	.LASF48:
 3078 0022 78457665 		.ascii	"xEventGroupCreate\000"
 3078      6E744772 
 3078      6F757043 
 3078      72656174 
 3078      6500
 3079              	.LASF42:
 3080 0034 756C4E65 		.ascii	"ulNewBASEPRI\000"
 3080      77424153 
 3080      45505249 
 3080      00
 3081              	.LASF79:
 3082 0041 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 3082      6B506C61 
 3082      63654F6E 
 3082      556E6F72 
 3082      64657265 
 3083              	.LASF45:
 3084 0060 78576169 		.ascii	"xWaitForAllBits\000"
 3084      74466F72 
 3084      416C6C42 
 3084      69747300 
 3085              	.LASF64:
 3086 0070 70784C69 		.ascii	"pxListEnd\000"
 3086      7374456E 
 3086      6400
 3087              	.LASF78:
 3088 007a 764C6973 		.ascii	"vListInitialise\000"
 3088      74496E69 
 3088      7469616C 
 3088      69736500 
 3089              	.LASF5:
 3090 008a 73686F72 		.ascii	"short int\000"
 3090      7420696E 
 3090      7400
 3091              	.LASF33:
 3092 0094 784C6973 		.ascii	"xListEnd\000"
 3092      74456E64 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 74


 3092      00
 3093              	.LASF23:
 3094 009d 70785072 		.ascii	"pxPrevious\000"
 3094      6576696F 
 3094      757300
 3095              	.LASF51:
 3096 00a8 78436C65 		.ascii	"xClearOnExit\000"
 3096      61724F6E 
 3096      45786974 
 3096      00
 3097              	.LASF9:
 3098 00b5 5F5F7569 		.ascii	"__uint32_t\000"
 3098      6E743332 
 3098      5F7400
 3099              	.LASF36:
 3100 00c0 4576656E 		.ascii	"EventBits_t\000"
 3100      74426974 
 3100      735F7400 
 3101              	.LASF46:
 3102 00cc 78576169 		.ascii	"xWaitConditionMet\000"
 3102      74436F6E 
 3102      64697469 
 3102      6F6E4D65 
 3102      7400
 3103              	.LASF24:
 3104 00de 70764F77 		.ascii	"pvOwner\000"
 3104      6E657200 
 3105              	.LASF52:
 3106 00e6 78546963 		.ascii	"xTicksToWait\000"
 3106      6B73546F 
 3106      57616974 
 3106      00
 3107              	.LASF35:
 3108 00f3 4576656E 		.ascii	"EventGroupHandle_t\000"
 3108      7447726F 
 3108      75704861 
 3108      6E646C65 
 3108      5F7400
 3109              	.LASF92:
 3110 0106 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 3110      72745261 
 3110      69736542 
 3110      41534550 
 3110      524900
 3111              	.LASF66:
 3112 0119 75784269 		.ascii	"uxBitsWaitedFor\000"
 3112      74735761 
 3112      69746564 
 3112      466F7200 
 3113              	.LASF71:
 3114 0129 76457665 		.ascii	"vEventGroupDelete\000"
 3114      6E744772 
 3114      6F757044 
 3114      656C6574 
 3114      6500
 3115              	.LASF88:
 3116 013b 2E2E5C46 		.ascii	"..\\FreeRTOS\\event_groups.c\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 75


 3116      72656552 
 3116      544F535C 
 3116      6576656E 
 3116      745F6772 
 3117              	.LASF16:
 3118 0156 666C6F61 		.ascii	"float\000"
 3118      7400
 3119              	.LASF44:
 3120 015c 75784269 		.ascii	"uxBitsToWaitFor\000"
 3120      7473546F 
 3120      57616974 
 3120      466F7200 
 3121              	.LASF34:
 3122 016c 4C697374 		.ascii	"List_t\000"
 3122      5F7400
 3123              	.LASF29:
 3124 0173 4D696E69 		.ascii	"MiniListItem_t\000"
 3124      4C697374 
 3124      4974656D 
 3124      5F7400
 3125              	.LASF1:
 3126 0182 6C6F6E67 		.ascii	"long long int\000"
 3126      206C6F6E 
 3126      6720696E 
 3126      7400
 3127              	.LASF75:
 3128 0190 76457665 		.ascii	"vEventGroupClearBitsCallback\000"
 3128      6E744772 
 3128      6F757043 
 3128      6C656172 
 3128      42697473 
 3129              	.LASF65:
 3130 01ad 70784C69 		.ascii	"pxList\000"
 3130      737400
 3131              	.LASF7:
 3132 01b4 6C6F6E67 		.ascii	"long int\000"
 3132      20696E74 
 3132      00
 3133              	.LASF30:
 3134 01bd 784C4953 		.ascii	"xLIST\000"
 3134      5400
 3135              	.LASF37:
 3136 01c3 78457665 		.ascii	"xEventGroupDefinition\000"
 3136      6E744772 
 3136      6F757044 
 3136      6566696E 
 3136      6974696F 
 3137              	.LASF63:
 3138 01d9 70784C69 		.ascii	"pxListItem\000"
 3138      73744974 
 3138      656D00
 3139              	.LASF21:
 3140 01e4 78497465 		.ascii	"xItemValue\000"
 3140      6D56616C 
 3140      756500
 3141              	.LASF74:
 3142 01ef 756C4269 		.ascii	"ulBitsToSet\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 76


 3142      7473546F 
 3142      53657400 
 3143              	.LASF39:
 3144 01fb 78546173 		.ascii	"xTasksWaitingForBits\000"
 3144      6B735761 
 3144      6974696E 
 3144      67466F72 
 3144      42697473 
 3145              	.LASF68:
 3146 0210 78457665 		.ascii	"xEventGroupSync\000"
 3146      6E744772 
 3146      6F757053 
 3146      796E6300 
 3147              	.LASF27:
 3148 0220 784C4953 		.ascii	"xLIST_ITEM\000"
 3148      545F4954 
 3148      454D00
 3149              	.LASF57:
 3150 022b 78457665 		.ascii	"xEventGroupClearBits\000"
 3150      6E744772 
 3150      6F757043 
 3150      6C656172 
 3150      42697473 
 3151              	.LASF20:
 3152 0240 5469636B 		.ascii	"TickType_t\000"
 3152      54797065 
 3152      5F7400
 3153              	.LASF2:
 3154 024b 6C6F6E67 		.ascii	"long double\000"
 3154      20646F75 
 3154      626C6500 
 3155              	.LASF4:
 3156 0257 756E7369 		.ascii	"unsigned char\000"
 3156      676E6564 
 3156      20636861 
 3156      7200
 3157              	.LASF41:
 3158 0265 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 3158      6967696E 
 3158      616C4241 
 3158      53455052 
 3158      4900
 3159              	.LASF3:
 3160 0277 7369676E 		.ascii	"signed char\000"
 3160      65642063 
 3160      68617200 
 3161              	.LASF14:
 3162 0283 696E7433 		.ascii	"int32_t\000"
 3162      325F7400 
 3163              	.LASF11:
 3164 028b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3164      206C6F6E 
 3164      6720756E 
 3164      7369676E 
 3164      65642069 
 3165              	.LASF15:
 3166 02a2 75696E74 		.ascii	"uint32_t\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 77


 3166      33325F74 
 3166      00
 3167              	.LASF73:
 3168 02ab 70764576 		.ascii	"pvEventGroup\000"
 3168      656E7447 
 3168      726F7570 
 3168      00
 3169              	.LASF0:
 3170 02b8 756E7369 		.ascii	"unsigned int\000"
 3170      676E6564 
 3170      20696E74 
 3170      00
 3171              	.LASF26:
 3172 02c5 4C697374 		.ascii	"ListItem_t\000"
 3172      4974656D 
 3172      5F7400
 3173              	.LASF18:
 3174 02d0 42617365 		.ascii	"BaseType_t\000"
 3174      54797065 
 3174      5F7400
 3175              	.LASF25:
 3176 02db 7076436F 		.ascii	"pvContainer\000"
 3176      6E746169 
 3176      6E657200 
 3177              	.LASF49:
 3178 02e7 78457665 		.ascii	"xEventGroupWaitBits\000"
 3178      6E744772 
 3178      6F757057 
 3178      61697442 
 3178      69747300 
 3179              	.LASF81:
 3180 02fb 78546173 		.ascii	"xTaskResumeAll\000"
 3180      6B526573 
 3180      756D6541 
 3180      6C6C00
 3181              	.LASF6:
 3182 030a 73686F72 		.ascii	"short unsigned int\000"
 3182      7420756E 
 3182      7369676E 
 3182      65642069 
 3182      6E7400
 3183              	.LASF83:
 3184 031d 76506F72 		.ascii	"vPortEnterCritical\000"
 3184      74456E74 
 3184      65724372 
 3184      69746963 
 3184      616C00
 3185              	.LASF93:
 3186 0330 70727654 		.ascii	"prvTestWaitCondition\000"
 3186      65737457 
 3186      61697443 
 3186      6F6E6469 
 3186      74696F6E 
 3187              	.LASF90:
 3188 0345 76506F72 		.ascii	"vPortSetBASEPRI\000"
 3188      74536574 
 3188      42415345 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 78


 3188      50524900 
 3189              	.LASF13:
 3190 0355 63686172 		.ascii	"char\000"
 3190      00
 3191              	.LASF94:
 3192 035a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3192      52784275 
 3192      66666572 
 3192      00
 3193              	.LASF89:
 3194 0367 433A5C55 		.ascii	"C:\\Users\\Tri94\\Documents\\PSoC Creator\\EE4450\\"
 3194      73657273 
 3194      5C547269 
 3194      39345C44 
 3194      6F63756D 
 3195 0394 45453434 		.ascii	"EE4450-Projects\\RTOS_UART_Project_V2.cydsn\000"
 3195      35302D50 
 3195      726F6A65 
 3195      6374735C 
 3195      52544F53 
 3196              	.LASF22:
 3197 03bf 70784E65 		.ascii	"pxNext\000"
 3197      787400
 3198              	.LASF69:
 3199 03c6 75784F72 		.ascii	"uxOriginalBitValue\000"
 3199      6967696E 
 3199      616C4269 
 3199      7456616C 
 3199      756500
 3200              	.LASF38:
 3201 03d9 75784576 		.ascii	"uxEventBits\000"
 3201      656E7442 
 3201      69747300 
 3202              	.LASF84:
 3203 03e5 76506F72 		.ascii	"vPortExitCritical\000"
 3203      74457869 
 3203      74437269 
 3203      74696361 
 3203      6C00
 3204              	.LASF54:
 3205 03f7 7578436F 		.ascii	"uxControlBits\000"
 3205      6E74726F 
 3205      6C426974 
 3205      7300
 3206              	.LASF59:
 3207 0405 78457665 		.ascii	"xEventGroupGetBitsFromISR\000"
 3207      6E744772 
 3207      6F757047 
 3207      65744269 
 3207      74734672 
 3208              	.LASF61:
 3209 041f 78457665 		.ascii	"xEventGroupSetBits\000"
 3209      6E744772 
 3209      6F757053 
 3209      65744269 
 3209      747300
 3210              	.LASF53:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 79


 3211 0432 75785265 		.ascii	"uxReturn\000"
 3211      7475726E 
 3211      00
 3212              	.LASF10:
 3213 043b 6C6F6E67 		.ascii	"long unsigned int\000"
 3213      20756E73 
 3213      69676E65 
 3213      6420696E 
 3213      7400
 3214              	.LASF19:
 3215 044d 55426173 		.ascii	"UBaseType_t\000"
 3215      65547970 
 3215      655F7400 
 3216              	.LASF91:
 3217 0459 756C4E65 		.ascii	"ulNewMaskValue\000"
 3217      774D6173 
 3217      6B56616C 
 3217      756500
 3218              	.LASF86:
 3219 0468 76506F72 		.ascii	"vPortFree\000"
 3219      74467265 
 3219      6500
 3220              	.LASF31:
 3221 0472 75784E75 		.ascii	"uxNumberOfItems\000"
 3221      6D626572 
 3221      4F664974 
 3221      656D7300 
 3222              	.LASF82:
 3223 0482 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 3223      736B5265 
 3223      73657445 
 3223      76656E74 
 3223      4974656D 
 3224              	.LASF8:
 3225 049c 5F5F696E 		.ascii	"__int32_t\000"
 3225      7433325F 
 3225      7400
 3226              	.LASF60:
 3227 04a6 75785361 		.ascii	"uxSavedInterruptStatus\000"
 3227      76656449 
 3227      6E746572 
 3227      72757074 
 3227      53746174 
 3228              	.LASF12:
 3229 04bd 73697A65 		.ascii	"sizetype\000"
 3229      74797065 
 3229      00
 3230              	.LASF67:
 3231 04c6 784D6174 		.ascii	"xMatchFound\000"
 3231      6368466F 
 3231      756E6400 
 3232              	.LASF50:
 3233 04d2 78457665 		.ascii	"xEventGroup\000"
 3233      6E744772 
 3233      6F757000 
 3234              	.LASF58:
 3235 04de 75784269 		.ascii	"uxBitsToClear\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 80


 3235      7473546F 
 3235      436C6561 
 3235      7200
 3236              	.LASF17:
 3237 04ec 646F7562 		.ascii	"double\000"
 3237      6C6500
 3238              	.LASF47:
 3239 04f3 70784576 		.ascii	"pxEventBits\000"
 3239      656E7442 
 3239      69747300 
 3240              	.LASF32:
 3241 04ff 7078496E 		.ascii	"pxIndex\000"
 3241      64657800 
 3242              	.LASF56:
 3243 0507 7854696D 		.ascii	"xTimeoutOccurred\000"
 3243      656F7574 
 3243      4F636375 
 3243      72726564 
 3243      00
 3244              	.LASF87:
 3245 0518 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3245      43313120 
 3245      352E342E 
 3245      31203230 
 3245      31363036 
 3246 054b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3246      20726576 
 3246      6973696F 
 3246      6E203233 
 3246      37373135 
 3247 057e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3247      66756E63 
 3247      74696F6E 
 3247      2D736563 
 3247      74696F6E 
 3248              	.LASF72:
 3249 05a6 76457665 		.ascii	"vEventGroupSetBitsCallback\000"
 3249      6E744772 
 3249      6F757053 
 3249      65744269 
 3249      74734361 
 3250              	.LASF28:
 3251 05c1 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 3251      495F4C49 
 3251      53545F49 
 3251      54454D00 
 3252              	.LASF43:
 3253 05d1 75784375 		.ascii	"uxCurrentEventBits\000"
 3253      7272656E 
 3253      74457665 
 3253      6E744269 
 3253      747300
 3254              	.LASF77:
 3255 05e4 7076506F 		.ascii	"pvPortMalloc\000"
 3255      72744D61 
 3255      6C6C6F63 
 3255      00
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccjoABRh.s 			page 81


 3256              	.LASF70:
 3257 05f1 70785461 		.ascii	"pxTasksWaitingForBits\000"
 3257      736B7357 
 3257      61697469 
 3257      6E67466F 
 3257      72426974 
 3258              	.LASF80:
 3259 0607 76546173 		.ascii	"vTaskSuspendAll\000"
 3259      6B537573 
 3259      70656E64 
 3259      416C6C00 
 3260              	.LASF55:
 3261 0617 78416C72 		.ascii	"xAlreadyYielded\000"
 3261      65616479 
 3261      5969656C 
 3261      64656400 
 3262              	.LASF62:
 3263 0627 75784269 		.ascii	"uxBitsToSet\000"
 3263      7473546F 
 3263      53657400 
 3264              	.LASF76:
 3265 0633 756C4269 		.ascii	"ulBitsToClear\000"
 3265      7473546F 
 3265      436C6561 
 3265      7200
 3266              	.LASF40:
 3267 0641 4576656E 		.ascii	"EventGroup_t\000"
 3267      7447726F 
 3267      75705F74 
 3267      00
 3268              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
