ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvGetDisinheritPriorityAfterTimeout, %function
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB89:
  26              		.file 1 "..\\FreeRTOS\\queue.c"
   1:..\FreeRTOS/queue.c **** /*
   2:..\FreeRTOS/queue.c ****  * FreeRTOS Kernel V10.0.0
   3:..\FreeRTOS/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS/queue.c ****  *
   5:..\FreeRTOS/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS/queue.c ****  * subject to the following conditions:
  11:..\FreeRTOS/queue.c ****  *
  12:..\FreeRTOS/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS/queue.c ****  * copies or substantial portions of the Software. If you wish to use our Amazon
  14:..\FreeRTOS/queue.c ****  * FreeRTOS name, please do so in a fair use way that does not cause confusion.
  15:..\FreeRTOS/queue.c ****  *
  16:..\FreeRTOS/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:..\FreeRTOS/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:..\FreeRTOS/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:..\FreeRTOS/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:..\FreeRTOS/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:..\FreeRTOS/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:..\FreeRTOS/queue.c ****  *
  23:..\FreeRTOS/queue.c ****  * http://www.FreeRTOS.org
  24:..\FreeRTOS/queue.c ****  * http://aws.amazon.com/freertos
  25:..\FreeRTOS/queue.c ****  *
  26:..\FreeRTOS/queue.c ****  * 1 tab == 4 spaces!
  27:..\FreeRTOS/queue.c ****  */
  28:..\FreeRTOS/queue.c **** 
  29:..\FreeRTOS/queue.c **** #include <stdlib.h>
  30:..\FreeRTOS/queue.c **** #include <string.h>
  31:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 2


  32:..\FreeRTOS/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:..\FreeRTOS/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:..\FreeRTOS/queue.c **** task.h is included from an application file. */
  35:..\FreeRTOS/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:..\FreeRTOS/queue.c **** 
  37:..\FreeRTOS/queue.c **** #include "FreeRTOS.h"
  38:..\FreeRTOS/queue.c **** #include "task.h"
  39:..\FreeRTOS/queue.c **** #include "queue.h"
  40:..\FreeRTOS/queue.c **** 
  41:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  42:..\FreeRTOS/queue.c **** 	#include "croutine.h"
  43:..\FreeRTOS/queue.c **** #endif
  44:..\FreeRTOS/queue.c **** 
  45:..\FreeRTOS/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:..\FreeRTOS/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:..\FreeRTOS/queue.c **** header files above, but not in this file, in order to generate the correct
  48:..\FreeRTOS/queue.c **** privileged Vs unprivileged linkage and placement. */
  49:..\FreeRTOS/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:..\FreeRTOS/queue.c **** 
  51:..\FreeRTOS/queue.c **** 
  52:..\FreeRTOS/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  53:..\FreeRTOS/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  54:..\FreeRTOS/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  55:..\FreeRTOS/queue.c **** 
  56:..\FreeRTOS/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  57:..\FreeRTOS/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  58:..\FreeRTOS/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  59:..\FreeRTOS/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  60:..\FreeRTOS/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  61:..\FreeRTOS/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  62:..\FreeRTOS/queue.c **** the code is maintained despite this dual use of two structure members.  An
  63:..\FreeRTOS/queue.c **** alternative implementation would be to use a union, but use of a union is
  64:..\FreeRTOS/queue.c **** against the coding standard (although an exception to the standard has been
  65:..\FreeRTOS/queue.c **** permitted where the dual use also significantly changes the type of the
  66:..\FreeRTOS/queue.c **** structure member). */
  67:..\FreeRTOS/queue.c **** #define pxMutexHolder					pcTail
  68:..\FreeRTOS/queue.c **** #define uxQueueType						pcHead
  69:..\FreeRTOS/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  70:..\FreeRTOS/queue.c **** 
  71:..\FreeRTOS/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  72:..\FreeRTOS/queue.c **** zero. */
  73:..\FreeRTOS/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  74:..\FreeRTOS/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  75:..\FreeRTOS/queue.c **** 
  76:..\FreeRTOS/queue.c **** #if( configUSE_PREEMPTION == 0 )
  77:..\FreeRTOS/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  78:..\FreeRTOS/queue.c **** 	performed just because a higher priority task has been woken. */
  79:..\FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  80:..\FreeRTOS/queue.c **** #else
  81:..\FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  82:..\FreeRTOS/queue.c **** #endif
  83:..\FreeRTOS/queue.c **** 
  84:..\FreeRTOS/queue.c **** /*
  85:..\FreeRTOS/queue.c ****  * Definition of the queue used by the scheduler.
  86:..\FreeRTOS/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  87:..\FreeRTOS/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  88:..\FreeRTOS/queue.c ****  */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 3


  89:..\FreeRTOS/queue.c **** typedef struct QueueDefinition
  90:..\FreeRTOS/queue.c **** {
  91:..\FreeRTOS/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  92:..\FreeRTOS/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  93:..\FreeRTOS/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  94:..\FreeRTOS/queue.c **** 
  95:..\FreeRTOS/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  96:..\FreeRTOS/queue.c **** 	{
  97:..\FreeRTOS/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  98:..\FreeRTOS/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  99:..\FreeRTOS/queue.c **** 	} u;
 100:..\FreeRTOS/queue.c **** 
 101:..\FreeRTOS/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 102:..\FreeRTOS/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 103:..\FreeRTOS/queue.c **** 
 104:..\FreeRTOS/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 105:..\FreeRTOS/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 106:..\FreeRTOS/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 107:..\FreeRTOS/queue.c **** 
 108:..\FreeRTOS/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 109:..\FreeRTOS/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 110:..\FreeRTOS/queue.c **** 
 111:..\FreeRTOS/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 112:..\FreeRTOS/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 113:..\FreeRTOS/queue.c **** 	#endif
 114:..\FreeRTOS/queue.c **** 
 115:..\FreeRTOS/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 116:..\FreeRTOS/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 117:..\FreeRTOS/queue.c **** 	#endif
 118:..\FreeRTOS/queue.c **** 
 119:..\FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 120:..\FreeRTOS/queue.c **** 		UBaseType_t uxQueueNumber;
 121:..\FreeRTOS/queue.c **** 		uint8_t ucQueueType;
 122:..\FreeRTOS/queue.c **** 	#endif
 123:..\FreeRTOS/queue.c **** 
 124:..\FreeRTOS/queue.c **** } xQUEUE;
 125:..\FreeRTOS/queue.c **** 
 126:..\FreeRTOS/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 127:..\FreeRTOS/queue.c **** name below to enable the use of older kernel aware debuggers. */
 128:..\FreeRTOS/queue.c **** typedef xQUEUE Queue_t;
 129:..\FreeRTOS/queue.c **** 
 130:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 131:..\FreeRTOS/queue.c **** 
 132:..\FreeRTOS/queue.c **** /*
 133:..\FreeRTOS/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 134:..\FreeRTOS/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 135:..\FreeRTOS/queue.c ****  */
 136:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 137:..\FreeRTOS/queue.c **** 
 138:..\FreeRTOS/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 139:..\FreeRTOS/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 140:..\FreeRTOS/queue.c **** 	more user friendly. */
 141:..\FreeRTOS/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 142:..\FreeRTOS/queue.c **** 	{
 143:..\FreeRTOS/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 144:..\FreeRTOS/queue.c **** 		QueueHandle_t xHandle;
 145:..\FreeRTOS/queue.c **** 	} xQueueRegistryItem;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 4


 146:..\FreeRTOS/queue.c **** 
 147:..\FreeRTOS/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 148:..\FreeRTOS/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 149:..\FreeRTOS/queue.c **** 	debuggers. */
 150:..\FreeRTOS/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 151:..\FreeRTOS/queue.c **** 
 152:..\FreeRTOS/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 153:..\FreeRTOS/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 154:..\FreeRTOS/queue.c **** 	array position being vacant. */
 155:..\FreeRTOS/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 156:..\FreeRTOS/queue.c **** 
 157:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 158:..\FreeRTOS/queue.c **** 
 159:..\FreeRTOS/queue.c **** /*
 160:..\FreeRTOS/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 161:..\FreeRTOS/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 162:..\FreeRTOS/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 163:..\FreeRTOS/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 164:..\FreeRTOS/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 165:..\FreeRTOS/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 166:..\FreeRTOS/queue.c ****  */
 167:..\FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 168:..\FreeRTOS/queue.c **** 
 169:..\FreeRTOS/queue.c **** /*
 170:..\FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 171:..\FreeRTOS/queue.c ****  *
 172:..\FreeRTOS/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 173:..\FreeRTOS/queue.c ****  */
 174:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 175:..\FreeRTOS/queue.c **** 
 176:..\FreeRTOS/queue.c **** /*
 177:..\FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 178:..\FreeRTOS/queue.c ****  *
 179:..\FreeRTOS/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 180:..\FreeRTOS/queue.c ****  */
 181:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:..\FreeRTOS/queue.c **** 
 183:..\FreeRTOS/queue.c **** /*
 184:..\FreeRTOS/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 185:..\FreeRTOS/queue.c ****  * back of the queue.
 186:..\FreeRTOS/queue.c ****  */
 187:..\FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 188:..\FreeRTOS/queue.c **** 
 189:..\FreeRTOS/queue.c **** /*
 190:..\FreeRTOS/queue.c ****  * Copies an item out of a queue.
 191:..\FreeRTOS/queue.c ****  */
 192:..\FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 193:..\FreeRTOS/queue.c **** 
 194:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 195:..\FreeRTOS/queue.c **** 	/*
 196:..\FreeRTOS/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 197:..\FreeRTOS/queue.c **** 	 * the queue set that the queue contains data.
 198:..\FreeRTOS/queue.c **** 	 */
 199:..\FreeRTOS/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 200:..\FreeRTOS/queue.c **** #endif
 201:..\FreeRTOS/queue.c **** 
 202:..\FreeRTOS/queue.c **** /*
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 5


 203:..\FreeRTOS/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 204:..\FreeRTOS/queue.c ****  * dynamically to fill in the structure's members.
 205:..\FreeRTOS/queue.c ****  */
 206:..\FreeRTOS/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 207:..\FreeRTOS/queue.c **** 
 208:..\FreeRTOS/queue.c **** /*
 209:..\FreeRTOS/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 210:..\FreeRTOS/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 211:..\FreeRTOS/queue.c ****  * as a mutex.
 212:..\FreeRTOS/queue.c ****  */
 213:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 214:..\FreeRTOS/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 215:..\FreeRTOS/queue.c **** #endif
 216:..\FreeRTOS/queue.c **** 
 217:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 218:..\FreeRTOS/queue.c **** 	/*
 219:..\FreeRTOS/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 220:..\FreeRTOS/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 221:..\FreeRTOS/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 222:..\FreeRTOS/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 223:..\FreeRTOS/queue.c **** 	 * that priority.
 224:..\FreeRTOS/queue.c **** 	 */
 225:..\FreeRTOS/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 226:..\FreeRTOS/queue.c **** #endif
 227:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 228:..\FreeRTOS/queue.c **** 
 229:..\FreeRTOS/queue.c **** /*
 230:..\FreeRTOS/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 231:..\FreeRTOS/queue.c ****  * accessing the queue event lists.
 232:..\FreeRTOS/queue.c ****  */
 233:..\FreeRTOS/queue.c **** #define prvLockQueue( pxQueue )								\
 234:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();									\
 235:..\FreeRTOS/queue.c **** 	{														\
 236:..\FreeRTOS/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 237:..\FreeRTOS/queue.c **** 		{													\
 238:..\FreeRTOS/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 239:..\FreeRTOS/queue.c **** 		}													\
 240:..\FreeRTOS/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 241:..\FreeRTOS/queue.c **** 		{													\
 242:..\FreeRTOS/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 243:..\FreeRTOS/queue.c **** 		}													\
 244:..\FreeRTOS/queue.c **** 	}														\
 245:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL()
 246:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 247:..\FreeRTOS/queue.c **** 
 248:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 249:..\FreeRTOS/queue.c **** {
 250:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 251:..\FreeRTOS/queue.c **** 
 252:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 253:..\FreeRTOS/queue.c **** 
 254:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 255:..\FreeRTOS/queue.c **** 	{
 256:..\FreeRTOS/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 257:..\FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 258:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 259:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 6


 260:..\FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 261:..\FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 262:..\FreeRTOS/queue.c **** 
 263:..\FreeRTOS/queue.c **** 		if( xNewQueue == pdFALSE )
 264:..\FreeRTOS/queue.c **** 		{
 265:..\FreeRTOS/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 266:..\FreeRTOS/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 267:..\FreeRTOS/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 268:..\FreeRTOS/queue.c **** 			the queue, then one should be unblocked as after this function exits
 269:..\FreeRTOS/queue.c **** 			it will be possible to write to it. */
 270:..\FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 271:..\FreeRTOS/queue.c **** 			{
 272:..\FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 273:..\FreeRTOS/queue.c **** 				{
 274:..\FreeRTOS/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 275:..\FreeRTOS/queue.c **** 				}
 276:..\FreeRTOS/queue.c **** 				else
 277:..\FreeRTOS/queue.c **** 				{
 278:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 279:..\FreeRTOS/queue.c **** 				}
 280:..\FreeRTOS/queue.c **** 			}
 281:..\FreeRTOS/queue.c **** 			else
 282:..\FreeRTOS/queue.c **** 			{
 283:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 284:..\FreeRTOS/queue.c **** 			}
 285:..\FreeRTOS/queue.c **** 		}
 286:..\FreeRTOS/queue.c **** 		else
 287:..\FreeRTOS/queue.c **** 		{
 288:..\FreeRTOS/queue.c **** 			/* Ensure the event queues start in the correct state. */
 289:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 290:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 291:..\FreeRTOS/queue.c **** 		}
 292:..\FreeRTOS/queue.c **** 	}
 293:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 294:..\FreeRTOS/queue.c **** 
 295:..\FreeRTOS/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 296:..\FreeRTOS/queue.c **** 	versions. */
 297:..\FreeRTOS/queue.c **** 	return pdPASS;
 298:..\FreeRTOS/queue.c **** }
 299:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 300:..\FreeRTOS/queue.c **** 
 301:..\FreeRTOS/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 302:..\FreeRTOS/queue.c **** 
 303:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 304:..\FreeRTOS/queue.c **** 	{
 305:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 306:..\FreeRTOS/queue.c **** 
 307:..\FreeRTOS/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 308:..\FreeRTOS/queue.c **** 
 309:..\FreeRTOS/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 310:..\FreeRTOS/queue.c **** 		supplied. */
 311:..\FreeRTOS/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 312:..\FreeRTOS/queue.c **** 
 313:..\FreeRTOS/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 314:..\FreeRTOS/queue.c **** 		should not be provided if the item size is 0. */
 315:..\FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 316:..\FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 7


 317:..\FreeRTOS/queue.c **** 
 318:..\FreeRTOS/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 319:..\FreeRTOS/queue.c **** 		{
 320:..\FreeRTOS/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 321:..\FreeRTOS/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 322:..\FreeRTOS/queue.c **** 			the real queue and semaphore structures. */
 323:..\FreeRTOS/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 324:..\FreeRTOS/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 325:..\FreeRTOS/queue.c **** 		}
 326:..\FreeRTOS/queue.c **** 		#endif /* configASSERT_DEFINED */
 327:..\FreeRTOS/queue.c **** 
 328:..\FreeRTOS/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 329:..\FreeRTOS/queue.c **** 		The address of a statically allocated storage area was also passed in
 330:..\FreeRTOS/queue.c **** 		but is already set. */
 331:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 332:..\FreeRTOS/queue.c **** 
 333:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 334:..\FreeRTOS/queue.c **** 		{
 335:..\FreeRTOS/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 336:..\FreeRTOS/queue.c **** 			{
 337:..\FreeRTOS/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 338:..\FreeRTOS/queue.c **** 				note this queue was allocated statically in case the queue is
 339:..\FreeRTOS/queue.c **** 				later deleted. */
 340:..\FreeRTOS/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 341:..\FreeRTOS/queue.c **** 			}
 342:..\FreeRTOS/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 343:..\FreeRTOS/queue.c **** 
 344:..\FreeRTOS/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 345:..\FreeRTOS/queue.c **** 		}
 346:..\FreeRTOS/queue.c **** 		else
 347:..\FreeRTOS/queue.c **** 		{
 348:..\FreeRTOS/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 349:..\FreeRTOS/queue.c **** 		}
 350:..\FreeRTOS/queue.c **** 
 351:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 352:..\FreeRTOS/queue.c **** 	}
 353:..\FreeRTOS/queue.c **** 
 354:..\FreeRTOS/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 355:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 356:..\FreeRTOS/queue.c **** 
 357:..\FreeRTOS/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 358:..\FreeRTOS/queue.c **** 
 359:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 360:..\FreeRTOS/queue.c **** 	{
 361:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 362:..\FreeRTOS/queue.c **** 	size_t xQueueSizeInBytes;
 363:..\FreeRTOS/queue.c **** 	uint8_t *pucQueueStorage;
 364:..\FreeRTOS/queue.c **** 
 365:..\FreeRTOS/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 366:..\FreeRTOS/queue.c **** 
 367:..\FreeRTOS/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 368:..\FreeRTOS/queue.c **** 		{
 369:..\FreeRTOS/queue.c **** 			/* There is not going to be a queue storage area. */
 370:..\FreeRTOS/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 371:..\FreeRTOS/queue.c **** 		}
 372:..\FreeRTOS/queue.c **** 		else
 373:..\FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 8


 374:..\FreeRTOS/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 375:..\FreeRTOS/queue.c **** 			can be in the queue at any time. */
 376:..\FreeRTOS/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 377:..\FreeRTOS/queue.c **** 		}
 378:..\FreeRTOS/queue.c **** 
 379:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 380:..\FreeRTOS/queue.c **** 
 381:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 382:..\FreeRTOS/queue.c **** 		{
 383:..\FreeRTOS/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 384:..\FreeRTOS/queue.c **** 			storage area. */
 385:..\FreeRTOS/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 386:..\FreeRTOS/queue.c **** 
 387:..\FreeRTOS/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 388:..\FreeRTOS/queue.c **** 			{
 389:..\FreeRTOS/queue.c **** 				/* Queues can be created either statically or dynamically, so
 390:..\FreeRTOS/queue.c **** 				note this task was created dynamically in case it is later
 391:..\FreeRTOS/queue.c **** 				deleted. */
 392:..\FreeRTOS/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 393:..\FreeRTOS/queue.c **** 			}
 394:..\FreeRTOS/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 395:..\FreeRTOS/queue.c **** 
 396:..\FreeRTOS/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 397:..\FreeRTOS/queue.c **** 		}
 398:..\FreeRTOS/queue.c **** 		else
 399:..\FreeRTOS/queue.c **** 		{
 400:..\FreeRTOS/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 401:..\FreeRTOS/queue.c **** 		}
 402:..\FreeRTOS/queue.c **** 
 403:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 404:..\FreeRTOS/queue.c **** 	}
 405:..\FreeRTOS/queue.c **** 
 406:..\FreeRTOS/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 407:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 408:..\FreeRTOS/queue.c **** 
 409:..\FreeRTOS/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 410:..\FreeRTOS/queue.c **** {
 411:..\FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 412:..\FreeRTOS/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 413:..\FreeRTOS/queue.c **** 	( void ) ucQueueType;
 414:..\FreeRTOS/queue.c **** 
 415:..\FreeRTOS/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 416:..\FreeRTOS/queue.c **** 	{
 417:..\FreeRTOS/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 418:..\FreeRTOS/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 419:..\FreeRTOS/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 420:..\FreeRTOS/queue.c **** 		value that is known to be within the memory map. */
 421:..\FreeRTOS/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 422:..\FreeRTOS/queue.c **** 	}
 423:..\FreeRTOS/queue.c **** 	else
 424:..\FreeRTOS/queue.c **** 	{
 425:..\FreeRTOS/queue.c **** 		/* Set the head to the start of the queue storage area. */
 426:..\FreeRTOS/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 427:..\FreeRTOS/queue.c **** 	}
 428:..\FreeRTOS/queue.c **** 
 429:..\FreeRTOS/queue.c **** 	/* Initialise the queue members as described where the queue type is
 430:..\FreeRTOS/queue.c **** 	defined. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 9


 431:..\FreeRTOS/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 432:..\FreeRTOS/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 433:..\FreeRTOS/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 434:..\FreeRTOS/queue.c **** 
 435:..\FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 436:..\FreeRTOS/queue.c **** 	{
 437:..\FreeRTOS/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 438:..\FreeRTOS/queue.c **** 	}
 439:..\FreeRTOS/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 440:..\FreeRTOS/queue.c **** 
 441:..\FreeRTOS/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 442:..\FreeRTOS/queue.c **** 	{
 443:..\FreeRTOS/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 444:..\FreeRTOS/queue.c **** 	}
 445:..\FreeRTOS/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 446:..\FreeRTOS/queue.c **** 
 447:..\FreeRTOS/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 448:..\FreeRTOS/queue.c **** }
 449:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 450:..\FreeRTOS/queue.c **** 
 451:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 452:..\FreeRTOS/queue.c **** 
 453:..\FreeRTOS/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 454:..\FreeRTOS/queue.c **** 	{
 455:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 456:..\FreeRTOS/queue.c **** 		{
 457:..\FreeRTOS/queue.c **** 			/* The queue create function will set all the queue structure members
 458:..\FreeRTOS/queue.c **** 			correctly for a generic queue, but this function is creating a
 459:..\FreeRTOS/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 460:..\FreeRTOS/queue.c **** 			in particular the information required for priority inheritance. */
 461:..\FreeRTOS/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 462:..\FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 463:..\FreeRTOS/queue.c **** 
 464:..\FreeRTOS/queue.c **** 			/* In case this is a recursive mutex. */
 465:..\FreeRTOS/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 466:..\FreeRTOS/queue.c **** 
 467:..\FreeRTOS/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 468:..\FreeRTOS/queue.c **** 
 469:..\FreeRTOS/queue.c **** 			/* Start with the semaphore in the expected state. */
 470:..\FreeRTOS/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 471:..\FreeRTOS/queue.c **** 		}
 472:..\FreeRTOS/queue.c **** 		else
 473:..\FreeRTOS/queue.c **** 		{
 474:..\FreeRTOS/queue.c **** 			traceCREATE_MUTEX_FAILED();
 475:..\FreeRTOS/queue.c **** 		}
 476:..\FreeRTOS/queue.c **** 	}
 477:..\FreeRTOS/queue.c **** 
 478:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 479:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 480:..\FreeRTOS/queue.c **** 
 481:..\FreeRTOS/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 482:..\FreeRTOS/queue.c **** 
 483:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 484:..\FreeRTOS/queue.c **** 	{
 485:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 486:..\FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 487:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 10


 488:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 489:..\FreeRTOS/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 490:..\FreeRTOS/queue.c **** 
 491:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 492:..\FreeRTOS/queue.c **** 	}
 493:..\FreeRTOS/queue.c **** 
 494:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 495:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 496:..\FreeRTOS/queue.c **** 
 497:..\FreeRTOS/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 498:..\FreeRTOS/queue.c **** 
 499:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 500:..\FreeRTOS/queue.c **** 	{
 501:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 502:..\FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 503:..\FreeRTOS/queue.c **** 
 504:..\FreeRTOS/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 505:..\FreeRTOS/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 506:..\FreeRTOS/queue.c **** 		( void ) ucQueueType;
 507:..\FreeRTOS/queue.c **** 
 508:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 509:..\FreeRTOS/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 510:..\FreeRTOS/queue.c **** 
 511:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 512:..\FreeRTOS/queue.c **** 	}
 513:..\FreeRTOS/queue.c **** 
 514:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 515:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 516:..\FreeRTOS/queue.c **** 
 517:..\FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 518:..\FreeRTOS/queue.c **** 
 519:..\FreeRTOS/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 520:..\FreeRTOS/queue.c **** 	{
 521:..\FreeRTOS/queue.c **** 	void *pxReturn;
 522:..\FreeRTOS/queue.c **** 
 523:..\FreeRTOS/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 524:..\FreeRTOS/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 525:..\FreeRTOS/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 526:..\FreeRTOS/queue.c **** 		identity of the mutex holder, as the holder may change between the
 527:..\FreeRTOS/queue.c **** 		following critical section exiting and the function returning. */
 528:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 529:..\FreeRTOS/queue.c **** 		{
 530:..\FreeRTOS/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 531:..\FreeRTOS/queue.c **** 			{
 532:..\FreeRTOS/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 533:..\FreeRTOS/queue.c **** 			}
 534:..\FreeRTOS/queue.c **** 			else
 535:..\FreeRTOS/queue.c **** 			{
 536:..\FreeRTOS/queue.c **** 				pxReturn = NULL;
 537:..\FreeRTOS/queue.c **** 			}
 538:..\FreeRTOS/queue.c **** 		}
 539:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 540:..\FreeRTOS/queue.c **** 
 541:..\FreeRTOS/queue.c **** 		return pxReturn;
 542:..\FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 543:..\FreeRTOS/queue.c **** 
 544:..\FreeRTOS/queue.c **** #endif
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 11


 545:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 546:..\FreeRTOS/queue.c **** 
 547:..\FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 548:..\FreeRTOS/queue.c **** 
 549:..\FreeRTOS/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 550:..\FreeRTOS/queue.c **** 	{
 551:..\FreeRTOS/queue.c **** 	void *pxReturn;
 552:..\FreeRTOS/queue.c **** 
 553:..\FreeRTOS/queue.c **** 		configASSERT( xSemaphore );
 554:..\FreeRTOS/queue.c **** 
 555:..\FreeRTOS/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 556:..\FreeRTOS/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 557:..\FreeRTOS/queue.c **** 		not required here. */
 558:..\FreeRTOS/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 559:..\FreeRTOS/queue.c **** 		{
 560:..\FreeRTOS/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 561:..\FreeRTOS/queue.c **** 		}
 562:..\FreeRTOS/queue.c **** 		else
 563:..\FreeRTOS/queue.c **** 		{
 564:..\FreeRTOS/queue.c **** 			pxReturn = NULL;
 565:..\FreeRTOS/queue.c **** 		}
 566:..\FreeRTOS/queue.c **** 
 567:..\FreeRTOS/queue.c **** 		return pxReturn;
 568:..\FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 569:..\FreeRTOS/queue.c **** 
 570:..\FreeRTOS/queue.c **** #endif
 571:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 572:..\FreeRTOS/queue.c **** 
 573:..\FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 574:..\FreeRTOS/queue.c **** 
 575:..\FreeRTOS/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 576:..\FreeRTOS/queue.c **** 	{
 577:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 578:..\FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 579:..\FreeRTOS/queue.c **** 
 580:..\FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 581:..\FreeRTOS/queue.c **** 
 582:..\FreeRTOS/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 583:..\FreeRTOS/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 584:..\FreeRTOS/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 585:..\FreeRTOS/queue.c **** 		this is the only condition we are interested in it does not matter if
 586:..\FreeRTOS/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 587:..\FreeRTOS/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 588:..\FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 589:..\FreeRTOS/queue.c **** 		{
 590:..\FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 591:..\FreeRTOS/queue.c **** 
 592:..\FreeRTOS/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 593:..\FreeRTOS/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 594:..\FreeRTOS/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 595:..\FreeRTOS/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 596:..\FreeRTOS/queue.c **** 			uxRecursiveCallCount member. */
 597:..\FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 598:..\FreeRTOS/queue.c **** 
 599:..\FreeRTOS/queue.c **** 			/* Has the recursive call count unwound to 0? */
 600:..\FreeRTOS/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 601:..\FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 12


 602:..\FreeRTOS/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 603:..\FreeRTOS/queue.c **** 				task that might be waiting to access the mutex. */
 604:..\FreeRTOS/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 605:..\FreeRTOS/queue.c **** 			}
 606:..\FreeRTOS/queue.c **** 			else
 607:..\FreeRTOS/queue.c **** 			{
 608:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 609:..\FreeRTOS/queue.c **** 			}
 610:..\FreeRTOS/queue.c **** 
 611:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 612:..\FreeRTOS/queue.c **** 		}
 613:..\FreeRTOS/queue.c **** 		else
 614:..\FreeRTOS/queue.c **** 		{
 615:..\FreeRTOS/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 616:..\FreeRTOS/queue.c **** 			holder. */
 617:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 618:..\FreeRTOS/queue.c **** 
 619:..\FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 620:..\FreeRTOS/queue.c **** 		}
 621:..\FreeRTOS/queue.c **** 
 622:..\FreeRTOS/queue.c **** 		return xReturn;
 623:..\FreeRTOS/queue.c **** 	}
 624:..\FreeRTOS/queue.c **** 
 625:..\FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 626:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 627:..\FreeRTOS/queue.c **** 
 628:..\FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 629:..\FreeRTOS/queue.c **** 
 630:..\FreeRTOS/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 631:..\FreeRTOS/queue.c **** 	{
 632:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 633:..\FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 634:..\FreeRTOS/queue.c **** 
 635:..\FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 636:..\FreeRTOS/queue.c **** 
 637:..\FreeRTOS/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 638:..\FreeRTOS/queue.c **** 		xQueueGiveMutexRecursive(). */
 639:..\FreeRTOS/queue.c **** 
 640:..\FreeRTOS/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 641:..\FreeRTOS/queue.c **** 
 642:..\FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 643:..\FreeRTOS/queue.c **** 		{
 644:..\FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 645:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 646:..\FreeRTOS/queue.c **** 		}
 647:..\FreeRTOS/queue.c **** 		else
 648:..\FreeRTOS/queue.c **** 		{
 649:..\FreeRTOS/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 650:..\FreeRTOS/queue.c **** 
 651:..\FreeRTOS/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 652:..\FreeRTOS/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 653:..\FreeRTOS/queue.c **** 			before reaching here. */
 654:..\FreeRTOS/queue.c **** 			if( xReturn != pdFAIL )
 655:..\FreeRTOS/queue.c **** 			{
 656:..\FreeRTOS/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 657:..\FreeRTOS/queue.c **** 			}
 658:..\FreeRTOS/queue.c **** 			else
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 13


 659:..\FreeRTOS/queue.c **** 			{
 660:..\FreeRTOS/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 661:..\FreeRTOS/queue.c **** 			}
 662:..\FreeRTOS/queue.c **** 		}
 663:..\FreeRTOS/queue.c **** 
 664:..\FreeRTOS/queue.c **** 		return xReturn;
 665:..\FreeRTOS/queue.c **** 	}
 666:..\FreeRTOS/queue.c **** 
 667:..\FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 668:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 669:..\FreeRTOS/queue.c **** 
 670:..\FreeRTOS/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 671:..\FreeRTOS/queue.c **** 
 672:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 673:..\FreeRTOS/queue.c **** 	{
 674:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 675:..\FreeRTOS/queue.c **** 
 676:..\FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 677:..\FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 678:..\FreeRTOS/queue.c **** 
 679:..\FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 680:..\FreeRTOS/queue.c **** 
 681:..\FreeRTOS/queue.c **** 		if( xHandle != NULL )
 682:..\FreeRTOS/queue.c **** 		{
 683:..\FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 684:..\FreeRTOS/queue.c **** 
 685:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 686:..\FreeRTOS/queue.c **** 		}
 687:..\FreeRTOS/queue.c **** 		else
 688:..\FreeRTOS/queue.c **** 		{
 689:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 690:..\FreeRTOS/queue.c **** 		}
 691:..\FreeRTOS/queue.c **** 
 692:..\FreeRTOS/queue.c **** 		return xHandle;
 693:..\FreeRTOS/queue.c **** 	}
 694:..\FreeRTOS/queue.c **** 
 695:..\FreeRTOS/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 696:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 697:..\FreeRTOS/queue.c **** 
 698:..\FreeRTOS/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 699:..\FreeRTOS/queue.c **** 
 700:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 701:..\FreeRTOS/queue.c **** 	{
 702:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 703:..\FreeRTOS/queue.c **** 
 704:..\FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 705:..\FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 706:..\FreeRTOS/queue.c **** 
 707:..\FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 708:..\FreeRTOS/queue.c **** 
 709:..\FreeRTOS/queue.c **** 		if( xHandle != NULL )
 710:..\FreeRTOS/queue.c **** 		{
 711:..\FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 712:..\FreeRTOS/queue.c **** 
 713:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 714:..\FreeRTOS/queue.c **** 		}
 715:..\FreeRTOS/queue.c **** 		else
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 14


 716:..\FreeRTOS/queue.c **** 		{
 717:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 718:..\FreeRTOS/queue.c **** 		}
 719:..\FreeRTOS/queue.c **** 
 720:..\FreeRTOS/queue.c **** 		return xHandle;
 721:..\FreeRTOS/queue.c **** 	}
 722:..\FreeRTOS/queue.c **** 
 723:..\FreeRTOS/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 724:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 725:..\FreeRTOS/queue.c **** 
 726:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 727:..\FreeRTOS/queue.c **** {
 728:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 729:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 730:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 731:..\FreeRTOS/queue.c **** 
 732:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 733:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 734:..\FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 735:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 736:..\FreeRTOS/queue.c **** 	{
 737:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 738:..\FreeRTOS/queue.c **** 	}
 739:..\FreeRTOS/queue.c **** 	#endif
 740:..\FreeRTOS/queue.c **** 
 741:..\FreeRTOS/queue.c **** 
 742:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 743:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
 744:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
 745:..\FreeRTOS/queue.c **** 	for( ;; )
 746:..\FreeRTOS/queue.c **** 	{
 747:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 748:..\FreeRTOS/queue.c **** 		{
 749:..\FreeRTOS/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 750:..\FreeRTOS/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 751:..\FreeRTOS/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 752:..\FreeRTOS/queue.c **** 			queue is full. */
 753:..\FreeRTOS/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 754:..\FreeRTOS/queue.c **** 			{
 755:..\FreeRTOS/queue.c **** 				traceQUEUE_SEND( pxQueue );
 756:..\FreeRTOS/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 757:..\FreeRTOS/queue.c **** 
 758:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 759:..\FreeRTOS/queue.c **** 				{
 760:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 761:..\FreeRTOS/queue.c **** 					{
 762:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 763:..\FreeRTOS/queue.c **** 						{
 764:..\FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 765:..\FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 766:..\FreeRTOS/queue.c **** 							unblock. A context switch is required. */
 767:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 768:..\FreeRTOS/queue.c **** 						}
 769:..\FreeRTOS/queue.c **** 						else
 770:..\FreeRTOS/queue.c **** 						{
 771:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 772:..\FreeRTOS/queue.c **** 						}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 15


 773:..\FreeRTOS/queue.c **** 					}
 774:..\FreeRTOS/queue.c **** 					else
 775:..\FreeRTOS/queue.c **** 					{
 776:..\FreeRTOS/queue.c **** 						/* If there was a task waiting for data to arrive on the
 777:..\FreeRTOS/queue.c **** 						queue then unblock it now. */
 778:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 779:..\FreeRTOS/queue.c **** 						{
 780:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 781:..\FreeRTOS/queue.c **** 							{
 782:..\FreeRTOS/queue.c **** 								/* The unblocked task has a priority higher than
 783:..\FreeRTOS/queue.c **** 								our own so yield immediately.  Yes it is ok to
 784:..\FreeRTOS/queue.c **** 								do this from within the critical section - the
 785:..\FreeRTOS/queue.c **** 								kernel takes care of that. */
 786:..\FreeRTOS/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 787:..\FreeRTOS/queue.c **** 							}
 788:..\FreeRTOS/queue.c **** 							else
 789:..\FreeRTOS/queue.c **** 							{
 790:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 791:..\FreeRTOS/queue.c **** 							}
 792:..\FreeRTOS/queue.c **** 						}
 793:..\FreeRTOS/queue.c **** 						else if( xYieldRequired != pdFALSE )
 794:..\FreeRTOS/queue.c **** 						{
 795:..\FreeRTOS/queue.c **** 							/* This path is a special case that will only get
 796:..\FreeRTOS/queue.c **** 							executed if the task was holding multiple mutexes
 797:..\FreeRTOS/queue.c **** 							and the mutexes were given back in an order that is
 798:..\FreeRTOS/queue.c **** 							different to that in which they were taken. */
 799:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 800:..\FreeRTOS/queue.c **** 						}
 801:..\FreeRTOS/queue.c **** 						else
 802:..\FreeRTOS/queue.c **** 						{
 803:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 804:..\FreeRTOS/queue.c **** 						}
 805:..\FreeRTOS/queue.c **** 					}
 806:..\FreeRTOS/queue.c **** 				}
 807:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 808:..\FreeRTOS/queue.c **** 				{
 809:..\FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 810:..\FreeRTOS/queue.c **** 					queue then unblock it now. */
 811:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 812:..\FreeRTOS/queue.c **** 					{
 813:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 814:..\FreeRTOS/queue.c **** 						{
 815:..\FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 816:..\FreeRTOS/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 817:..\FreeRTOS/queue.c **** 							this from within the critical section - the kernel
 818:..\FreeRTOS/queue.c **** 							takes care of that. */
 819:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 820:..\FreeRTOS/queue.c **** 						}
 821:..\FreeRTOS/queue.c **** 						else
 822:..\FreeRTOS/queue.c **** 						{
 823:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 824:..\FreeRTOS/queue.c **** 						}
 825:..\FreeRTOS/queue.c **** 					}
 826:..\FreeRTOS/queue.c **** 					else if( xYieldRequired != pdFALSE )
 827:..\FreeRTOS/queue.c **** 					{
 828:..\FreeRTOS/queue.c **** 						/* This path is a special case that will only get
 829:..\FreeRTOS/queue.c **** 						executed if the task was holding multiple mutexes and
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 16


 830:..\FreeRTOS/queue.c **** 						the mutexes were given back in an order that is
 831:..\FreeRTOS/queue.c **** 						different to that in which they were taken. */
 832:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 833:..\FreeRTOS/queue.c **** 					}
 834:..\FreeRTOS/queue.c **** 					else
 835:..\FreeRTOS/queue.c **** 					{
 836:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 837:..\FreeRTOS/queue.c **** 					}
 838:..\FreeRTOS/queue.c **** 				}
 839:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 840:..\FreeRTOS/queue.c **** 
 841:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 842:..\FreeRTOS/queue.c **** 				return pdPASS;
 843:..\FreeRTOS/queue.c **** 			}
 844:..\FreeRTOS/queue.c **** 			else
 845:..\FreeRTOS/queue.c **** 			{
 846:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 847:..\FreeRTOS/queue.c **** 				{
 848:..\FreeRTOS/queue.c **** 					/* The queue was full and no block time is specified (or
 849:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
 850:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 851:..\FreeRTOS/queue.c **** 
 852:..\FreeRTOS/queue.c **** 					/* Return to the original privilege level before exiting
 853:..\FreeRTOS/queue.c **** 					the function. */
 854:..\FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 855:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 856:..\FreeRTOS/queue.c **** 				}
 857:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 858:..\FreeRTOS/queue.c **** 				{
 859:..\FreeRTOS/queue.c **** 					/* The queue was full and a block time was specified so
 860:..\FreeRTOS/queue.c **** 					configure the timeout structure. */
 861:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 862:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 863:..\FreeRTOS/queue.c **** 				}
 864:..\FreeRTOS/queue.c **** 				else
 865:..\FreeRTOS/queue.c **** 				{
 866:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
 867:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 868:..\FreeRTOS/queue.c **** 				}
 869:..\FreeRTOS/queue.c **** 			}
 870:..\FreeRTOS/queue.c **** 		}
 871:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 872:..\FreeRTOS/queue.c **** 
 873:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 874:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
 875:..\FreeRTOS/queue.c **** 
 876:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
 877:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 878:..\FreeRTOS/queue.c **** 
 879:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 880:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 881:..\FreeRTOS/queue.c **** 		{
 882:..\FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 883:..\FreeRTOS/queue.c **** 			{
 884:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 885:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 886:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 17


 887:..\FreeRTOS/queue.c **** 				/* Unlocking the queue means queue events can effect the
 888:..\FreeRTOS/queue.c **** 				event list.  It is possible that interrupts occurring now
 889:..\FreeRTOS/queue.c **** 				remove this task from the event list again - but as the
 890:..\FreeRTOS/queue.c **** 				scheduler is suspended the task will go onto the pending
 891:..\FreeRTOS/queue.c **** 				ready last instead of the actual ready list. */
 892:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 893:..\FreeRTOS/queue.c **** 
 894:..\FreeRTOS/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 895:..\FreeRTOS/queue.c **** 				ready list into the ready list - so it is feasible that this
 896:..\FreeRTOS/queue.c **** 				task is already in a ready list before it yields - in which
 897:..\FreeRTOS/queue.c **** 				case the yield will not cause a context switch unless there
 898:..\FreeRTOS/queue.c **** 				is also a higher priority task in the pending ready list. */
 899:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 900:..\FreeRTOS/queue.c **** 				{
 901:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 902:..\FreeRTOS/queue.c **** 				}
 903:..\FreeRTOS/queue.c **** 			}
 904:..\FreeRTOS/queue.c **** 			else
 905:..\FreeRTOS/queue.c **** 			{
 906:..\FreeRTOS/queue.c **** 				/* Try again. */
 907:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 908:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 909:..\FreeRTOS/queue.c **** 			}
 910:..\FreeRTOS/queue.c **** 		}
 911:..\FreeRTOS/queue.c **** 		else
 912:..\FreeRTOS/queue.c **** 		{
 913:..\FreeRTOS/queue.c **** 			/* The timeout has expired. */
 914:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 915:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 916:..\FreeRTOS/queue.c **** 
 917:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 918:..\FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 919:..\FreeRTOS/queue.c **** 		}
 920:..\FreeRTOS/queue.c **** 	}
 921:..\FreeRTOS/queue.c **** }
 922:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 923:..\FreeRTOS/queue.c **** 
 924:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 925:..\FreeRTOS/queue.c **** {
 926:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 927:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
 928:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 929:..\FreeRTOS/queue.c **** 
 930:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 931:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 932:..\FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 933:..\FreeRTOS/queue.c **** 
 934:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 935:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 936:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 937:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 938:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 939:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 940:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 941:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
 942:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 943:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 18


 944:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 945:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 946:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 947:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 948:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 949:..\FreeRTOS/queue.c **** 
 950:..\FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 951:..\FreeRTOS/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 952:..\FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 953:..\FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 954:..\FreeRTOS/queue.c **** 	post). */
 955:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 956:..\FreeRTOS/queue.c **** 	{
 957:..\FreeRTOS/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 958:..\FreeRTOS/queue.c **** 		{
 959:..\FreeRTOS/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 960:..\FreeRTOS/queue.c **** 
 961:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 962:..\FreeRTOS/queue.c **** 
 963:..\FreeRTOS/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 964:..\FreeRTOS/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 965:..\FreeRTOS/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 966:..\FreeRTOS/queue.c **** 			called here even though the disinherit function does not check if
 967:..\FreeRTOS/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 968:..\FreeRTOS/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 969:..\FreeRTOS/queue.c **** 
 970:..\FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 971:..\FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
 972:..\FreeRTOS/queue.c **** 			if( cTxLock == queueUNLOCKED )
 973:..\FreeRTOS/queue.c **** 			{
 974:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 975:..\FreeRTOS/queue.c **** 				{
 976:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 977:..\FreeRTOS/queue.c **** 					{
 978:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 979:..\FreeRTOS/queue.c **** 						{
 980:..\FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 981:..\FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 982:..\FreeRTOS/queue.c **** 							unblock.  A context switch is required. */
 983:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 984:..\FreeRTOS/queue.c **** 							{
 985:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 986:..\FreeRTOS/queue.c **** 							}
 987:..\FreeRTOS/queue.c **** 							else
 988:..\FreeRTOS/queue.c **** 							{
 989:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 990:..\FreeRTOS/queue.c **** 							}
 991:..\FreeRTOS/queue.c **** 						}
 992:..\FreeRTOS/queue.c **** 						else
 993:..\FreeRTOS/queue.c **** 						{
 994:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 995:..\FreeRTOS/queue.c **** 						}
 996:..\FreeRTOS/queue.c **** 					}
 997:..\FreeRTOS/queue.c **** 					else
 998:..\FreeRTOS/queue.c **** 					{
 999:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1000:..\FreeRTOS/queue.c **** 						{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 19


1001:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1002:..\FreeRTOS/queue.c **** 							{
1003:..\FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1004:..\FreeRTOS/queue.c **** 								record that a context switch is required. */
1005:..\FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1006:..\FreeRTOS/queue.c **** 								{
1007:..\FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1008:..\FreeRTOS/queue.c **** 								}
1009:..\FreeRTOS/queue.c **** 								else
1010:..\FreeRTOS/queue.c **** 								{
1011:..\FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1012:..\FreeRTOS/queue.c **** 								}
1013:..\FreeRTOS/queue.c **** 							}
1014:..\FreeRTOS/queue.c **** 							else
1015:..\FreeRTOS/queue.c **** 							{
1016:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1017:..\FreeRTOS/queue.c **** 							}
1018:..\FreeRTOS/queue.c **** 						}
1019:..\FreeRTOS/queue.c **** 						else
1020:..\FreeRTOS/queue.c **** 						{
1021:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1022:..\FreeRTOS/queue.c **** 						}
1023:..\FreeRTOS/queue.c **** 					}
1024:..\FreeRTOS/queue.c **** 				}
1025:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1026:..\FreeRTOS/queue.c **** 				{
1027:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1028:..\FreeRTOS/queue.c **** 					{
1029:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1030:..\FreeRTOS/queue.c **** 						{
1031:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1032:..\FreeRTOS/queue.c **** 							context	switch is required. */
1033:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1034:..\FreeRTOS/queue.c **** 							{
1035:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1036:..\FreeRTOS/queue.c **** 							}
1037:..\FreeRTOS/queue.c **** 							else
1038:..\FreeRTOS/queue.c **** 							{
1039:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1040:..\FreeRTOS/queue.c **** 							}
1041:..\FreeRTOS/queue.c **** 						}
1042:..\FreeRTOS/queue.c **** 						else
1043:..\FreeRTOS/queue.c **** 						{
1044:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1045:..\FreeRTOS/queue.c **** 						}
1046:..\FreeRTOS/queue.c **** 					}
1047:..\FreeRTOS/queue.c **** 					else
1048:..\FreeRTOS/queue.c **** 					{
1049:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1050:..\FreeRTOS/queue.c **** 					}
1051:..\FreeRTOS/queue.c **** 				}
1052:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1053:..\FreeRTOS/queue.c **** 			}
1054:..\FreeRTOS/queue.c **** 			else
1055:..\FreeRTOS/queue.c **** 			{
1056:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1057:..\FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 20


1058:..\FreeRTOS/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1059:..\FreeRTOS/queue.c **** 			}
1060:..\FreeRTOS/queue.c **** 
1061:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1062:..\FreeRTOS/queue.c **** 		}
1063:..\FreeRTOS/queue.c **** 		else
1064:..\FreeRTOS/queue.c **** 		{
1065:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1066:..\FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1067:..\FreeRTOS/queue.c **** 		}
1068:..\FreeRTOS/queue.c **** 	}
1069:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1070:..\FreeRTOS/queue.c **** 
1071:..\FreeRTOS/queue.c **** 	return xReturn;
1072:..\FreeRTOS/queue.c **** }
1073:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1074:..\FreeRTOS/queue.c **** 
1075:..\FreeRTOS/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1076:..\FreeRTOS/queue.c **** {
1077:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1078:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1079:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1080:..\FreeRTOS/queue.c **** 
1081:..\FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1082:..\FreeRTOS/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1083:..\FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1084:..\FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1085:..\FreeRTOS/queue.c **** 	post). */
1086:..\FreeRTOS/queue.c **** 
1087:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1088:..\FreeRTOS/queue.c **** 
1089:..\FreeRTOS/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1090:..\FreeRTOS/queue.c **** 	if the item size is not 0. */
1091:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1092:..\FreeRTOS/queue.c **** 
1093:..\FreeRTOS/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1094:..\FreeRTOS/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1095:..\FreeRTOS/queue.c **** 	interrupts, only tasks. */
1096:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1097:..\FreeRTOS/queue.c **** 
1098:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1099:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1100:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1101:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1102:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1103:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1104:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1105:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1106:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1107:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1108:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1109:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1110:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1111:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1112:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1113:..\FreeRTOS/queue.c **** 
1114:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 21


1115:..\FreeRTOS/queue.c **** 	{
1116:..\FreeRTOS/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1117:..\FreeRTOS/queue.c **** 
1118:..\FreeRTOS/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1119:..\FreeRTOS/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1120:..\FreeRTOS/queue.c **** 		space'. */
1121:..\FreeRTOS/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1122:..\FreeRTOS/queue.c **** 		{
1123:..\FreeRTOS/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1124:..\FreeRTOS/queue.c **** 
1125:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1126:..\FreeRTOS/queue.c **** 
1127:..\FreeRTOS/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1128:..\FreeRTOS/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1129:..\FreeRTOS/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1130:..\FreeRTOS/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1131:..\FreeRTOS/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1132:..\FreeRTOS/queue.c **** 			messages (semaphores) available. */
1133:..\FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1134:..\FreeRTOS/queue.c **** 
1135:..\FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1136:..\FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1137:..\FreeRTOS/queue.c **** 			if( cTxLock == queueUNLOCKED )
1138:..\FreeRTOS/queue.c **** 			{
1139:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1140:..\FreeRTOS/queue.c **** 				{
1141:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1142:..\FreeRTOS/queue.c **** 					{
1143:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1144:..\FreeRTOS/queue.c **** 						{
1145:..\FreeRTOS/queue.c **** 							/* The semaphore is a member of a queue set, and
1146:..\FreeRTOS/queue.c **** 							posting	to the queue set caused a higher priority
1147:..\FreeRTOS/queue.c **** 							task to	unblock.  A context switch is required. */
1148:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1149:..\FreeRTOS/queue.c **** 							{
1150:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1151:..\FreeRTOS/queue.c **** 							}
1152:..\FreeRTOS/queue.c **** 							else
1153:..\FreeRTOS/queue.c **** 							{
1154:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1155:..\FreeRTOS/queue.c **** 							}
1156:..\FreeRTOS/queue.c **** 						}
1157:..\FreeRTOS/queue.c **** 						else
1158:..\FreeRTOS/queue.c **** 						{
1159:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1160:..\FreeRTOS/queue.c **** 						}
1161:..\FreeRTOS/queue.c **** 					}
1162:..\FreeRTOS/queue.c **** 					else
1163:..\FreeRTOS/queue.c **** 					{
1164:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1165:..\FreeRTOS/queue.c **** 						{
1166:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1167:..\FreeRTOS/queue.c **** 							{
1168:..\FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1169:..\FreeRTOS/queue.c **** 								record that a context switch is required. */
1170:..\FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1171:..\FreeRTOS/queue.c **** 								{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 22


1172:..\FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1173:..\FreeRTOS/queue.c **** 								}
1174:..\FreeRTOS/queue.c **** 								else
1175:..\FreeRTOS/queue.c **** 								{
1176:..\FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1177:..\FreeRTOS/queue.c **** 								}
1178:..\FreeRTOS/queue.c **** 							}
1179:..\FreeRTOS/queue.c **** 							else
1180:..\FreeRTOS/queue.c **** 							{
1181:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1182:..\FreeRTOS/queue.c **** 							}
1183:..\FreeRTOS/queue.c **** 						}
1184:..\FreeRTOS/queue.c **** 						else
1185:..\FreeRTOS/queue.c **** 						{
1186:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1187:..\FreeRTOS/queue.c **** 						}
1188:..\FreeRTOS/queue.c **** 					}
1189:..\FreeRTOS/queue.c **** 				}
1190:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1191:..\FreeRTOS/queue.c **** 				{
1192:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1193:..\FreeRTOS/queue.c **** 					{
1194:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1195:..\FreeRTOS/queue.c **** 						{
1196:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1197:..\FreeRTOS/queue.c **** 							context	switch is required. */
1198:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1199:..\FreeRTOS/queue.c **** 							{
1200:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1201:..\FreeRTOS/queue.c **** 							}
1202:..\FreeRTOS/queue.c **** 							else
1203:..\FreeRTOS/queue.c **** 							{
1204:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1205:..\FreeRTOS/queue.c **** 							}
1206:..\FreeRTOS/queue.c **** 						}
1207:..\FreeRTOS/queue.c **** 						else
1208:..\FreeRTOS/queue.c **** 						{
1209:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1210:..\FreeRTOS/queue.c **** 						}
1211:..\FreeRTOS/queue.c **** 					}
1212:..\FreeRTOS/queue.c **** 					else
1213:..\FreeRTOS/queue.c **** 					{
1214:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1215:..\FreeRTOS/queue.c **** 					}
1216:..\FreeRTOS/queue.c **** 				}
1217:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1218:..\FreeRTOS/queue.c **** 			}
1219:..\FreeRTOS/queue.c **** 			else
1220:..\FreeRTOS/queue.c **** 			{
1221:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1222:..\FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1223:..\FreeRTOS/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1224:..\FreeRTOS/queue.c **** 			}
1225:..\FreeRTOS/queue.c **** 
1226:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1227:..\FreeRTOS/queue.c **** 		}
1228:..\FreeRTOS/queue.c **** 		else
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 23


1229:..\FreeRTOS/queue.c **** 		{
1230:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1231:..\FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1232:..\FreeRTOS/queue.c **** 		}
1233:..\FreeRTOS/queue.c **** 	}
1234:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1235:..\FreeRTOS/queue.c **** 
1236:..\FreeRTOS/queue.c **** 	return xReturn;
1237:..\FreeRTOS/queue.c **** }
1238:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1239:..\FreeRTOS/queue.c **** 
1240:..\FreeRTOS/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1241:..\FreeRTOS/queue.c **** {
1242:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1243:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1244:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1245:..\FreeRTOS/queue.c **** 
1246:..\FreeRTOS/queue.c **** 	/* Check the pointer is not NULL. */
1247:..\FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1248:..\FreeRTOS/queue.c **** 
1249:..\FreeRTOS/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1250:..\FreeRTOS/queue.c **** 	is zero (so no data is copied into the buffer. */
1251:..\FreeRTOS/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1252:..\FreeRTOS/queue.c **** 
1253:..\FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1254:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1255:..\FreeRTOS/queue.c **** 	{
1256:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1257:..\FreeRTOS/queue.c **** 	}
1258:..\FreeRTOS/queue.c **** 	#endif
1259:..\FreeRTOS/queue.c **** 
1260:..\FreeRTOS/queue.c **** 
1261:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1262:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1263:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
1264:..\FreeRTOS/queue.c **** 
1265:..\FreeRTOS/queue.c **** 	for( ;; )
1266:..\FreeRTOS/queue.c **** 	{
1267:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1268:..\FreeRTOS/queue.c **** 		{
1269:..\FreeRTOS/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1270:..\FreeRTOS/queue.c **** 
1271:..\FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1272:..\FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1273:..\FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1274:..\FreeRTOS/queue.c **** 			{
1275:..\FreeRTOS/queue.c **** 				/* Data available, remove one item. */
1276:..\FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1277:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1278:..\FreeRTOS/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1279:..\FreeRTOS/queue.c **** 
1280:..\FreeRTOS/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1281:..\FreeRTOS/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1282:..\FreeRTOS/queue.c **** 				task. */
1283:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1284:..\FreeRTOS/queue.c **** 				{
1285:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 24


1286:..\FreeRTOS/queue.c **** 					{
1287:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1288:..\FreeRTOS/queue.c **** 					}
1289:..\FreeRTOS/queue.c **** 					else
1290:..\FreeRTOS/queue.c **** 					{
1291:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1292:..\FreeRTOS/queue.c **** 					}
1293:..\FreeRTOS/queue.c **** 				}
1294:..\FreeRTOS/queue.c **** 				else
1295:..\FreeRTOS/queue.c **** 				{
1296:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1297:..\FreeRTOS/queue.c **** 				}
1298:..\FreeRTOS/queue.c **** 
1299:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1300:..\FreeRTOS/queue.c **** 				return pdPASS;
1301:..\FreeRTOS/queue.c **** 			}
1302:..\FreeRTOS/queue.c **** 			else
1303:..\FreeRTOS/queue.c **** 			{
1304:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1305:..\FreeRTOS/queue.c **** 				{
1306:..\FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1307:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1308:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1309:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1310:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1311:..\FreeRTOS/queue.c **** 				}
1312:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1313:..\FreeRTOS/queue.c **** 				{
1314:..\FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1315:..\FreeRTOS/queue.c **** 					configure the timeout structure. */
1316:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1317:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1318:..\FreeRTOS/queue.c **** 				}
1319:..\FreeRTOS/queue.c **** 				else
1320:..\FreeRTOS/queue.c **** 				{
1321:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
1322:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1323:..\FreeRTOS/queue.c **** 				}
1324:..\FreeRTOS/queue.c **** 			}
1325:..\FreeRTOS/queue.c **** 		}
1326:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1327:..\FreeRTOS/queue.c **** 
1328:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1329:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
1330:..\FreeRTOS/queue.c **** 
1331:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
1332:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1333:..\FreeRTOS/queue.c **** 
1334:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1335:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1336:..\FreeRTOS/queue.c **** 		{
1337:..\FreeRTOS/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1338:..\FreeRTOS/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1339:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1340:..\FreeRTOS/queue.c **** 			{
1341:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1342:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 25


1343:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1344:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1345:..\FreeRTOS/queue.c **** 				{
1346:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1347:..\FreeRTOS/queue.c **** 				}
1348:..\FreeRTOS/queue.c **** 				else
1349:..\FreeRTOS/queue.c **** 				{
1350:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1351:..\FreeRTOS/queue.c **** 				}
1352:..\FreeRTOS/queue.c **** 			}
1353:..\FreeRTOS/queue.c **** 			else
1354:..\FreeRTOS/queue.c **** 			{
1355:..\FreeRTOS/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1356:..\FreeRTOS/queue.c **** 				data. */
1357:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1358:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1359:..\FreeRTOS/queue.c **** 			}
1360:..\FreeRTOS/queue.c **** 		}
1361:..\FreeRTOS/queue.c **** 		else
1362:..\FreeRTOS/queue.c **** 		{
1363:..\FreeRTOS/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1364:..\FreeRTOS/queue.c **** 			back and attempt to read the data. */
1365:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1366:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1367:..\FreeRTOS/queue.c **** 
1368:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1369:..\FreeRTOS/queue.c **** 			{
1370:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1371:..\FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1372:..\FreeRTOS/queue.c **** 			}
1373:..\FreeRTOS/queue.c **** 			else
1374:..\FreeRTOS/queue.c **** 			{
1375:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1376:..\FreeRTOS/queue.c **** 			}
1377:..\FreeRTOS/queue.c **** 		}
1378:..\FreeRTOS/queue.c **** 	}
1379:..\FreeRTOS/queue.c **** }
1380:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1381:..\FreeRTOS/queue.c **** 
1382:..\FreeRTOS/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1383:..\FreeRTOS/queue.c **** {
1384:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1385:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1386:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1387:..\FreeRTOS/queue.c **** 
1388:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
1389:..\FreeRTOS/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1390:..\FreeRTOS/queue.c **** #endif
1391:..\FreeRTOS/queue.c **** 
1392:..\FreeRTOS/queue.c **** 	/* Check the queue pointer is not NULL. */
1393:..\FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1394:..\FreeRTOS/queue.c **** 
1395:..\FreeRTOS/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1396:..\FreeRTOS/queue.c **** 	0. */
1397:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1398:..\FreeRTOS/queue.c **** 
1399:..\FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 26


1400:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1401:..\FreeRTOS/queue.c **** 	{
1402:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1403:..\FreeRTOS/queue.c **** 	}
1404:..\FreeRTOS/queue.c **** 	#endif
1405:..\FreeRTOS/queue.c **** 
1406:..\FreeRTOS/queue.c **** 
1407:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1408:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1409:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
1410:..\FreeRTOS/queue.c **** 
1411:..\FreeRTOS/queue.c **** 	for( ;; )
1412:..\FreeRTOS/queue.c **** 	{
1413:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1414:..\FreeRTOS/queue.c **** 		{
1415:..\FreeRTOS/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1416:..\FreeRTOS/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1417:..\FreeRTOS/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1418:..\FreeRTOS/queue.c **** 
1419:..\FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1420:..\FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1421:..\FreeRTOS/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1422:..\FreeRTOS/queue.c **** 			{
1423:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1424:..\FreeRTOS/queue.c **** 
1425:..\FreeRTOS/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1426:..\FreeRTOS/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1427:..\FreeRTOS/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1428:..\FreeRTOS/queue.c **** 
1429:..\FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1430:..\FreeRTOS/queue.c **** 				{
1431:..\FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1432:..\FreeRTOS/queue.c **** 					{
1433:..\FreeRTOS/queue.c **** 						/* Record the information required to implement
1434:..\FreeRTOS/queue.c **** 						priority inheritance should it become necessary. */
1435:..\FreeRTOS/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1436:..\FreeRTOS/queue.c **** 					}
1437:..\FreeRTOS/queue.c **** 					else
1438:..\FreeRTOS/queue.c **** 					{
1439:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1440:..\FreeRTOS/queue.c **** 					}
1441:..\FreeRTOS/queue.c **** 				}
1442:..\FreeRTOS/queue.c **** 				#endif /* configUSE_MUTEXES */
1443:..\FreeRTOS/queue.c **** 
1444:..\FreeRTOS/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1445:..\FreeRTOS/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1446:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1447:..\FreeRTOS/queue.c **** 				{
1448:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1449:..\FreeRTOS/queue.c **** 					{
1450:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1451:..\FreeRTOS/queue.c **** 					}
1452:..\FreeRTOS/queue.c **** 					else
1453:..\FreeRTOS/queue.c **** 					{
1454:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1455:..\FreeRTOS/queue.c **** 					}
1456:..\FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 27


1457:..\FreeRTOS/queue.c **** 				else
1458:..\FreeRTOS/queue.c **** 				{
1459:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1460:..\FreeRTOS/queue.c **** 				}
1461:..\FreeRTOS/queue.c **** 
1462:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1463:..\FreeRTOS/queue.c **** 				return pdPASS;
1464:..\FreeRTOS/queue.c **** 			}
1465:..\FreeRTOS/queue.c **** 			else
1466:..\FreeRTOS/queue.c **** 			{
1467:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1468:..\FreeRTOS/queue.c **** 				{
1469:..\FreeRTOS/queue.c **** 					/* For inheritance to have occurred there must have been an
1470:..\FreeRTOS/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1471:..\FreeRTOS/queue.c **** 					if it were 0 the function would have exited. */
1472:..\FreeRTOS/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1473:..\FreeRTOS/queue.c **** 					{
1474:..\FreeRTOS/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1475:..\FreeRTOS/queue.c **** 					}
1476:..\FreeRTOS/queue.c **** 					#endif /* configUSE_MUTEXES */
1477:..\FreeRTOS/queue.c **** 
1478:..\FreeRTOS/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1479:..\FreeRTOS/queue.c **** 					(or the block time has expired) so exit now. */
1480:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1481:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1482:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1483:..\FreeRTOS/queue.c **** 				}
1484:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1485:..\FreeRTOS/queue.c **** 				{
1486:..\FreeRTOS/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1487:..\FreeRTOS/queue.c **** 					so configure the timeout structure ready to block. */
1488:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1489:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1490:..\FreeRTOS/queue.c **** 				}
1491:..\FreeRTOS/queue.c **** 				else
1492:..\FreeRTOS/queue.c **** 				{
1493:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
1494:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:..\FreeRTOS/queue.c **** 				}
1496:..\FreeRTOS/queue.c **** 			}
1497:..\FreeRTOS/queue.c **** 		}
1498:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1499:..\FreeRTOS/queue.c **** 
1500:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1501:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
1502:..\FreeRTOS/queue.c **** 
1503:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
1504:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1505:..\FreeRTOS/queue.c **** 
1506:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1507:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1508:..\FreeRTOS/queue.c **** 		{
1509:..\FreeRTOS/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1510:..\FreeRTOS/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1511:..\FreeRTOS/queue.c **** 			become available.  As semaphores are implemented with queues the
1512:..\FreeRTOS/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1513:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 28


1514:..\FreeRTOS/queue.c **** 			{
1515:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1516:..\FreeRTOS/queue.c **** 
1517:..\FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1518:..\FreeRTOS/queue.c **** 				{
1519:..\FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1520:..\FreeRTOS/queue.c **** 					{
1521:..\FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
1522:..\FreeRTOS/queue.c **** 						{
1523:..\FreeRTOS/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1524:..\FreeRTOS/queue.c **** 						}
1525:..\FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
1526:..\FreeRTOS/queue.c **** 					}
1527:..\FreeRTOS/queue.c **** 					else
1528:..\FreeRTOS/queue.c **** 					{
1529:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1530:..\FreeRTOS/queue.c **** 					}
1531:..\FreeRTOS/queue.c **** 				}
1532:..\FreeRTOS/queue.c **** 				#endif
1533:..\FreeRTOS/queue.c **** 
1534:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1535:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1536:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1537:..\FreeRTOS/queue.c **** 				{
1538:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1539:..\FreeRTOS/queue.c **** 				}
1540:..\FreeRTOS/queue.c **** 				else
1541:..\FreeRTOS/queue.c **** 				{
1542:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1543:..\FreeRTOS/queue.c **** 				}
1544:..\FreeRTOS/queue.c **** 			}
1545:..\FreeRTOS/queue.c **** 			else
1546:..\FreeRTOS/queue.c **** 			{
1547:..\FreeRTOS/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1548:..\FreeRTOS/queue.c **** 				attempt to take the semaphore again. */
1549:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1550:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1551:..\FreeRTOS/queue.c **** 			}
1552:..\FreeRTOS/queue.c **** 		}
1553:..\FreeRTOS/queue.c **** 		else
1554:..\FreeRTOS/queue.c **** 		{
1555:..\FreeRTOS/queue.c **** 			/* Timed out. */
1556:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1557:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1558:..\FreeRTOS/queue.c **** 
1559:..\FreeRTOS/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1560:..\FreeRTOS/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1561:..\FreeRTOS/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1562:..\FreeRTOS/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1563:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1564:..\FreeRTOS/queue.c **** 			{
1565:..\FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1566:..\FreeRTOS/queue.c **** 				{
1567:..\FreeRTOS/queue.c **** 					/* xInheritanceOccurred could only have be set if
1568:..\FreeRTOS/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1569:..\FreeRTOS/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1570:..\FreeRTOS/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 29


1571:..\FreeRTOS/queue.c **** 					{
1572:..\FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
1573:..\FreeRTOS/queue.c **** 						{
1574:..\FreeRTOS/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1575:..\FreeRTOS/queue.c **** 
1576:..\FreeRTOS/queue.c **** 							/* This task blocking on the mutex caused another
1577:..\FreeRTOS/queue.c **** 							task to inherit this task's priority.  Now this task
1578:..\FreeRTOS/queue.c **** 							has timed out the priority should be disinherited
1579:..\FreeRTOS/queue.c **** 							again, but only as low as the next highest priority
1580:..\FreeRTOS/queue.c **** 							task that is waiting for the same mutex. */
1581:..\FreeRTOS/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1582:..\FreeRTOS/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1583:..\FreeRTOS/queue.c **** 						}
1584:..\FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
1585:..\FreeRTOS/queue.c **** 					}
1586:..\FreeRTOS/queue.c **** 				}
1587:..\FreeRTOS/queue.c **** 				#endif /* configUSE_MUTEXES */
1588:..\FreeRTOS/queue.c **** 
1589:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1590:..\FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1591:..\FreeRTOS/queue.c **** 			}
1592:..\FreeRTOS/queue.c **** 			else
1593:..\FreeRTOS/queue.c **** 			{
1594:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1595:..\FreeRTOS/queue.c **** 			}
1596:..\FreeRTOS/queue.c **** 		}
1597:..\FreeRTOS/queue.c **** 	}
1598:..\FreeRTOS/queue.c **** }
1599:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1600:..\FreeRTOS/queue.c **** 
1601:..\FreeRTOS/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1602:..\FreeRTOS/queue.c **** {
1603:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1604:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1605:..\FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1606:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1607:..\FreeRTOS/queue.c **** 
1608:..\FreeRTOS/queue.c **** 	/* Check the pointer is not NULL. */
1609:..\FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1610:..\FreeRTOS/queue.c **** 
1611:..\FreeRTOS/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1612:..\FreeRTOS/queue.c **** 	is zero (so no data is copied into the buffer. */
1613:..\FreeRTOS/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1614:..\FreeRTOS/queue.c **** 
1615:..\FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1616:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1617:..\FreeRTOS/queue.c **** 	{
1618:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1619:..\FreeRTOS/queue.c **** 	}
1620:..\FreeRTOS/queue.c **** 	#endif
1621:..\FreeRTOS/queue.c **** 
1622:..\FreeRTOS/queue.c **** 
1623:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1624:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1625:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
1626:..\FreeRTOS/queue.c **** 
1627:..\FreeRTOS/queue.c **** 	for( ;; )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 30


1628:..\FreeRTOS/queue.c **** 	{
1629:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1630:..\FreeRTOS/queue.c **** 		{
1631:..\FreeRTOS/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1632:..\FreeRTOS/queue.c **** 
1633:..\FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1634:..\FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1635:..\FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1636:..\FreeRTOS/queue.c **** 			{
1637:..\FreeRTOS/queue.c **** 				/* Remember the read position so it can be reset after the data
1638:..\FreeRTOS/queue.c **** 				is read from the queue as this function is only peeking the
1639:..\FreeRTOS/queue.c **** 				data, not removing it. */
1640:..\FreeRTOS/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1641:..\FreeRTOS/queue.c **** 
1642:..\FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1643:..\FreeRTOS/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1644:..\FreeRTOS/queue.c **** 
1645:..\FreeRTOS/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1646:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1647:..\FreeRTOS/queue.c **** 
1648:..\FreeRTOS/queue.c **** 				/* The data is being left in the queue, so see if there are
1649:..\FreeRTOS/queue.c **** 				any other tasks waiting for the data. */
1650:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1651:..\FreeRTOS/queue.c **** 				{
1652:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1653:..\FreeRTOS/queue.c **** 					{
1654:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than this task. */
1655:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1656:..\FreeRTOS/queue.c **** 					}
1657:..\FreeRTOS/queue.c **** 					else
1658:..\FreeRTOS/queue.c **** 					{
1659:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1660:..\FreeRTOS/queue.c **** 					}
1661:..\FreeRTOS/queue.c **** 				}
1662:..\FreeRTOS/queue.c **** 				else
1663:..\FreeRTOS/queue.c **** 				{
1664:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1665:..\FreeRTOS/queue.c **** 				}
1666:..\FreeRTOS/queue.c **** 
1667:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1668:..\FreeRTOS/queue.c **** 				return pdPASS;
1669:..\FreeRTOS/queue.c **** 			}
1670:..\FreeRTOS/queue.c **** 			else
1671:..\FreeRTOS/queue.c **** 			{
1672:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1673:..\FreeRTOS/queue.c **** 				{
1674:..\FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1675:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1676:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1677:..\FreeRTOS/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1678:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1679:..\FreeRTOS/queue.c **** 				}
1680:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1681:..\FreeRTOS/queue.c **** 				{
1682:..\FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1683:..\FreeRTOS/queue.c **** 					configure the timeout structure ready to enter the blocked
1684:..\FreeRTOS/queue.c **** 					state. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 31


1685:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1686:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1687:..\FreeRTOS/queue.c **** 				}
1688:..\FreeRTOS/queue.c **** 				else
1689:..\FreeRTOS/queue.c **** 				{
1690:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
1691:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1692:..\FreeRTOS/queue.c **** 				}
1693:..\FreeRTOS/queue.c **** 			}
1694:..\FreeRTOS/queue.c **** 		}
1695:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1696:..\FreeRTOS/queue.c **** 
1697:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1698:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
1699:..\FreeRTOS/queue.c **** 
1700:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
1701:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1702:..\FreeRTOS/queue.c **** 
1703:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1704:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1705:..\FreeRTOS/queue.c **** 		{
1706:..\FreeRTOS/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1707:..\FreeRTOS/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1708:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1709:..\FreeRTOS/queue.c **** 			{
1710:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1711:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1712:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1713:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1714:..\FreeRTOS/queue.c **** 				{
1715:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1716:..\FreeRTOS/queue.c **** 				}
1717:..\FreeRTOS/queue.c **** 				else
1718:..\FreeRTOS/queue.c **** 				{
1719:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1720:..\FreeRTOS/queue.c **** 				}
1721:..\FreeRTOS/queue.c **** 			}
1722:..\FreeRTOS/queue.c **** 			else
1723:..\FreeRTOS/queue.c **** 			{
1724:..\FreeRTOS/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1725:..\FreeRTOS/queue.c **** 				state, instead return to try and obtain the data. */
1726:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1727:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1728:..\FreeRTOS/queue.c **** 			}
1729:..\FreeRTOS/queue.c **** 		}
1730:..\FreeRTOS/queue.c **** 		else
1731:..\FreeRTOS/queue.c **** 		{
1732:..\FreeRTOS/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1733:..\FreeRTOS/queue.c **** 			exit, otherwise go back and try to read the data again. */
1734:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1735:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1736:..\FreeRTOS/queue.c **** 
1737:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1738:..\FreeRTOS/queue.c **** 			{
1739:..\FreeRTOS/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1740:..\FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1741:..\FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 32


1742:..\FreeRTOS/queue.c **** 			else
1743:..\FreeRTOS/queue.c **** 			{
1744:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1745:..\FreeRTOS/queue.c **** 			}
1746:..\FreeRTOS/queue.c **** 		}
1747:..\FreeRTOS/queue.c **** 	}
1748:..\FreeRTOS/queue.c **** }
1749:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1750:..\FreeRTOS/queue.c **** 
1751:..\FreeRTOS/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1752:..\FreeRTOS/queue.c **** {
1753:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1754:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1755:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1756:..\FreeRTOS/queue.c **** 
1757:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1758:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1759:..\FreeRTOS/queue.c **** 
1760:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1761:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1762:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1763:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1764:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1765:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1766:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1767:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1768:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1769:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1770:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1771:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1772:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1773:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1774:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1775:..\FreeRTOS/queue.c **** 
1776:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1777:..\FreeRTOS/queue.c **** 	{
1778:..\FreeRTOS/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1779:..\FreeRTOS/queue.c **** 
1780:..\FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1781:..\FreeRTOS/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1782:..\FreeRTOS/queue.c **** 		{
1783:..\FreeRTOS/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1784:..\FreeRTOS/queue.c **** 
1785:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1786:..\FreeRTOS/queue.c **** 
1787:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1788:..\FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1789:..\FreeRTOS/queue.c **** 
1790:..\FreeRTOS/queue.c **** 			/* If the queue is locked the event list will not be modified.
1791:..\FreeRTOS/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1792:..\FreeRTOS/queue.c **** 			will know that an ISR has removed data while the queue was
1793:..\FreeRTOS/queue.c **** 			locked. */
1794:..\FreeRTOS/queue.c **** 			if( cRxLock == queueUNLOCKED )
1795:..\FreeRTOS/queue.c **** 			{
1796:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1797:..\FreeRTOS/queue.c **** 				{
1798:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 33


1799:..\FreeRTOS/queue.c **** 					{
1800:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than us so
1801:..\FreeRTOS/queue.c **** 						force a context switch. */
1802:..\FreeRTOS/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1803:..\FreeRTOS/queue.c **** 						{
1804:..\FreeRTOS/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1805:..\FreeRTOS/queue.c **** 						}
1806:..\FreeRTOS/queue.c **** 						else
1807:..\FreeRTOS/queue.c **** 						{
1808:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1809:..\FreeRTOS/queue.c **** 						}
1810:..\FreeRTOS/queue.c **** 					}
1811:..\FreeRTOS/queue.c **** 					else
1812:..\FreeRTOS/queue.c **** 					{
1813:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1814:..\FreeRTOS/queue.c **** 					}
1815:..\FreeRTOS/queue.c **** 				}
1816:..\FreeRTOS/queue.c **** 				else
1817:..\FreeRTOS/queue.c **** 				{
1818:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1819:..\FreeRTOS/queue.c **** 				}
1820:..\FreeRTOS/queue.c **** 			}
1821:..\FreeRTOS/queue.c **** 			else
1822:..\FreeRTOS/queue.c **** 			{
1823:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1824:..\FreeRTOS/queue.c **** 				knows that data was removed while it was locked. */
1825:..\FreeRTOS/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1826:..\FreeRTOS/queue.c **** 			}
1827:..\FreeRTOS/queue.c **** 
1828:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1829:..\FreeRTOS/queue.c **** 		}
1830:..\FreeRTOS/queue.c **** 		else
1831:..\FreeRTOS/queue.c **** 		{
1832:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
1833:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1834:..\FreeRTOS/queue.c **** 		}
1835:..\FreeRTOS/queue.c **** 	}
1836:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1837:..\FreeRTOS/queue.c **** 
1838:..\FreeRTOS/queue.c **** 	return xReturn;
1839:..\FreeRTOS/queue.c **** }
1840:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1841:..\FreeRTOS/queue.c **** 
1842:..\FreeRTOS/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1843:..\FreeRTOS/queue.c **** {
1844:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1845:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1846:..\FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1847:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1848:..\FreeRTOS/queue.c **** 
1849:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1850:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1851:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1852:..\FreeRTOS/queue.c **** 
1853:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1854:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1855:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 34


1856:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1857:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1858:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1859:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1860:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1861:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1862:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1863:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1864:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1865:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1866:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1867:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1868:..\FreeRTOS/queue.c **** 
1869:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1870:..\FreeRTOS/queue.c **** 	{
1871:..\FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1872:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1873:..\FreeRTOS/queue.c **** 		{
1874:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1875:..\FreeRTOS/queue.c **** 
1876:..\FreeRTOS/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1877:..\FreeRTOS/queue.c **** 			actually being removed from the queue. */
1878:..\FreeRTOS/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1879:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1880:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1881:..\FreeRTOS/queue.c **** 
1882:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1883:..\FreeRTOS/queue.c **** 		}
1884:..\FreeRTOS/queue.c **** 		else
1885:..\FreeRTOS/queue.c **** 		{
1886:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
1887:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1888:..\FreeRTOS/queue.c **** 		}
1889:..\FreeRTOS/queue.c **** 	}
1890:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1891:..\FreeRTOS/queue.c **** 
1892:..\FreeRTOS/queue.c **** 	return xReturn;
1893:..\FreeRTOS/queue.c **** }
1894:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1895:..\FreeRTOS/queue.c **** 
1896:..\FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1897:..\FreeRTOS/queue.c **** {
1898:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1899:..\FreeRTOS/queue.c **** 
1900:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
1901:..\FreeRTOS/queue.c **** 
1902:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1903:..\FreeRTOS/queue.c **** 	{
1904:..\FreeRTOS/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1905:..\FreeRTOS/queue.c **** 	}
1906:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1907:..\FreeRTOS/queue.c **** 
1908:..\FreeRTOS/queue.c **** 	return uxReturn;
1909:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1910:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1911:..\FreeRTOS/queue.c **** 
1912:..\FreeRTOS/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 35


1913:..\FreeRTOS/queue.c **** {
1914:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1915:..\FreeRTOS/queue.c **** Queue_t *pxQueue;
1916:..\FreeRTOS/queue.c **** 
1917:..\FreeRTOS/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1918:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1919:..\FreeRTOS/queue.c **** 
1920:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1921:..\FreeRTOS/queue.c **** 	{
1922:..\FreeRTOS/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1923:..\FreeRTOS/queue.c **** 	}
1924:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1925:..\FreeRTOS/queue.c **** 
1926:..\FreeRTOS/queue.c **** 	return uxReturn;
1927:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1928:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1929:..\FreeRTOS/queue.c **** 
1930:..\FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1931:..\FreeRTOS/queue.c **** {
1932:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1933:..\FreeRTOS/queue.c **** 
1934:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
1935:..\FreeRTOS/queue.c **** 
1936:..\FreeRTOS/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1937:..\FreeRTOS/queue.c **** 
1938:..\FreeRTOS/queue.c **** 	return uxReturn;
1939:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1940:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1941:..\FreeRTOS/queue.c **** 
1942:..\FreeRTOS/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1943:..\FreeRTOS/queue.c **** {
1944:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1945:..\FreeRTOS/queue.c **** 
1946:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1947:..\FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1948:..\FreeRTOS/queue.c **** 
1949:..\FreeRTOS/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1950:..\FreeRTOS/queue.c **** 	{
1951:..\FreeRTOS/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1952:..\FreeRTOS/queue.c **** 	}
1953:..\FreeRTOS/queue.c **** 	#endif
1954:..\FreeRTOS/queue.c **** 
1955:..\FreeRTOS/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1956:..\FreeRTOS/queue.c **** 	{
1957:..\FreeRTOS/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1958:..\FreeRTOS/queue.c **** 		again. */
1959:..\FreeRTOS/queue.c **** 		vPortFree( pxQueue );
1960:..\FreeRTOS/queue.c **** 	}
1961:..\FreeRTOS/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1962:..\FreeRTOS/queue.c **** 	{
1963:..\FreeRTOS/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1964:..\FreeRTOS/queue.c **** 		check before attempting to free the memory. */
1965:..\FreeRTOS/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1966:..\FreeRTOS/queue.c **** 		{
1967:..\FreeRTOS/queue.c **** 			vPortFree( pxQueue );
1968:..\FreeRTOS/queue.c **** 		}
1969:..\FreeRTOS/queue.c **** 		else
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 36


1970:..\FreeRTOS/queue.c **** 		{
1971:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1972:..\FreeRTOS/queue.c **** 		}
1973:..\FreeRTOS/queue.c **** 	}
1974:..\FreeRTOS/queue.c **** 	#else
1975:..\FreeRTOS/queue.c **** 	{
1976:..\FreeRTOS/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1977:..\FreeRTOS/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1978:..\FreeRTOS/queue.c **** 		( void ) pxQueue;
1979:..\FreeRTOS/queue.c **** 	}
1980:..\FreeRTOS/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1981:..\FreeRTOS/queue.c **** }
1982:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1983:..\FreeRTOS/queue.c **** 
1984:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1985:..\FreeRTOS/queue.c **** 
1986:..\FreeRTOS/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1987:..\FreeRTOS/queue.c **** 	{
1988:..\FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1989:..\FreeRTOS/queue.c **** 	}
1990:..\FreeRTOS/queue.c **** 
1991:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1992:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1993:..\FreeRTOS/queue.c **** 
1994:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1995:..\FreeRTOS/queue.c **** 
1996:..\FreeRTOS/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1997:..\FreeRTOS/queue.c **** 	{
1998:..\FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1999:..\FreeRTOS/queue.c **** 	}
2000:..\FreeRTOS/queue.c **** 
2001:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2002:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2003:..\FreeRTOS/queue.c **** 
2004:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2005:..\FreeRTOS/queue.c **** 
2006:..\FreeRTOS/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2007:..\FreeRTOS/queue.c **** 	{
2008:..\FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2009:..\FreeRTOS/queue.c **** 	}
2010:..\FreeRTOS/queue.c **** 
2011:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2012:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2013:..\FreeRTOS/queue.c **** 
2014:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
2015:..\FreeRTOS/queue.c **** 
2016:..\FreeRTOS/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2017:..\FreeRTOS/queue.c **** 	{
  27              		.loc 1 2017 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2018:..\FreeRTOS/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2019:..\FreeRTOS/queue.c **** 
2020:..\FreeRTOS/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 37


2021:..\FreeRTOS/queue.c **** 		priority, but the waiting task times out, then the holder should
2022:..\FreeRTOS/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2023:..\FreeRTOS/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2024:..\FreeRTOS/queue.c **** 		return the priority of the highest priority task that is waiting for the
2025:..\FreeRTOS/queue.c **** 		mutex. */
2026:..\FreeRTOS/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  33              		.loc 1 2026 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 23B1     		cbz	r3, .L3
2027:..\FreeRTOS/queue.c **** 		{
2028:..\FreeRTOS/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  36              		.loc 1 2028 0
  37 0004 036B     		ldr	r3, [r0, #48]
  38 0006 1868     		ldr	r0, [r3]
  39              	.LVL1:
  40 0008 C0F10500 		rsb	r0, r0, #5
  41              	.LVL2:
  42 000c 7047     		bx	lr
  43              	.LVL3:
  44              	.L3:
2029:..\FreeRTOS/queue.c **** 		}
2030:..\FreeRTOS/queue.c **** 		else
2031:..\FreeRTOS/queue.c **** 		{
2032:..\FreeRTOS/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  45              		.loc 1 2032 0
  46 000e 0020     		movs	r0, #0
  47              	.LVL4:
2033:..\FreeRTOS/queue.c **** 		}
2034:..\FreeRTOS/queue.c **** 
2035:..\FreeRTOS/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2036:..\FreeRTOS/queue.c **** 	}
  48              		.loc 1 2036 0
  49 0010 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE89:
  52              		.size	prvGetDisinheritPriorityAfterTimeout, .-prvGetDisinheritPriorityAfterTimeout
  53 0012 00BF     		.section	.text.prvIsQueueFull,"ax",%progbits
  54              		.align	2
  55              		.thumb
  56              		.thumb_func
  57              		.type	prvIsQueueFull, %function
  58              	prvIsQueueFull:
  59              	.LFB95:
2037:..\FreeRTOS/queue.c **** 
2038:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
2039:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2040:..\FreeRTOS/queue.c **** 
2041:..\FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2042:..\FreeRTOS/queue.c **** {
2043:..\FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
2044:..\FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
2045:..\FreeRTOS/queue.c **** 
2046:..\FreeRTOS/queue.c **** 	/* This function is called from a critical section. */
2047:..\FreeRTOS/queue.c **** 
2048:..\FreeRTOS/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2049:..\FreeRTOS/queue.c **** 
2050:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 38


2051:..\FreeRTOS/queue.c **** 	{
2052:..\FreeRTOS/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2053:..\FreeRTOS/queue.c **** 		{
2054:..\FreeRTOS/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2055:..\FreeRTOS/queue.c **** 			{
2056:..\FreeRTOS/queue.c **** 				/* The mutex is no longer being held. */
2057:..\FreeRTOS/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2058:..\FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2059:..\FreeRTOS/queue.c **** 			}
2060:..\FreeRTOS/queue.c **** 			else
2061:..\FreeRTOS/queue.c **** 			{
2062:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2063:..\FreeRTOS/queue.c **** 			}
2064:..\FreeRTOS/queue.c **** 		}
2065:..\FreeRTOS/queue.c **** 		#endif /* configUSE_MUTEXES */
2066:..\FreeRTOS/queue.c **** 	}
2067:..\FreeRTOS/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2068:..\FreeRTOS/queue.c **** 	{
2069:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2070:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2071:..\FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2072:..\FreeRTOS/queue.c **** 		{
2073:..\FreeRTOS/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2074:..\FreeRTOS/queue.c **** 		}
2075:..\FreeRTOS/queue.c **** 		else
2076:..\FreeRTOS/queue.c **** 		{
2077:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2078:..\FreeRTOS/queue.c **** 		}
2079:..\FreeRTOS/queue.c **** 	}
2080:..\FreeRTOS/queue.c **** 	else
2081:..\FreeRTOS/queue.c **** 	{
2082:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2083:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2084:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2085:..\FreeRTOS/queue.c **** 		{
2086:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2087:..\FreeRTOS/queue.c **** 		}
2088:..\FreeRTOS/queue.c **** 		else
2089:..\FreeRTOS/queue.c **** 		{
2090:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2091:..\FreeRTOS/queue.c **** 		}
2092:..\FreeRTOS/queue.c **** 
2093:..\FreeRTOS/queue.c **** 		if( xPosition == queueOVERWRITE )
2094:..\FreeRTOS/queue.c **** 		{
2095:..\FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2096:..\FreeRTOS/queue.c **** 			{
2097:..\FreeRTOS/queue.c **** 				/* An item is not being added but overwritten, so subtract
2098:..\FreeRTOS/queue.c **** 				one from the recorded number of items in the queue so when
2099:..\FreeRTOS/queue.c **** 				one is added again below the number of recorded items remains
2100:..\FreeRTOS/queue.c **** 				correct. */
2101:..\FreeRTOS/queue.c **** 				--uxMessagesWaiting;
2102:..\FreeRTOS/queue.c **** 			}
2103:..\FreeRTOS/queue.c **** 			else
2104:..\FreeRTOS/queue.c **** 			{
2105:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2106:..\FreeRTOS/queue.c **** 			}
2107:..\FreeRTOS/queue.c **** 		}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 39


2108:..\FreeRTOS/queue.c **** 		else
2109:..\FreeRTOS/queue.c **** 		{
2110:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:..\FreeRTOS/queue.c **** 		}
2112:..\FreeRTOS/queue.c **** 	}
2113:..\FreeRTOS/queue.c **** 
2114:..\FreeRTOS/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2115:..\FreeRTOS/queue.c **** 
2116:..\FreeRTOS/queue.c **** 	return xReturn;
2117:..\FreeRTOS/queue.c **** }
2118:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2119:..\FreeRTOS/queue.c **** 
2120:..\FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2121:..\FreeRTOS/queue.c **** {
2122:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2123:..\FreeRTOS/queue.c **** 	{
2124:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2125:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2126:..\FreeRTOS/queue.c **** 		{
2127:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2128:..\FreeRTOS/queue.c **** 		}
2129:..\FreeRTOS/queue.c **** 		else
2130:..\FreeRTOS/queue.c **** 		{
2131:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2132:..\FreeRTOS/queue.c **** 		}
2133:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2134:..\FreeRTOS/queue.c **** 	}
2135:..\FreeRTOS/queue.c **** }
2136:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2137:..\FreeRTOS/queue.c **** 
2138:..\FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2139:..\FreeRTOS/queue.c **** {
2140:..\FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2141:..\FreeRTOS/queue.c **** 
2142:..\FreeRTOS/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2143:..\FreeRTOS/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2144:..\FreeRTOS/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2145:..\FreeRTOS/queue.c **** 	updated. */
2146:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2147:..\FreeRTOS/queue.c **** 	{
2148:..\FreeRTOS/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2149:..\FreeRTOS/queue.c **** 
2150:..\FreeRTOS/queue.c **** 		/* See if data was added to the queue while it was locked. */
2151:..\FreeRTOS/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2152:..\FreeRTOS/queue.c **** 		{
2153:..\FreeRTOS/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2154:..\FreeRTOS/queue.c **** 			blocked waiting for data to become available? */
2155:..\FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2156:..\FreeRTOS/queue.c **** 			{
2157:..\FreeRTOS/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2158:..\FreeRTOS/queue.c **** 				{
2159:..\FreeRTOS/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2160:..\FreeRTOS/queue.c **** 					{
2161:..\FreeRTOS/queue.c **** 						/* The queue is a member of a queue set, and posting to
2162:..\FreeRTOS/queue.c **** 						the queue set caused a higher priority task to unblock.
2163:..\FreeRTOS/queue.c **** 						A context switch is required. */
2164:..\FreeRTOS/queue.c **** 						vTaskMissedYield();
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 40


2165:..\FreeRTOS/queue.c **** 					}
2166:..\FreeRTOS/queue.c **** 					else
2167:..\FreeRTOS/queue.c **** 					{
2168:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2169:..\FreeRTOS/queue.c **** 					}
2170:..\FreeRTOS/queue.c **** 				}
2171:..\FreeRTOS/queue.c **** 				else
2172:..\FreeRTOS/queue.c **** 				{
2173:..\FreeRTOS/queue.c **** 					/* Tasks that are removed from the event list will get
2174:..\FreeRTOS/queue.c **** 					added to the pending ready list as the scheduler is still
2175:..\FreeRTOS/queue.c **** 					suspended. */
2176:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2177:..\FreeRTOS/queue.c **** 					{
2178:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2179:..\FreeRTOS/queue.c **** 						{
2180:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
2181:..\FreeRTOS/queue.c **** 							context	switch is required. */
2182:..\FreeRTOS/queue.c **** 							vTaskMissedYield();
2183:..\FreeRTOS/queue.c **** 						}
2184:..\FreeRTOS/queue.c **** 						else
2185:..\FreeRTOS/queue.c **** 						{
2186:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2187:..\FreeRTOS/queue.c **** 						}
2188:..\FreeRTOS/queue.c **** 					}
2189:..\FreeRTOS/queue.c **** 					else
2190:..\FreeRTOS/queue.c **** 					{
2191:..\FreeRTOS/queue.c **** 						break;
2192:..\FreeRTOS/queue.c **** 					}
2193:..\FreeRTOS/queue.c **** 				}
2194:..\FreeRTOS/queue.c **** 			}
2195:..\FreeRTOS/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2196:..\FreeRTOS/queue.c **** 			{
2197:..\FreeRTOS/queue.c **** 				/* Tasks that are removed from the event list will get added to
2198:..\FreeRTOS/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2199:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2200:..\FreeRTOS/queue.c **** 				{
2201:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2202:..\FreeRTOS/queue.c **** 					{
2203:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority so record that
2204:..\FreeRTOS/queue.c **** 						a context switch is required. */
2205:..\FreeRTOS/queue.c **** 						vTaskMissedYield();
2206:..\FreeRTOS/queue.c **** 					}
2207:..\FreeRTOS/queue.c **** 					else
2208:..\FreeRTOS/queue.c **** 					{
2209:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2210:..\FreeRTOS/queue.c **** 					}
2211:..\FreeRTOS/queue.c **** 				}
2212:..\FreeRTOS/queue.c **** 				else
2213:..\FreeRTOS/queue.c **** 				{
2214:..\FreeRTOS/queue.c **** 					break;
2215:..\FreeRTOS/queue.c **** 				}
2216:..\FreeRTOS/queue.c **** 			}
2217:..\FreeRTOS/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2218:..\FreeRTOS/queue.c **** 
2219:..\FreeRTOS/queue.c **** 			--cTxLock;
2220:..\FreeRTOS/queue.c **** 		}
2221:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 41


2222:..\FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2223:..\FreeRTOS/queue.c **** 	}
2224:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2225:..\FreeRTOS/queue.c **** 
2226:..\FreeRTOS/queue.c **** 	/* Do the same for the Rx lock. */
2227:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2228:..\FreeRTOS/queue.c **** 	{
2229:..\FreeRTOS/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2230:..\FreeRTOS/queue.c **** 
2231:..\FreeRTOS/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2232:..\FreeRTOS/queue.c **** 		{
2233:..\FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:..\FreeRTOS/queue.c **** 			{
2235:..\FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:..\FreeRTOS/queue.c **** 				{
2237:..\FreeRTOS/queue.c **** 					vTaskMissedYield();
2238:..\FreeRTOS/queue.c **** 				}
2239:..\FreeRTOS/queue.c **** 				else
2240:..\FreeRTOS/queue.c **** 				{
2241:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2242:..\FreeRTOS/queue.c **** 				}
2243:..\FreeRTOS/queue.c **** 
2244:..\FreeRTOS/queue.c **** 				--cRxLock;
2245:..\FreeRTOS/queue.c **** 			}
2246:..\FreeRTOS/queue.c **** 			else
2247:..\FreeRTOS/queue.c **** 			{
2248:..\FreeRTOS/queue.c **** 				break;
2249:..\FreeRTOS/queue.c **** 			}
2250:..\FreeRTOS/queue.c **** 		}
2251:..\FreeRTOS/queue.c **** 
2252:..\FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2253:..\FreeRTOS/queue.c **** 	}
2254:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2255:..\FreeRTOS/queue.c **** }
2256:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2257:..\FreeRTOS/queue.c **** 
2258:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2259:..\FreeRTOS/queue.c **** {
2260:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2261:..\FreeRTOS/queue.c **** 
2262:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2263:..\FreeRTOS/queue.c **** 	{
2264:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2265:..\FreeRTOS/queue.c **** 		{
2266:..\FreeRTOS/queue.c **** 			xReturn = pdTRUE;
2267:..\FreeRTOS/queue.c **** 		}
2268:..\FreeRTOS/queue.c **** 		else
2269:..\FreeRTOS/queue.c **** 		{
2270:..\FreeRTOS/queue.c **** 			xReturn = pdFALSE;
2271:..\FreeRTOS/queue.c **** 		}
2272:..\FreeRTOS/queue.c **** 	}
2273:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2274:..\FreeRTOS/queue.c **** 
2275:..\FreeRTOS/queue.c **** 	return xReturn;
2276:..\FreeRTOS/queue.c **** }
2277:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2278:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 42


2279:..\FreeRTOS/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2280:..\FreeRTOS/queue.c **** {
2281:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2282:..\FreeRTOS/queue.c **** 
2283:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
2284:..\FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2285:..\FreeRTOS/queue.c **** 	{
2286:..\FreeRTOS/queue.c **** 		xReturn = pdTRUE;
2287:..\FreeRTOS/queue.c **** 	}
2288:..\FreeRTOS/queue.c **** 	else
2289:..\FreeRTOS/queue.c **** 	{
2290:..\FreeRTOS/queue.c **** 		xReturn = pdFALSE;
2291:..\FreeRTOS/queue.c **** 	}
2292:..\FreeRTOS/queue.c **** 
2293:..\FreeRTOS/queue.c **** 	return xReturn;
2294:..\FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2295:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2296:..\FreeRTOS/queue.c **** 
2297:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2298:..\FreeRTOS/queue.c **** {
  60              		.loc 1 2298 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL5:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 0446     		mov	r4, r0
2299:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2300:..\FreeRTOS/queue.c **** 
2301:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
  70              		.loc 1 2301 0
  71 0004 FFF7FEFF 		bl	vPortEnterCritical
  72              	.LVL6:
2302:..\FreeRTOS/queue.c **** 	{
2303:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  73              		.loc 1 2303 0
  74 0008 A26B     		ldr	r2, [r4, #56]
  75 000a E36B     		ldr	r3, [r4, #60]
  76 000c 9A42     		cmp	r2, r3
  77 000e 01D1     		bne	.L6
2304:..\FreeRTOS/queue.c **** 		{
2305:..\FreeRTOS/queue.c **** 			xReturn = pdTRUE;
  78              		.loc 1 2305 0
  79 0010 0124     		movs	r4, #1
  80              	.LVL7:
  81 0012 00E0     		b	.L5
  82              	.LVL8:
  83              	.L6:
2306:..\FreeRTOS/queue.c **** 		}
2307:..\FreeRTOS/queue.c **** 		else
2308:..\FreeRTOS/queue.c **** 		{
2309:..\FreeRTOS/queue.c **** 			xReturn = pdFALSE;
  84              		.loc 1 2309 0
  85 0014 0024     		movs	r4, #0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 43


  86              	.LVL9:
  87              	.L5:
2310:..\FreeRTOS/queue.c **** 		}
2311:..\FreeRTOS/queue.c **** 	}
2312:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
  88              		.loc 1 2312 0
  89 0016 FFF7FEFF 		bl	vPortExitCritical
  90              	.LVL10:
2313:..\FreeRTOS/queue.c **** 
2314:..\FreeRTOS/queue.c **** 	return xReturn;
2315:..\FreeRTOS/queue.c **** }
  91              		.loc 1 2315 0
  92 001a 2046     		mov	r0, r4
  93 001c 10BD     		pop	{r4, pc}
  94              		.cfi_endproc
  95              	.LFE95:
  96              		.size	prvIsQueueFull, .-prvIsQueueFull
  97 001e 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
  98              		.align	2
  99              		.thumb
 100              		.thumb_func
 101              		.type	prvIsQueueEmpty, %function
 102              	prvIsQueueEmpty:
 103              	.LFB93:
2259:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 104              		.loc 1 2259 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              	.LVL11:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 0446     		mov	r4, r0
2262:..\FreeRTOS/queue.c **** 	{
 114              		.loc 1 2262 0
 115 0004 FFF7FEFF 		bl	vPortEnterCritical
 116              	.LVL12:
2264:..\FreeRTOS/queue.c **** 		{
 117              		.loc 1 2264 0
 118 0008 A36B     		ldr	r3, [r4, #56]
 119 000a 0BB9     		cbnz	r3, .L10
2266:..\FreeRTOS/queue.c **** 		}
 120              		.loc 1 2266 0
 121 000c 0124     		movs	r4, #1
 122              	.LVL13:
 123 000e 00E0     		b	.L9
 124              	.LVL14:
 125              	.L10:
2270:..\FreeRTOS/queue.c **** 		}
 126              		.loc 1 2270 0
 127 0010 0024     		movs	r4, #0
 128              	.LVL15:
 129              	.L9:
2273:..\FreeRTOS/queue.c **** 
 130              		.loc 1 2273 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 44


 131 0012 FFF7FEFF 		bl	vPortExitCritical
 132              	.LVL16:
2276:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 133              		.loc 1 2276 0
 134 0016 2046     		mov	r0, r4
 135 0018 10BD     		pop	{r4, pc}
 136              		.cfi_endproc
 137              	.LFE93:
 138              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 139 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 140              		.align	2
 141              		.thumb
 142              		.thumb_func
 143              		.type	prvCopyDataToQueue, %function
 144              	prvCopyDataToQueue:
 145              	.LFB90:
2042:..\FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
 146              		.loc 1 2042 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL17:
 151 0000 70B5     		push	{r4, r5, r6, lr}
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 4, -16
 154              		.cfi_offset 5, -12
 155              		.cfi_offset 6, -8
 156              		.cfi_offset 14, -4
 157 0002 0446     		mov	r4, r0
 158 0004 1646     		mov	r6, r2
 159              	.LVL18:
2048:..\FreeRTOS/queue.c **** 
 160              		.loc 1 2048 0
 161 0006 856B     		ldr	r5, [r0, #56]
 162              	.LVL19:
2050:..\FreeRTOS/queue.c **** 	{
 163              		.loc 1 2050 0
 164 0008 026C     		ldr	r2, [r0, #64]
 165              	.LVL20:
 166 000a 3AB9     		cbnz	r2, .L13
2054:..\FreeRTOS/queue.c **** 			{
 167              		.loc 1 2054 0
 168 000c 0368     		ldr	r3, [r0]
 169 000e 43BB     		cbnz	r3, .L17
2057:..\FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 170              		.loc 1 2057 0
 171 0010 4068     		ldr	r0, [r0, #4]
 172              	.LVL21:
 173 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 174              	.LVL22:
2058:..\FreeRTOS/queue.c **** 			}
 175              		.loc 1 2058 0
 176 0016 0023     		movs	r3, #0
 177 0018 6360     		str	r3, [r4, #4]
 178 001a 29E0     		b	.L14
 179              	.LVL23:
 180              	.L13:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 45


2067:..\FreeRTOS/queue.c **** 	{
 181              		.loc 1 2067 0
 182 001c 6EB9     		cbnz	r6, .L15
2069:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 183              		.loc 1 2069 0
 184 001e 8068     		ldr	r0, [r0, #8]
 185              	.LVL24:
 186 0020 FFF7FEFF 		bl	memcpy
 187              	.LVL25:
2070:..\FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 188              		.loc 1 2070 0
 189 0024 A268     		ldr	r2, [r4, #8]
 190 0026 236C     		ldr	r3, [r4, #64]
 191 0028 1344     		add	r3, r3, r2
 192 002a A360     		str	r3, [r4, #8]
2071:..\FreeRTOS/queue.c **** 		{
 193              		.loc 1 2071 0
 194 002c 6268     		ldr	r2, [r4, #4]
 195 002e 9342     		cmp	r3, r2
 196 0030 19D3     		bcc	.L18
2073:..\FreeRTOS/queue.c **** 		}
 197              		.loc 1 2073 0
 198 0032 2368     		ldr	r3, [r4]
 199 0034 A360     		str	r3, [r4, #8]
2043:..\FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 200              		.loc 1 2043 0
 201 0036 0020     		movs	r0, #0
 202 0038 1AE0     		b	.L14
 203              	.LVL26:
 204              	.L15:
2082:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 205              		.loc 1 2082 0
 206 003a C068     		ldr	r0, [r0, #12]
 207              	.LVL27:
 208 003c FFF7FEFF 		bl	memcpy
 209              	.LVL28:
2083:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 210              		.loc 1 2083 0
 211 0040 236C     		ldr	r3, [r4, #64]
 212 0042 5B42     		negs	r3, r3
 213 0044 E268     		ldr	r2, [r4, #12]
 214 0046 1A44     		add	r2, r2, r3
 215 0048 E260     		str	r2, [r4, #12]
2084:..\FreeRTOS/queue.c **** 		{
 216              		.loc 1 2084 0
 217 004a 2168     		ldr	r1, [r4]
 218 004c 8A42     		cmp	r2, r1
 219 004e 02D2     		bcs	.L16
2086:..\FreeRTOS/queue.c **** 		}
 220              		.loc 1 2086 0
 221 0050 6268     		ldr	r2, [r4, #4]
 222 0052 1344     		add	r3, r3, r2
 223 0054 E360     		str	r3, [r4, #12]
 224              	.L16:
2093:..\FreeRTOS/queue.c **** 		{
 225              		.loc 1 2093 0
 226 0056 022E     		cmp	r6, #2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 46


 227 0058 07D1     		bne	.L19
2095:..\FreeRTOS/queue.c **** 			{
 228              		.loc 1 2095 0
 229 005a 45B1     		cbz	r5, .L20
2101:..\FreeRTOS/queue.c **** 			}
 230              		.loc 1 2101 0
 231 005c 013D     		subs	r5, r5, #1
 232              	.LVL29:
2043:..\FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 233              		.loc 1 2043 0
 234 005e 0020     		movs	r0, #0
 235 0060 06E0     		b	.L14
 236              	.LVL30:
 237              	.L17:
 238 0062 0020     		movs	r0, #0
 239              	.LVL31:
 240 0064 04E0     		b	.L14
 241              	.LVL32:
 242              	.L18:
 243 0066 0020     		movs	r0, #0
 244 0068 02E0     		b	.L14
 245              	.L19:
 246 006a 0020     		movs	r0, #0
 247 006c 00E0     		b	.L14
 248              	.L20:
 249 006e 0020     		movs	r0, #0
 250              	.LVL33:
 251              	.L14:
2114:..\FreeRTOS/queue.c **** 
 252              		.loc 1 2114 0
 253 0070 0135     		adds	r5, r5, #1
 254              	.LVL34:
 255 0072 A563     		str	r5, [r4, #56]
2117:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 256              		.loc 1 2117 0
 257 0074 70BD     		pop	{r4, r5, r6, pc}
 258              		.cfi_endproc
 259              	.LFE90:
 260              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 261 0076 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 262              		.align	2
 263              		.thumb
 264              		.thumb_func
 265              		.type	prvCopyDataFromQueue, %function
 266              	prvCopyDataFromQueue:
 267              	.LFB91:
2121:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 268              		.loc 1 2121 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL35:
2122:..\FreeRTOS/queue.c **** 	{
 273              		.loc 1 2122 0
 274 0000 026C     		ldr	r2, [r0, #64]
 275 0002 72B1     		cbz	r2, .L26
2121:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 47


 276              		.loc 1 2121 0
 277 0004 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
2124:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 281              		.loc 1 2124 0
 282 0006 C368     		ldr	r3, [r0, #12]
 283 0008 1344     		add	r3, r3, r2
 284 000a C360     		str	r3, [r0, #12]
2125:..\FreeRTOS/queue.c **** 		{
 285              		.loc 1 2125 0
 286 000c 4468     		ldr	r4, [r0, #4]
 287 000e A342     		cmp	r3, r4
 288 0010 01D3     		bcc	.L24
2127:..\FreeRTOS/queue.c **** 		}
 289              		.loc 1 2127 0
 290 0012 0368     		ldr	r3, [r0]
 291 0014 C360     		str	r3, [r0, #12]
 292              	.L24:
 293 0016 0C46     		mov	r4, r1
2133:..\FreeRTOS/queue.c **** 	}
 294              		.loc 1 2133 0
 295 0018 C168     		ldr	r1, [r0, #12]
 296              	.LVL36:
 297 001a 2046     		mov	r0, r4
 298              	.LVL37:
 299 001c FFF7FEFF 		bl	memcpy
 300              	.LVL38:
 301 0020 10BD     		pop	{r4, pc}
 302              	.LVL39:
 303              	.L26:
 304              		.cfi_def_cfa_offset 0
 305              		.cfi_restore 4
 306              		.cfi_restore 14
 307 0022 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE91:
 310              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 311              		.section	.text.prvUnlockQueue,"ax",%progbits
 312              		.align	2
 313              		.thumb
 314              		.thumb_func
 315              		.type	prvUnlockQueue, %function
 316              	prvUnlockQueue:
 317              	.LFB92:
2139:..\FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 318              		.loc 1 2139 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              	.LVL40:
 323 0000 38B5     		push	{r3, r4, r5, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 3, -16
 326              		.cfi_offset 4, -12
 327              		.cfi_offset 5, -8
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 48


 328              		.cfi_offset 14, -4
 329 0002 0546     		mov	r5, r0
2146:..\FreeRTOS/queue.c **** 	{
 330              		.loc 1 2146 0
 331 0004 FFF7FEFF 		bl	vPortEnterCritical
 332              	.LVL41:
 333              	.LBB23:
2148:..\FreeRTOS/queue.c **** 
 334              		.loc 1 2148 0
 335 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 336 000c 64B2     		sxtb	r4, r4
 337              	.LVL42:
2151:..\FreeRTOS/queue.c **** 		{
 338              		.loc 1 2151 0
 339 000e 0AE0     		b	.L28
 340              	.L31:
2199:..\FreeRTOS/queue.c **** 				{
 341              		.loc 1 2199 0
 342 0010 6B6A     		ldr	r3, [r5, #36]
 343 0012 53B1     		cbz	r3, .L29
2201:..\FreeRTOS/queue.c **** 					{
 344              		.loc 1 2201 0
 345 0014 05F12400 		add	r0, r5, #36
 346 0018 FFF7FEFF 		bl	xTaskRemoveFromEventList
 347              	.LVL43:
 348 001c 08B1     		cbz	r0, .L30
2205:..\FreeRTOS/queue.c **** 					}
 349              		.loc 1 2205 0
 350 001e FFF7FEFF 		bl	vTaskMissedYield
 351              	.LVL44:
 352              	.L30:
2219:..\FreeRTOS/queue.c **** 		}
 353              		.loc 1 2219 0
 354 0022 013C     		subs	r4, r4, #1
 355              	.LVL45:
 356 0024 64B2     		sxtb	r4, r4
 357              	.LVL46:
 358              	.L28:
2151:..\FreeRTOS/queue.c **** 		{
 359              		.loc 1 2151 0
 360 0026 002C     		cmp	r4, #0
 361 0028 F2DC     		bgt	.L31
 362              	.L29:
2222:..\FreeRTOS/queue.c **** 	}
 363              		.loc 1 2222 0
 364 002a FF23     		movs	r3, #255
 365 002c 85F84530 		strb	r3, [r5, #69]
 366              	.LBE23:
2224:..\FreeRTOS/queue.c **** 
 367              		.loc 1 2224 0
 368 0030 FFF7FEFF 		bl	vPortExitCritical
 369              	.LVL47:
2227:..\FreeRTOS/queue.c **** 	{
 370              		.loc 1 2227 0
 371 0034 FFF7FEFF 		bl	vPortEnterCritical
 372              	.LVL48:
 373              	.LBB24:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 49


2229:..\FreeRTOS/queue.c **** 
 374              		.loc 1 2229 0
 375 0038 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 376              	.LVL49:
 377 003c 64B2     		sxtb	r4, r4
 378              	.LVL50:
2231:..\FreeRTOS/queue.c **** 		{
 379              		.loc 1 2231 0
 380 003e 0AE0     		b	.L32
 381              	.L35:
2233:..\FreeRTOS/queue.c **** 			{
 382              		.loc 1 2233 0
 383 0040 2B69     		ldr	r3, [r5, #16]
 384 0042 53B1     		cbz	r3, .L33
2235:..\FreeRTOS/queue.c **** 				{
 385              		.loc 1 2235 0
 386 0044 05F11000 		add	r0, r5, #16
 387 0048 FFF7FEFF 		bl	xTaskRemoveFromEventList
 388              	.LVL51:
 389 004c 08B1     		cbz	r0, .L34
2237:..\FreeRTOS/queue.c **** 				}
 390              		.loc 1 2237 0
 391 004e FFF7FEFF 		bl	vTaskMissedYield
 392              	.LVL52:
 393              	.L34:
2244:..\FreeRTOS/queue.c **** 			}
 394              		.loc 1 2244 0
 395 0052 013C     		subs	r4, r4, #1
 396              	.LVL53:
 397 0054 64B2     		sxtb	r4, r4
 398              	.LVL54:
 399              	.L32:
2231:..\FreeRTOS/queue.c **** 		{
 400              		.loc 1 2231 0
 401 0056 002C     		cmp	r4, #0
 402 0058 F2DC     		bgt	.L35
 403              	.L33:
2252:..\FreeRTOS/queue.c **** 	}
 404              		.loc 1 2252 0
 405 005a FF23     		movs	r3, #255
 406 005c 85F84430 		strb	r3, [r5, #68]
 407              	.LBE24:
2254:..\FreeRTOS/queue.c **** }
 408              		.loc 1 2254 0
 409 0060 FFF7FEFF 		bl	vPortExitCritical
 410              	.LVL55:
 411 0064 38BD     		pop	{r3, r4, r5, pc}
 412              		.cfi_endproc
 413              	.LFE92:
 414              		.size	prvUnlockQueue, .-prvUnlockQueue
 415 0066 00BF     		.section	.text.xQueueGenericReset,"ax",%progbits
 416              		.align	2
 417              		.global	xQueueGenericReset
 418              		.thumb
 419              		.thumb_func
 420              		.type	xQueueGenericReset, %function
 421              	xQueueGenericReset:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 50


 422              	.LFB69:
 249:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 423              		.loc 1 249 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL56:
 428 0000 38B5     		push	{r3, r4, r5, lr}
 429              		.cfi_def_cfa_offset 16
 430              		.cfi_offset 3, -16
 431              		.cfi_offset 4, -12
 432              		.cfi_offset 5, -8
 433              		.cfi_offset 14, -4
 434 0002 0446     		mov	r4, r0
 435 0004 0D46     		mov	r5, r1
 436              	.LVL57:
 254:..\FreeRTOS/queue.c **** 	{
 437              		.loc 1 254 0
 438 0006 FFF7FEFF 		bl	vPortEnterCritical
 439              	.LVL58:
 256:..\FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 440              		.loc 1 256 0
 441 000a 2168     		ldr	r1, [r4]
 442 000c E26B     		ldr	r2, [r4, #60]
 443 000e 236C     		ldr	r3, [r4, #64]
 444 0010 03FB0210 		mla	r0, r3, r2, r1
 445 0014 6060     		str	r0, [r4, #4]
 257:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 446              		.loc 1 257 0
 447 0016 0020     		movs	r0, #0
 448 0018 A063     		str	r0, [r4, #56]
 258:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 449              		.loc 1 258 0
 450 001a A160     		str	r1, [r4, #8]
 259:..\FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 451              		.loc 1 259 0
 452 001c 013A     		subs	r2, r2, #1
 453 001e 02FB0313 		mla	r3, r2, r3, r1
 454 0022 E360     		str	r3, [r4, #12]
 260:..\FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 455              		.loc 1 260 0
 456 0024 FF23     		movs	r3, #255
 457 0026 84F84430 		strb	r3, [r4, #68]
 261:..\FreeRTOS/queue.c **** 
 458              		.loc 1 261 0
 459 002a 84F84530 		strb	r3, [r4, #69]
 263:..\FreeRTOS/queue.c **** 		{
 460              		.loc 1 263 0
 461 002e 7DB9     		cbnz	r5, .L38
 270:..\FreeRTOS/queue.c **** 			{
 462              		.loc 1 270 0
 463 0030 2369     		ldr	r3, [r4, #16]
 464 0032 ABB1     		cbz	r3, .L39
 272:..\FreeRTOS/queue.c **** 				{
 465              		.loc 1 272 0
 466 0034 04F11000 		add	r0, r4, #16
 467 0038 FFF7FEFF 		bl	xTaskRemoveFromEventList
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 51


 468              	.LVL59:
 469 003c 80B1     		cbz	r0, .L39
 274:..\FreeRTOS/queue.c **** 				}
 470              		.loc 1 274 0
 471 003e 4FF08052 		mov	r2, #268435456
 472 0042 094B     		ldr	r3, .L41
 473 0044 1A60     		str	r2, [r3]
 474              		.syntax unified
 475              	@ 274 "..\FreeRTOS\queue.c" 1
 476 0046 BFF34F8F 		dsb
 477              	@ 0 "" 2
 478              	@ 274 "..\FreeRTOS\queue.c" 1
 479 004a BFF36F8F 		isb
 480              	@ 0 "" 2
 481              		.thumb
 482              		.syntax unified
 483 004e 07E0     		b	.L39
 484              	.L38:
 289:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 485              		.loc 1 289 0
 486 0050 04F11000 		add	r0, r4, #16
 487 0054 FFF7FEFF 		bl	vListInitialise
 488              	.LVL60:
 290:..\FreeRTOS/queue.c **** 		}
 489              		.loc 1 290 0
 490 0058 04F12400 		add	r0, r4, #36
 491 005c FFF7FEFF 		bl	vListInitialise
 492              	.LVL61:
 493              	.L39:
 293:..\FreeRTOS/queue.c **** 
 494              		.loc 1 293 0
 495 0060 FFF7FEFF 		bl	vPortExitCritical
 496              	.LVL62:
 298:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 497              		.loc 1 298 0
 498 0064 0120     		movs	r0, #1
 499 0066 38BD     		pop	{r3, r4, r5, pc}
 500              	.LVL63:
 501              	.L42:
 502              		.align	2
 503              	.L41:
 504 0068 04ED00E0 		.word	-536810236
 505              		.cfi_endproc
 506              	.LFE69:
 507              		.size	xQueueGenericReset, .-xQueueGenericReset
 508              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 509              		.align	2
 510              		.thumb
 511              		.thumb_func
 512              		.type	prvInitialiseNewQueue, %function
 513              	prvInitialiseNewQueue:
 514              	.LFB71:
 410:..\FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 515              		.loc 1 410 0
 516              		.cfi_startproc
 517              		@ args = 4, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 52


 519              	.LVL64:
 520 0000 10B5     		push	{r4, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 4, -8
 523              		.cfi_offset 14, -4
 524 0002 029B     		ldr	r3, [sp, #8]
 525              	.LVL65:
 415:..\FreeRTOS/queue.c **** 	{
 526              		.loc 1 415 0
 527 0004 0C46     		mov	r4, r1
 528 0006 09B9     		cbnz	r1, .L44
 421:..\FreeRTOS/queue.c **** 	}
 529              		.loc 1 421 0
 530 0008 1B60     		str	r3, [r3]
 531 000a 00E0     		b	.L45
 532              	.L44:
 426:..\FreeRTOS/queue.c **** 	}
 533              		.loc 1 426 0
 534 000c 1A60     		str	r2, [r3]
 535              	.L45:
 431:..\FreeRTOS/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 536              		.loc 1 431 0
 537 000e D863     		str	r0, [r3, #60]
 432:..\FreeRTOS/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 538              		.loc 1 432 0
 539 0010 1C64     		str	r4, [r3, #64]
 433:..\FreeRTOS/queue.c **** 
 540              		.loc 1 433 0
 541 0012 0121     		movs	r1, #1
 542              	.LVL66:
 543 0014 1846     		mov	r0, r3
 544              	.LVL67:
 545 0016 FFF7FEFF 		bl	xQueueGenericReset
 546              	.LVL68:
 547 001a 10BD     		pop	{r4, pc}
 548              		.cfi_endproc
 549              	.LFE71:
 550              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 551              		.section	.text.xQueueGenericCreate,"ax",%progbits
 552              		.align	2
 553              		.global	xQueueGenericCreate
 554              		.thumb
 555              		.thumb_func
 556              		.type	xQueueGenericCreate, %function
 557              	xQueueGenericCreate:
 558              	.LFB70:
 360:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 559              		.loc 1 360 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              	.LVL69:
 564 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 565              		.cfi_def_cfa_offset 20
 566              		.cfi_offset 4, -20
 567              		.cfi_offset 5, -16
 568              		.cfi_offset 6, -12
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 53


 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              		.cfi_def_cfa_offset 32
 573 0004 0546     		mov	r5, r0
 574 0006 1746     		mov	r7, r2
 367:..\FreeRTOS/queue.c **** 		{
 575              		.loc 1 367 0
 576 0008 0E46     		mov	r6, r1
 577 000a 11B1     		cbz	r1, .L50
 376:..\FreeRTOS/queue.c **** 		}
 578              		.loc 1 376 0
 579 000c 00FB01F0 		mul	r0, r0, r1
 580              	.LVL70:
 581 0010 00E0     		b	.L48
 582              	.LVL71:
 583              	.L50:
 370:..\FreeRTOS/queue.c **** 		}
 584              		.loc 1 370 0
 585 0012 0020     		movs	r0, #0
 586              	.LVL72:
 587              	.L48:
 379:..\FreeRTOS/queue.c **** 
 588              		.loc 1 379 0
 589 0014 4830     		adds	r0, r0, #72
 590              	.LVL73:
 591 0016 FFF7FEFF 		bl	pvPortMalloc
 592              	.LVL74:
 381:..\FreeRTOS/queue.c **** 		{
 593              		.loc 1 381 0
 594 001a 0446     		mov	r4, r0
 595 001c 38B1     		cbz	r0, .L49
 596              	.LVL75:
 396:..\FreeRTOS/queue.c **** 		}
 597              		.loc 1 396 0
 598 001e 0090     		str	r0, [sp]
 599 0020 3B46     		mov	r3, r7
 600 0022 00F14802 		add	r2, r0, #72
 601              	.LVL76:
 602 0026 3146     		mov	r1, r6
 603 0028 2846     		mov	r0, r5
 604              	.LVL77:
 605 002a FFF7FEFF 		bl	prvInitialiseNewQueue
 606              	.LVL78:
 607              	.L49:
 404:..\FreeRTOS/queue.c **** 
 608              		.loc 1 404 0
 609 002e 2046     		mov	r0, r4
 610 0030 03B0     		add	sp, sp, #12
 611              		.cfi_def_cfa_offset 20
 612              		@ sp needed
 613 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 614              		.cfi_endproc
 615              	.LFE70:
 616              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 617              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 618              		.align	2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 54


 619              		.global	xQueueCreateCountingSemaphore
 620              		.thumb
 621              		.thumb_func
 622              		.type	xQueueCreateCountingSemaphore, %function
 623              	xQueueCreateCountingSemaphore:
 624              	.LFB76:
 701:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 625              		.loc 1 701 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              	.LVL79:
 630 0000 10B5     		push	{r4, lr}
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 4, -8
 633              		.cfi_offset 14, -4
 634 0002 0C46     		mov	r4, r1
 707:..\FreeRTOS/queue.c **** 
 635              		.loc 1 707 0
 636 0004 0222     		movs	r2, #2
 637 0006 0021     		movs	r1, #0
 638              	.LVL80:
 639 0008 FFF7FEFF 		bl	xQueueGenericCreate
 640              	.LVL81:
 709:..\FreeRTOS/queue.c **** 		{
 641              		.loc 1 709 0
 642 000c 0346     		mov	r3, r0
 643 000e 00B1     		cbz	r0, .L53
 711:..\FreeRTOS/queue.c **** 
 644              		.loc 1 711 0
 645 0010 8463     		str	r4, [r0, #56]
 646              	.L53:
 721:..\FreeRTOS/queue.c **** 
 647              		.loc 1 721 0
 648 0012 1846     		mov	r0, r3
 649              	.LVL82:
 650 0014 10BD     		pop	{r4, pc}
 651              		.cfi_endproc
 652              	.LFE76:
 653              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 654 0016 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 655              		.align	2
 656              		.global	xQueueGenericSend
 657              		.thumb
 658              		.thumb_func
 659              		.type	xQueueGenericSend, %function
 660              	xQueueGenericSend:
 661              	.LFB77:
 727:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 662              		.loc 1 727 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 16
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              	.LVL83:
 667 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 668              		.cfi_def_cfa_offset 20
 669              		.cfi_offset 4, -20
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 55


 670              		.cfi_offset 5, -16
 671              		.cfi_offset 6, -12
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 85B0     		sub	sp, sp, #20
 675              		.cfi_def_cfa_offset 40
 676 0004 0446     		mov	r4, r0
 677 0006 0F46     		mov	r7, r1
 678 0008 0192     		str	r2, [sp, #4]
 679 000a 1E46     		mov	r6, r3
 680              	.LVL84:
 728:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 681              		.loc 1 728 0
 682 000c 0025     		movs	r5, #0
 683              	.LVL85:
 684              	.L56:
 747:..\FreeRTOS/queue.c **** 		{
 685              		.loc 1 747 0
 686 000e FFF7FEFF 		bl	vPortEnterCritical
 687              	.LVL86:
 753:..\FreeRTOS/queue.c **** 			{
 688              		.loc 1 753 0
 689 0012 A26B     		ldr	r2, [r4, #56]
 690 0014 E36B     		ldr	r3, [r4, #60]
 691 0016 9A42     		cmp	r2, r3
 692 0018 01D3     		bcc	.L57
 753:..\FreeRTOS/queue.c **** 			{
 693              		.loc 1 753 0 is_stmt 0 discriminator 1
 694 001a 022E     		cmp	r6, #2
 695 001c 21D1     		bne	.L58
 696              	.L57:
 756:..\FreeRTOS/queue.c **** 
 697              		.loc 1 756 0 is_stmt 1
 698 001e 3246     		mov	r2, r6
 699 0020 3946     		mov	r1, r7
 700 0022 2046     		mov	r0, r4
 701 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 702              	.LVL87:
 811:..\FreeRTOS/queue.c **** 					{
 703              		.loc 1 811 0
 704 0028 636A     		ldr	r3, [r4, #36]
 705 002a 6BB1     		cbz	r3, .L59
 813:..\FreeRTOS/queue.c **** 						{
 706              		.loc 1 813 0
 707 002c 04F12400 		add	r0, r4, #36
 708              	.LVL88:
 709 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 710              	.LVL89:
 711 0034 88B1     		cbz	r0, .L60
 819:..\FreeRTOS/queue.c **** 						}
 712              		.loc 1 819 0
 713 0036 4FF08052 		mov	r2, #268435456
 714 003a 324B     		ldr	r3, .L70
 715 003c 1A60     		str	r2, [r3]
 716              		.syntax unified
 717              	@ 819 "..\FreeRTOS\queue.c" 1
 718 003e BFF34F8F 		dsb
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 56


 719              	@ 0 "" 2
 720              	@ 819 "..\FreeRTOS\queue.c" 1
 721 0042 BFF36F8F 		isb
 722              	@ 0 "" 2
 723              		.thumb
 724              		.syntax unified
 725 0046 08E0     		b	.L60
 726              	.LVL90:
 727              	.L59:
 826:..\FreeRTOS/queue.c **** 					{
 728              		.loc 1 826 0
 729 0048 38B1     		cbz	r0, .L60
 832:..\FreeRTOS/queue.c **** 					}
 730              		.loc 1 832 0
 731 004a 4FF08052 		mov	r2, #268435456
 732 004e 2D4B     		ldr	r3, .L70
 733 0050 1A60     		str	r2, [r3]
 734              		.syntax unified
 735              	@ 832 "..\FreeRTOS\queue.c" 1
 736 0052 BFF34F8F 		dsb
 737              	@ 0 "" 2
 738              	@ 832 "..\FreeRTOS\queue.c" 1
 739 0056 BFF36F8F 		isb
 740              	@ 0 "" 2
 741              	.LVL91:
 742              		.thumb
 743              		.syntax unified
 744              	.L60:
 841:..\FreeRTOS/queue.c **** 				return pdPASS;
 745              		.loc 1 841 0
 746 005a FFF7FEFF 		bl	vPortExitCritical
 747              	.LVL92:
 842:..\FreeRTOS/queue.c **** 			}
 748              		.loc 1 842 0
 749 005e 0120     		movs	r0, #1
 750 0060 4EE0     		b	.L61
 751              	.L58:
 846:..\FreeRTOS/queue.c **** 				{
 752              		.loc 1 846 0
 753 0062 019B     		ldr	r3, [sp, #4]
 754 0064 1BB9     		cbnz	r3, .L62
 850:..\FreeRTOS/queue.c **** 
 755              		.loc 1 850 0
 756 0066 FFF7FEFF 		bl	vPortExitCritical
 757              	.LVL93:
 855:..\FreeRTOS/queue.c **** 				}
 758              		.loc 1 855 0
 759 006a 0020     		movs	r0, #0
 760 006c 48E0     		b	.L61
 761              	.L62:
 857:..\FreeRTOS/queue.c **** 				{
 762              		.loc 1 857 0
 763 006e 1DB9     		cbnz	r5, .L63
 861:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 764              		.loc 1 861 0
 765 0070 02A8     		add	r0, sp, #8
 766 0072 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 57


 767              	.LVL94:
 862:..\FreeRTOS/queue.c **** 				}
 768              		.loc 1 862 0
 769 0076 0125     		movs	r5, #1
 770              	.LVL95:
 771              	.L63:
 871:..\FreeRTOS/queue.c **** 
 772              		.loc 1 871 0
 773 0078 FFF7FEFF 		bl	vPortExitCritical
 774              	.LVL96:
 876:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 775              		.loc 1 876 0
 776 007c FFF7FEFF 		bl	vTaskSuspendAll
 777              	.LVL97:
 877:..\FreeRTOS/queue.c **** 
 778              		.loc 1 877 0
 779 0080 FFF7FEFF 		bl	vPortEnterCritical
 780              	.LVL98:
 781 0084 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 782 0088 5BB2     		sxtb	r3, r3
 783 008a B3F1FF3F 		cmp	r3, #-1
 784 008e 02D1     		bne	.L64
 877:..\FreeRTOS/queue.c **** 
 785              		.loc 1 877 0 is_stmt 0 discriminator 1
 786 0090 0023     		movs	r3, #0
 787 0092 84F84430 		strb	r3, [r4, #68]
 788              	.L64:
 877:..\FreeRTOS/queue.c **** 
 789              		.loc 1 877 0 discriminator 3
 790 0096 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 791 009a 5BB2     		sxtb	r3, r3
 792 009c B3F1FF3F 		cmp	r3, #-1
 793 00a0 02D1     		bne	.L65
 877:..\FreeRTOS/queue.c **** 
 794              		.loc 1 877 0 discriminator 4
 795 00a2 0023     		movs	r3, #0
 796 00a4 84F84530 		strb	r3, [r4, #69]
 797              	.L65:
 877:..\FreeRTOS/queue.c **** 
 798              		.loc 1 877 0 discriminator 6
 799 00a8 FFF7FEFF 		bl	vPortExitCritical
 800              	.LVL99:
 880:..\FreeRTOS/queue.c **** 		{
 801              		.loc 1 880 0 is_stmt 1 discriminator 6
 802 00ac 01A9     		add	r1, sp, #4
 803              	.LVL100:
 804 00ae 02A8     		add	r0, sp, #8
 805 00b0 FFF7FEFF 		bl	xTaskCheckForTimeOut
 806              	.LVL101:
 807 00b4 F0B9     		cbnz	r0, .L66
 882:..\FreeRTOS/queue.c **** 			{
 808              		.loc 1 882 0
 809 00b6 2046     		mov	r0, r4
 810 00b8 FFF7FEFF 		bl	prvIsQueueFull
 811              	.LVL102:
 812 00bc A0B1     		cbz	r0, .L67
 885:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 58


 813              		.loc 1 885 0
 814 00be 0199     		ldr	r1, [sp, #4]
 815 00c0 04F11000 		add	r0, r4, #16
 816 00c4 FFF7FEFF 		bl	vTaskPlaceOnEventList
 817              	.LVL103:
 892:..\FreeRTOS/queue.c **** 
 818              		.loc 1 892 0
 819 00c8 2046     		mov	r0, r4
 820 00ca FFF7FEFF 		bl	prvUnlockQueue
 821              	.LVL104:
 899:..\FreeRTOS/queue.c **** 				{
 822              		.loc 1 899 0
 823 00ce FFF7FEFF 		bl	xTaskResumeAll
 824              	.LVL105:
 825 00d2 0028     		cmp	r0, #0
 826 00d4 9BD1     		bne	.L56
 901:..\FreeRTOS/queue.c **** 				}
 827              		.loc 1 901 0
 828 00d6 4FF08052 		mov	r2, #268435456
 829 00da 0A4B     		ldr	r3, .L70
 830 00dc 1A60     		str	r2, [r3]
 831              		.syntax unified
 832              	@ 901 "..\FreeRTOS\queue.c" 1
 833 00de BFF34F8F 		dsb
 834              	@ 0 "" 2
 835              	@ 901 "..\FreeRTOS\queue.c" 1
 836 00e2 BFF36F8F 		isb
 837              	@ 0 "" 2
 838              		.thumb
 839              		.syntax unified
 840 00e6 92E7     		b	.L56
 841              	.L67:
 907:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 842              		.loc 1 907 0
 843 00e8 2046     		mov	r0, r4
 844 00ea FFF7FEFF 		bl	prvUnlockQueue
 845              	.LVL106:
 908:..\FreeRTOS/queue.c **** 			}
 846              		.loc 1 908 0
 847 00ee FFF7FEFF 		bl	xTaskResumeAll
 848              	.LVL107:
 849 00f2 8CE7     		b	.L56
 850              	.L66:
 914:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 851              		.loc 1 914 0
 852 00f4 2046     		mov	r0, r4
 853 00f6 FFF7FEFF 		bl	prvUnlockQueue
 854              	.LVL108:
 915:..\FreeRTOS/queue.c **** 
 855              		.loc 1 915 0
 856 00fa FFF7FEFF 		bl	xTaskResumeAll
 857              	.LVL109:
 918:..\FreeRTOS/queue.c **** 		}
 858              		.loc 1 918 0
 859 00fe 0020     		movs	r0, #0
 860              	.L61:
 921:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 59


 861              		.loc 1 921 0
 862 0100 05B0     		add	sp, sp, #20
 863              		.cfi_def_cfa_offset 20
 864              		@ sp needed
 865 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 866              	.LVL110:
 867              	.L71:
 868              		.align	2
 869              	.L70:
 870 0104 04ED00E0 		.word	-536810236
 871              		.cfi_endproc
 872              	.LFE77:
 873              		.size	xQueueGenericSend, .-xQueueGenericSend
 874              		.section	.text.prvInitialiseMutex,"ax",%progbits
 875              		.align	2
 876              		.thumb
 877              		.thumb_func
 878              		.type	prvInitialiseMutex, %function
 879              	prvInitialiseMutex:
 880              	.LFB72:
 454:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 881              		.loc 1 454 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL111:
 455:..\FreeRTOS/queue.c **** 		{
 886              		.loc 1 455 0
 887 0000 48B1     		cbz	r0, .L75
 454:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 888              		.loc 1 454 0
 889 0002 08B5     		push	{r3, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 3, -8
 892              		.cfi_offset 14, -4
 461:..\FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 893              		.loc 1 461 0
 894 0004 0021     		movs	r1, #0
 895 0006 4160     		str	r1, [r0, #4]
 462:..\FreeRTOS/queue.c **** 
 896              		.loc 1 462 0
 897 0008 0160     		str	r1, [r0]
 465:..\FreeRTOS/queue.c **** 
 898              		.loc 1 465 0
 899 000a C160     		str	r1, [r0, #12]
 470:..\FreeRTOS/queue.c **** 		}
 900              		.loc 1 470 0
 901 000c 0B46     		mov	r3, r1
 902 000e 0A46     		mov	r2, r1
 903 0010 FFF7FEFF 		bl	xQueueGenericSend
 904              	.LVL112:
 905 0014 08BD     		pop	{r3, pc}
 906              	.LVL113:
 907              	.L75:
 908              		.cfi_def_cfa_offset 0
 909              		.cfi_restore 3
 910              		.cfi_restore 14
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 60


 911 0016 7047     		bx	lr
 912              		.cfi_endproc
 913              	.LFE72:
 914              		.size	prvInitialiseMutex, .-prvInitialiseMutex
 915              		.section	.text.xQueueCreateMutex,"ax",%progbits
 916              		.align	2
 917              		.global	xQueueCreateMutex
 918              		.thumb
 919              		.thumb_func
 920              		.type	xQueueCreateMutex, %function
 921              	xQueueCreateMutex:
 922              	.LFB73:
 484:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 923              		.loc 1 484 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              	.LVL114:
 928 0000 10B5     		push	{r4, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 4, -8
 931              		.cfi_offset 14, -4
 932              	.LVL115:
 488:..\FreeRTOS/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 933              		.loc 1 488 0
 934 0002 0246     		mov	r2, r0
 935 0004 0021     		movs	r1, #0
 936 0006 0120     		movs	r0, #1
 937              	.LVL116:
 938 0008 FFF7FEFF 		bl	xQueueGenericCreate
 939              	.LVL117:
 940 000c 0446     		mov	r4, r0
 941              	.LVL118:
 489:..\FreeRTOS/queue.c **** 
 942              		.loc 1 489 0
 943 000e FFF7FEFF 		bl	prvInitialiseMutex
 944              	.LVL119:
 492:..\FreeRTOS/queue.c **** 
 945              		.loc 1 492 0
 946 0012 2046     		mov	r0, r4
 947 0014 10BD     		pop	{r4, pc}
 948              		.cfi_endproc
 949              	.LFE73:
 950              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 951 0016 00BF     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 952              		.align	2
 953              		.global	xQueueGiveMutexRecursive
 954              		.thumb
 955              		.thumb_func
 956              		.type	xQueueGiveMutexRecursive, %function
 957              	xQueueGiveMutexRecursive:
 958              	.LFB74:
 576:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 959              		.loc 1 576 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 61


 963              	.LVL120:
 964 0000 38B5     		push	{r3, r4, r5, lr}
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 3, -16
 967              		.cfi_offset 4, -12
 968              		.cfi_offset 5, -8
 969              		.cfi_offset 14, -4
 970 0002 0446     		mov	r4, r0
 971              	.LVL121:
 588:..\FreeRTOS/queue.c **** 		{
 972              		.loc 1 588 0
 973 0004 4568     		ldr	r5, [r0, #4]
 974 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 975              	.LVL122:
 976 000a 8542     		cmp	r5, r0
 977 000c 0AD1     		bne	.L80
 597:..\FreeRTOS/queue.c **** 
 978              		.loc 1 597 0
 979 000e E368     		ldr	r3, [r4, #12]
 980 0010 013B     		subs	r3, r3, #1
 981 0012 E360     		str	r3, [r4, #12]
 600:..\FreeRTOS/queue.c **** 			{
 982              		.loc 1 600 0
 983 0014 43B9     		cbnz	r3, .L81
 604:..\FreeRTOS/queue.c **** 			}
 984              		.loc 1 604 0
 985 0016 1A46     		mov	r2, r3
 986 0018 1946     		mov	r1, r3
 987 001a 2046     		mov	r0, r4
 988 001c FFF7FEFF 		bl	xQueueGenericSend
 989              	.LVL123:
 611:..\FreeRTOS/queue.c **** 		}
 990              		.loc 1 611 0
 991 0020 0120     		movs	r0, #1
 992 0022 38BD     		pop	{r3, r4, r5, pc}
 993              	.LVL124:
 994              	.L80:
 617:..\FreeRTOS/queue.c **** 
 995              		.loc 1 617 0
 996 0024 0020     		movs	r0, #0
 997 0026 38BD     		pop	{r3, r4, r5, pc}
 998              	.LVL125:
 999              	.L81:
 611:..\FreeRTOS/queue.c **** 		}
 1000              		.loc 1 611 0
 1001 0028 0120     		movs	r0, #1
 1002              	.LVL126:
 623:..\FreeRTOS/queue.c **** 
 1003              		.loc 1 623 0
 1004 002a 38BD     		pop	{r3, r4, r5, pc}
 1005              		.cfi_endproc
 1006              	.LFE74:
 1007              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 1008              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1009              		.align	2
 1010              		.global	xQueueGenericSendFromISR
 1011              		.thumb
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 62


 1012              		.thumb_func
 1013              		.type	xQueueGenericSendFromISR, %function
 1014              	xQueueGenericSendFromISR:
 1015              	.LFB78:
 925:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1016              		.loc 1 925 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              	.LVL127:
 1021 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1022              		.cfi_def_cfa_offset 24
 1023              		.cfi_offset 3, -24
 1024              		.cfi_offset 4, -20
 1025              		.cfi_offset 5, -16
 1026              		.cfi_offset 6, -12
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029              	.LVL128:
 1030              	.LBB25:
 1031              	.LBB26:
 1032              		.file 2 "..\\FreeRTOS\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.0
   3:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software. If you wish to use our Amazon
  14:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS name, please do so in a fair use way that does not cause confusion.
  15:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  16:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  23:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  24:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  25:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  26:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  27:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  */
  28:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdio.h>
  29:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdlib.h>
  30:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdint.h>
  31:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include <stdbool.h>
  32:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #include "projdefs.h"
  33:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  34:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  35:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 63


  36:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  37:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  38:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  39:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  40:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
  41:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  42:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  43:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  44:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  45:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  46:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  47:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *
  48:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  49:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  50:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h ****  */
  51:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  52:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  53:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** // Added by Airs
  54:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portALIGNMENT_ASSERT_pxCurrentTCB ( void )
  55:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  56:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  57:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  58:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  59:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  60:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  61:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  62:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  63:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  64:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  65:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  67:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  68:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  69:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  70:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  71:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  72:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  73:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #else
  74:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  75:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  76:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  77:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  78:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  79:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  80:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
  81:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  82:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  83:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  84:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  85:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  86:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  87:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  88:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
  89:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  90:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  91:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  92:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 64


  93:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  94:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  95:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  96:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  97:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  98:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  99:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 100:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 101:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 102:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 103:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 104:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 105:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 106:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 107:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
 108:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 109:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 110:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 111:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 112:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 113:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 114:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 115:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 116:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 117:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 118:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 119:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 120:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 121:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 122:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 123:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 124:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 125:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 126:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 127:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 128:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 129:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 130:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 131:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 132:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 133:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 134:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 135:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 136:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 137:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 139:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 140:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 141:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 142:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	{
 143:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 144:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 145:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 146:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 147:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	}
 148:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 65


 150:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 151:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 152:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 153:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 154:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 155:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 156:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 157:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 158:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 159:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 161:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 162:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 163:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 164:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 165:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 166:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 167:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 168:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 169:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 170:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 171:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 172:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 173:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 175:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 176:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 177:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 178:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** #endif
 179:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 180:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 181:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 182:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 183:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 184:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 185:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 186:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 187:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 188:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 189:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	{
 190:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 191:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	}
 192:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	else
 193:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	{
 194:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 195:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	}
 196:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 197:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 198:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 199:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 200:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 201:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 202:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 203:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 204:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 205:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 206:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 66


 207:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	(
 208:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 209:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 210:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 211:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 212:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 213:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	);
 214:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 215:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 216:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 217:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 218:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 219:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 220:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 221:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 222:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1033              		.loc 2 222 0
 1034              		.syntax unified
 1035              	@ 222 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 1036 0002 EFF31186 			mrs r6, basepri											
 1037 0006 4FF0A004 		mov r4, #160												
 1038 000a 84F31188 		msr basepri, r4											
 1039 000e BFF36F8F 		isb														
 1040 0012 BFF34F8F 		dsb														
 1041              	
 1042              	@ 0 "" 2
 1043              		.thumb
 1044              		.syntax unified
 1045              	.LBE26:
 1046              	.LBE25:
 957:..\FreeRTOS/queue.c **** 		{
 1047              		.loc 1 957 0
 1048 0016 856B     		ldr	r5, [r0, #56]
 1049 0018 C46B     		ldr	r4, [r0, #60]
 1050 001a A542     		cmp	r5, r4
 1051 001c 01D3     		bcc	.L84
 957:..\FreeRTOS/queue.c **** 		{
 1052              		.loc 1 957 0 is_stmt 0 discriminator 1
 1053 001e 022B     		cmp	r3, #2
 1054 0020 1BD1     		bne	.L87
 1055              	.L84:
 1056 0022 1746     		mov	r7, r2
 1057 0024 0546     		mov	r5, r0
 1058              	.LBB27:
 959:..\FreeRTOS/queue.c **** 
 1059              		.loc 1 959 0 is_stmt 1
 1060 0026 90F84540 		ldrb	r4, [r0, #69]	@ zero_extendqisi2
 1061 002a 64B2     		sxtb	r4, r4
 1062              	.LVL129:
 968:..\FreeRTOS/queue.c **** 
 1063              		.loc 1 968 0
 1064 002c 1A46     		mov	r2, r3
 1065              	.LVL130:
 1066 002e FFF7FEFF 		bl	prvCopyDataToQueue
 1067              	.LVL131:
 972:..\FreeRTOS/queue.c **** 			{
 1068              		.loc 1 972 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 67


 1069 0032 B4F1FF3F 		cmp	r4, #-1
 1070 0036 0AD1     		bne	.L86
1027:..\FreeRTOS/queue.c **** 					{
 1071              		.loc 1 1027 0
 1072 0038 6B6A     		ldr	r3, [r5, #36]
 1073 003a 83B1     		cbz	r3, .L88
1029:..\FreeRTOS/queue.c **** 						{
 1074              		.loc 1 1029 0
 1075 003c 05F12400 		add	r0, r5, #36
 1076 0040 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1077              	.LVL132:
 1078 0044 68B1     		cbz	r0, .L89
1033:..\FreeRTOS/queue.c **** 							{
 1079              		.loc 1 1033 0
 1080 0046 77B1     		cbz	r7, .L90
1035:..\FreeRTOS/queue.c **** 							}
 1081              		.loc 1 1035 0
 1082 0048 0120     		movs	r0, #1
 1083 004a 3860     		str	r0, [r7]
 1084 004c 0CE0     		b	.L85
 1085              	.L86:
1058:..\FreeRTOS/queue.c **** 			}
 1086              		.loc 1 1058 0
 1087 004e 0134     		adds	r4, r4, #1
 1088              	.LVL133:
 1089 0050 64B2     		sxtb	r4, r4
 1090              	.LVL134:
 1091 0052 85F84540 		strb	r4, [r5, #69]
1061:..\FreeRTOS/queue.c **** 		}
 1092              		.loc 1 1061 0
 1093 0056 0120     		movs	r0, #1
 1094 0058 06E0     		b	.L85
 1095              	.LVL135:
 1096              	.L87:
 1097              	.LBE27:
1066:..\FreeRTOS/queue.c **** 		}
 1098              		.loc 1 1066 0
 1099 005a 0020     		movs	r0, #0
 1100              	.LVL136:
 1101 005c 04E0     		b	.L85
 1102              	.LVL137:
 1103              	.L88:
 1104              	.LBB28:
1061:..\FreeRTOS/queue.c **** 		}
 1105              		.loc 1 1061 0
 1106 005e 0120     		movs	r0, #1
 1107 0060 02E0     		b	.L85
 1108              	.L89:
 1109 0062 0120     		movs	r0, #1
 1110 0064 00E0     		b	.L85
 1111              	.L90:
 1112 0066 0120     		movs	r0, #1
 1113              	.LVL138:
 1114              	.L85:
 1115              	.LBE28:
 1116              	.LBB29:
 1117              	.LBB30:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 68


 223:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	(
 224:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 225:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 226:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 227:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 228:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 229:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 230:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	);
 231:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 232:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 233:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 234:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 235:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** }
 236:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 237:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 
 238:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 239:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** {
 240:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1118              		.loc 2 240 0
 1119              		.syntax unified
 1120              	@ 240 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 1121 0068 86F31188 			msr basepri, r6	
 1122              	@ 0 "" 2
 1123              	.LVL139:
 1124              		.thumb
 1125              		.syntax unified
 1126              	.LBE30:
 1127              	.LBE29:
1072:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1128              		.loc 1 1072 0
 1129 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1130              		.cfi_endproc
 1131              	.LFE78:
 1132              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1133 006e 00BF     		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1134              		.align	2
 1135              		.global	xQueueGiveFromISR
 1136              		.thumb
 1137              		.thumb_func
 1138              		.type	xQueueGiveFromISR, %function
 1139              	xQueueGiveFromISR:
 1140              	.LFB79:
1076:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1141              		.loc 1 1076 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL140:
 1146 0000 38B5     		push	{r3, r4, r5, lr}
 1147              		.cfi_def_cfa_offset 16
 1148              		.cfi_offset 3, -16
 1149              		.cfi_offset 4, -12
 1150              		.cfi_offset 5, -8
 1151              		.cfi_offset 14, -4
 1152              	.LVL141:
 1153              	.LBB31:
 1154              	.LBB32:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 69


 222:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1155              		.loc 2 222 0
 1156              		.syntax unified
 1157              	@ 222 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 1158 0002 EFF31184 			mrs r4, basepri											
 1159 0006 4FF0A003 		mov r3, #160												
 1160 000a 83F31188 		msr basepri, r3											
 1161 000e BFF36F8F 		isb														
 1162 0012 BFF34F8F 		dsb														
 1163              	
 1164              	@ 0 "" 2
 1165              		.thumb
 1166              		.syntax unified
 1167              	.LBE32:
 1168              	.LBE31:
 1169              	.LBB33:
1116:..\FreeRTOS/queue.c **** 
 1170              		.loc 1 1116 0
 1171 0016 826B     		ldr	r2, [r0, #56]
 1172              	.LVL142:
1121:..\FreeRTOS/queue.c **** 		{
 1173              		.loc 1 1121 0
 1174 0018 C36B     		ldr	r3, [r0, #60]
 1175 001a 9A42     		cmp	r2, r3
 1176 001c 18D2     		bcs	.L95
 1177              	.LBB34:
1123:..\FreeRTOS/queue.c **** 
 1178              		.loc 1 1123 0
 1179 001e 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 1180 0022 5BB2     		sxtb	r3, r3
 1181              	.LVL143:
1133:..\FreeRTOS/queue.c **** 
 1182              		.loc 1 1133 0
 1183 0024 0132     		adds	r2, r2, #1
 1184              	.LVL144:
 1185 0026 8263     		str	r2, [r0, #56]
1137:..\FreeRTOS/queue.c **** 			{
 1186              		.loc 1 1137 0
 1187 0028 B3F1FF3F 		cmp	r3, #-1
 1188 002c 0AD1     		bne	.L94
1192:..\FreeRTOS/queue.c **** 					{
 1189              		.loc 1 1192 0
 1190 002e 436A     		ldr	r3, [r0, #36]
 1191              	.LVL145:
 1192 0030 83B1     		cbz	r3, .L96
 1193 0032 0D46     		mov	r5, r1
1194:..\FreeRTOS/queue.c **** 						{
 1194              		.loc 1 1194 0
 1195 0034 2430     		adds	r0, r0, #36
 1196              	.LVL146:
 1197 0036 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1198              	.LVL147:
 1199 003a 68B1     		cbz	r0, .L97
1198:..\FreeRTOS/queue.c **** 							{
 1200              		.loc 1 1198 0
 1201 003c 75B1     		cbz	r5, .L98
1200:..\FreeRTOS/queue.c **** 							}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 70


 1202              		.loc 1 1200 0
 1203 003e 0120     		movs	r0, #1
 1204 0040 2860     		str	r0, [r5]
 1205 0042 0CE0     		b	.L93
 1206              	.LVL148:
 1207              	.L94:
1223:..\FreeRTOS/queue.c **** 			}
 1208              		.loc 1 1223 0
 1209 0044 0133     		adds	r3, r3, #1
 1210              	.LVL149:
 1211 0046 5BB2     		sxtb	r3, r3
 1212              	.LVL150:
 1213 0048 80F84530 		strb	r3, [r0, #69]
1226:..\FreeRTOS/queue.c **** 		}
 1214              		.loc 1 1226 0
 1215 004c 0120     		movs	r0, #1
 1216              	.LVL151:
 1217 004e 06E0     		b	.L93
 1218              	.LVL152:
 1219              	.L95:
 1220              	.LBE34:
1231:..\FreeRTOS/queue.c **** 		}
 1221              		.loc 1 1231 0
 1222 0050 0020     		movs	r0, #0
 1223              	.LVL153:
 1224 0052 04E0     		b	.L93
 1225              	.LVL154:
 1226              	.L96:
 1227              	.LBB35:
1226:..\FreeRTOS/queue.c **** 		}
 1228              		.loc 1 1226 0
 1229 0054 0120     		movs	r0, #1
 1230              	.LVL155:
 1231 0056 02E0     		b	.L93
 1232              	.LVL156:
 1233              	.L97:
 1234 0058 0120     		movs	r0, #1
 1235 005a 00E0     		b	.L93
 1236              	.L98:
 1237 005c 0120     		movs	r0, #1
 1238              	.LVL157:
 1239              	.L93:
 1240              	.LBE35:
 1241              	.LBE33:
 1242              	.LBB36:
 1243              	.LBB37:
 1244              		.loc 2 240 0
 1245              		.syntax unified
 1246              	@ 240 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 1247 005e 84F31188 			msr basepri, r4	
 1248              	@ 0 "" 2
 1249              	.LVL158:
 1250              		.thumb
 1251              		.syntax unified
 1252              	.LBE37:
 1253              	.LBE36:
1237:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 71


 1254              		.loc 1 1237 0
 1255 0062 38BD     		pop	{r3, r4, r5, pc}
 1256              		.cfi_endproc
 1257              	.LFE79:
 1258              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1259              		.section	.text.xQueueReceive,"ax",%progbits
 1260              		.align	2
 1261              		.global	xQueueReceive
 1262              		.thumb
 1263              		.thumb_func
 1264              		.type	xQueueReceive, %function
 1265              	xQueueReceive:
 1266              	.LFB80:
1241:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1267              		.loc 1 1241 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 16
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              	.LVL159:
 1272 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1273              		.cfi_def_cfa_offset 20
 1274              		.cfi_offset 4, -20
 1275              		.cfi_offset 5, -16
 1276              		.cfi_offset 6, -12
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 85B0     		sub	sp, sp, #20
 1280              		.cfi_def_cfa_offset 40
 1281 0004 0446     		mov	r4, r0
 1282 0006 0F46     		mov	r7, r1
 1283 0008 0192     		str	r2, [sp, #4]
 1284              	.LVL160:
1242:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 1285              		.loc 1 1242 0
 1286 000a 0026     		movs	r6, #0
 1287              	.LVL161:
 1288              	.L101:
1267:..\FreeRTOS/queue.c **** 		{
 1289              		.loc 1 1267 0
 1290 000c FFF7FEFF 		bl	vPortEnterCritical
 1291              	.LVL162:
 1292              	.LBB38:
1269:..\FreeRTOS/queue.c **** 
 1293              		.loc 1 1269 0
 1294 0010 A56B     		ldr	r5, [r4, #56]
 1295              	.LVL163:
1273:..\FreeRTOS/queue.c **** 			{
 1296              		.loc 1 1273 0
 1297 0012 C5B1     		cbz	r5, .L102
1276:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1298              		.loc 1 1276 0
 1299 0014 3946     		mov	r1, r7
 1300 0016 2046     		mov	r0, r4
 1301 0018 FFF7FEFF 		bl	prvCopyDataFromQueue
 1302              	.LVL164:
1278:..\FreeRTOS/queue.c **** 
 1303              		.loc 1 1278 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 72


 1304 001c 013D     		subs	r5, r5, #1
 1305              	.LVL165:
 1306 001e A563     		str	r5, [r4, #56]
1283:..\FreeRTOS/queue.c **** 				{
 1307              		.loc 1 1283 0
 1308 0020 2369     		ldr	r3, [r4, #16]
 1309 0022 63B1     		cbz	r3, .L103
1285:..\FreeRTOS/queue.c **** 					{
 1310              		.loc 1 1285 0
 1311 0024 04F11000 		add	r0, r4, #16
 1312 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1313              	.LVL166:
 1314 002c 38B1     		cbz	r0, .L103
1287:..\FreeRTOS/queue.c **** 					}
 1315              		.loc 1 1287 0
 1316 002e 4FF08052 		mov	r2, #268435456
 1317 0032 304B     		ldr	r3, .L113
 1318 0034 1A60     		str	r2, [r3]
 1319              		.syntax unified
 1320              	@ 1287 "..\FreeRTOS\queue.c" 1
 1321 0036 BFF34F8F 		dsb
 1322              	@ 0 "" 2
 1323              	@ 1287 "..\FreeRTOS\queue.c" 1
 1324 003a BFF36F8F 		isb
 1325              	@ 0 "" 2
 1326              		.thumb
 1327              		.syntax unified
 1328              	.L103:
1299:..\FreeRTOS/queue.c **** 				return pdPASS;
 1329              		.loc 1 1299 0
 1330 003e FFF7FEFF 		bl	vPortExitCritical
 1331              	.LVL167:
1300:..\FreeRTOS/queue.c **** 			}
 1332              		.loc 1 1300 0
 1333 0042 0120     		movs	r0, #1
 1334 0044 53E0     		b	.L104
 1335              	.LVL168:
 1336              	.L102:
1304:..\FreeRTOS/queue.c **** 				{
 1337              		.loc 1 1304 0
 1338 0046 019B     		ldr	r3, [sp, #4]
 1339 0048 1BB9     		cbnz	r3, .L105
1308:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1340              		.loc 1 1308 0
 1341 004a FFF7FEFF 		bl	vPortExitCritical
 1342              	.LVL169:
1310:..\FreeRTOS/queue.c **** 				}
 1343              		.loc 1 1310 0
 1344 004e 0020     		movs	r0, #0
 1345 0050 4DE0     		b	.L104
 1346              	.L105:
1312:..\FreeRTOS/queue.c **** 				{
 1347              		.loc 1 1312 0
 1348 0052 1EB9     		cbnz	r6, .L106
1316:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1349              		.loc 1 1316 0
 1350 0054 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 73


 1351 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1352              	.LVL170:
1317:..\FreeRTOS/queue.c **** 				}
 1353              		.loc 1 1317 0
 1354 005a 0126     		movs	r6, #1
 1355              	.LVL171:
 1356              	.L106:
 1357              	.LBE38:
1326:..\FreeRTOS/queue.c **** 
 1358              		.loc 1 1326 0
 1359 005c FFF7FEFF 		bl	vPortExitCritical
 1360              	.LVL172:
1331:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1361              		.loc 1 1331 0
 1362 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1363              	.LVL173:
1332:..\FreeRTOS/queue.c **** 
 1364              		.loc 1 1332 0
 1365 0064 FFF7FEFF 		bl	vPortEnterCritical
 1366              	.LVL174:
 1367 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1368 006c 5BB2     		sxtb	r3, r3
 1369 006e B3F1FF3F 		cmp	r3, #-1
 1370 0072 02D1     		bne	.L107
1332:..\FreeRTOS/queue.c **** 
 1371              		.loc 1 1332 0 is_stmt 0 discriminator 1
 1372 0074 0023     		movs	r3, #0
 1373 0076 84F84430 		strb	r3, [r4, #68]
 1374              	.L107:
1332:..\FreeRTOS/queue.c **** 
 1375              		.loc 1 1332 0 discriminator 3
 1376 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1377 007e 5BB2     		sxtb	r3, r3
 1378 0080 B3F1FF3F 		cmp	r3, #-1
 1379 0084 02D1     		bne	.L108
1332:..\FreeRTOS/queue.c **** 
 1380              		.loc 1 1332 0 discriminator 4
 1381 0086 0023     		movs	r3, #0
 1382 0088 84F84530 		strb	r3, [r4, #69]
 1383              	.L108:
1332:..\FreeRTOS/queue.c **** 
 1384              		.loc 1 1332 0 discriminator 6
 1385 008c FFF7FEFF 		bl	vPortExitCritical
 1386              	.LVL175:
1335:..\FreeRTOS/queue.c **** 		{
 1387              		.loc 1 1335 0 is_stmt 1 discriminator 6
 1388 0090 01A9     		add	r1, sp, #4
 1389              	.LVL176:
 1390 0092 02A8     		add	r0, sp, #8
 1391 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1392              	.LVL177:
 1393 0098 F0B9     		cbnz	r0, .L109
1339:..\FreeRTOS/queue.c **** 			{
 1394              		.loc 1 1339 0
 1395 009a 2046     		mov	r0, r4
 1396 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1397              	.LVL178:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 74


 1398 00a0 A0B1     		cbz	r0, .L110
1342:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1399              		.loc 1 1342 0
 1400 00a2 0199     		ldr	r1, [sp, #4]
 1401 00a4 04F12400 		add	r0, r4, #36
 1402 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1403              	.LVL179:
1343:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1404              		.loc 1 1343 0
 1405 00ac 2046     		mov	r0, r4
 1406 00ae FFF7FEFF 		bl	prvUnlockQueue
 1407              	.LVL180:
1344:..\FreeRTOS/queue.c **** 				{
 1408              		.loc 1 1344 0
 1409 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1410              	.LVL181:
 1411 00b6 0028     		cmp	r0, #0
 1412 00b8 A8D1     		bne	.L101
1346:..\FreeRTOS/queue.c **** 				}
 1413              		.loc 1 1346 0
 1414 00ba 4FF08052 		mov	r2, #268435456
 1415 00be 0D4B     		ldr	r3, .L113
 1416 00c0 1A60     		str	r2, [r3]
 1417              		.syntax unified
 1418              	@ 1346 "..\FreeRTOS\queue.c" 1
 1419 00c2 BFF34F8F 		dsb
 1420              	@ 0 "" 2
 1421              	@ 1346 "..\FreeRTOS\queue.c" 1
 1422 00c6 BFF36F8F 		isb
 1423              	@ 0 "" 2
 1424              		.thumb
 1425              		.syntax unified
 1426 00ca 9FE7     		b	.L101
 1427              	.L110:
1357:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1428              		.loc 1 1357 0
 1429 00cc 2046     		mov	r0, r4
 1430 00ce FFF7FEFF 		bl	prvUnlockQueue
 1431              	.LVL182:
1358:..\FreeRTOS/queue.c **** 			}
 1432              		.loc 1 1358 0
 1433 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1434              	.LVL183:
 1435 00d6 99E7     		b	.L101
 1436              	.L109:
1365:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1437              		.loc 1 1365 0
 1438 00d8 2046     		mov	r0, r4
 1439 00da FFF7FEFF 		bl	prvUnlockQueue
 1440              	.LVL184:
1366:..\FreeRTOS/queue.c **** 
 1441              		.loc 1 1366 0
 1442 00de FFF7FEFF 		bl	xTaskResumeAll
 1443              	.LVL185:
1368:..\FreeRTOS/queue.c **** 			{
 1444              		.loc 1 1368 0
 1445 00e2 2046     		mov	r0, r4
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 75


 1446 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1447              	.LVL186:
 1448 00e8 0028     		cmp	r0, #0
 1449 00ea 8FD0     		beq	.L101
1371:..\FreeRTOS/queue.c **** 			}
 1450              		.loc 1 1371 0
 1451 00ec 0020     		movs	r0, #0
 1452              	.LVL187:
 1453              	.L104:
1379:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1454              		.loc 1 1379 0
 1455 00ee 05B0     		add	sp, sp, #20
 1456              		.cfi_def_cfa_offset 20
 1457              		@ sp needed
 1458 00f0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1459              	.LVL188:
 1460              	.L114:
 1461 00f2 00BF     		.align	2
 1462              	.L113:
 1463 00f4 04ED00E0 		.word	-536810236
 1464              		.cfi_endproc
 1465              	.LFE80:
 1466              		.size	xQueueReceive, .-xQueueReceive
 1467              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1468              		.align	2
 1469              		.global	xQueueSemaphoreTake
 1470              		.thumb
 1471              		.thumb_func
 1472              		.type	xQueueSemaphoreTake, %function
 1473              	xQueueSemaphoreTake:
 1474              	.LFB81:
1383:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1475              		.loc 1 1383 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 16
 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 1479              	.LVL189:
 1480 0000 70B5     		push	{r4, r5, r6, lr}
 1481              		.cfi_def_cfa_offset 16
 1482              		.cfi_offset 4, -16
 1483              		.cfi_offset 5, -12
 1484              		.cfi_offset 6, -8
 1485              		.cfi_offset 14, -4
 1486 0002 84B0     		sub	sp, sp, #16
 1487              		.cfi_def_cfa_offset 32
 1488 0004 0446     		mov	r4, r0
 1489 0006 0191     		str	r1, [sp, #4]
 1490              	.LVL190:
1389:..\FreeRTOS/queue.c **** #endif
 1491              		.loc 1 1389 0
 1492 0008 0026     		movs	r6, #0
1384:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 1493              		.loc 1 1384 0
 1494 000a 3546     		mov	r5, r6
 1495              	.LVL191:
 1496              	.L116:
1413:..\FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 76


 1497              		.loc 1 1413 0
 1498 000c FFF7FEFF 		bl	vPortEnterCritical
 1499              	.LVL192:
 1500              	.LBB39:
1417:..\FreeRTOS/queue.c **** 
 1501              		.loc 1 1417 0
 1502 0010 A36B     		ldr	r3, [r4, #56]
 1503              	.LVL193:
1421:..\FreeRTOS/queue.c **** 			{
 1504              		.loc 1 1421 0
 1505 0012 CBB1     		cbz	r3, .L117
1427:..\FreeRTOS/queue.c **** 
 1506              		.loc 1 1427 0
 1507 0014 013B     		subs	r3, r3, #1
 1508              	.LVL194:
 1509 0016 A363     		str	r3, [r4, #56]
1431:..\FreeRTOS/queue.c **** 					{
 1510              		.loc 1 1431 0
 1511 0018 2368     		ldr	r3, [r4]
 1512              	.LVL195:
 1513 001a 13B9     		cbnz	r3, .L118
1435:..\FreeRTOS/queue.c **** 					}
 1514              		.loc 1 1435 0
 1515 001c FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1516              	.LVL196:
 1517 0020 6060     		str	r0, [r4, #4]
 1518              	.L118:
1446:..\FreeRTOS/queue.c **** 				{
 1519              		.loc 1 1446 0
 1520 0022 2369     		ldr	r3, [r4, #16]
 1521 0024 63B1     		cbz	r3, .L119
1448:..\FreeRTOS/queue.c **** 					{
 1522              		.loc 1 1448 0
 1523 0026 04F11000 		add	r0, r4, #16
 1524 002a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1525              	.LVL197:
 1526 002e 38B1     		cbz	r0, .L119
1450:..\FreeRTOS/queue.c **** 					}
 1527              		.loc 1 1450 0
 1528 0030 4FF08052 		mov	r2, #268435456
 1529 0034 3B4B     		ldr	r3, .L131
 1530 0036 1A60     		str	r2, [r3]
 1531              		.syntax unified
 1532              	@ 1450 "..\FreeRTOS\queue.c" 1
 1533 0038 BFF34F8F 		dsb
 1534              	@ 0 "" 2
 1535              	@ 1450 "..\FreeRTOS\queue.c" 1
 1536 003c BFF36F8F 		isb
 1537              	@ 0 "" 2
 1538              		.thumb
 1539              		.syntax unified
 1540              	.L119:
1462:..\FreeRTOS/queue.c **** 				return pdPASS;
 1541              		.loc 1 1462 0
 1542 0040 FFF7FEFF 		bl	vPortExitCritical
 1543              	.LVL198:
1463:..\FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 77


 1544              		.loc 1 1463 0
 1545 0044 0120     		movs	r0, #1
 1546 0046 6BE0     		b	.L120
 1547              	.LVL199:
 1548              	.L117:
1467:..\FreeRTOS/queue.c **** 				{
 1549              		.loc 1 1467 0
 1550 0048 019B     		ldr	r3, [sp, #4]
 1551              	.LVL200:
 1552 004a 1BB9     		cbnz	r3, .L121
1480:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1553              		.loc 1 1480 0
 1554 004c FFF7FEFF 		bl	vPortExitCritical
 1555              	.LVL201:
1482:..\FreeRTOS/queue.c **** 				}
 1556              		.loc 1 1482 0
 1557 0050 0020     		movs	r0, #0
 1558 0052 65E0     		b	.L120
 1559              	.L121:
1484:..\FreeRTOS/queue.c **** 				{
 1560              		.loc 1 1484 0
 1561 0054 1DB9     		cbnz	r5, .L122
1488:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1562              		.loc 1 1488 0
 1563 0056 02A8     		add	r0, sp, #8
 1564 0058 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1565              	.LVL202:
1489:..\FreeRTOS/queue.c **** 				}
 1566              		.loc 1 1489 0
 1567 005c 0125     		movs	r5, #1
 1568              	.LVL203:
 1569              	.L122:
 1570              	.LBE39:
1498:..\FreeRTOS/queue.c **** 
 1571              		.loc 1 1498 0
 1572 005e FFF7FEFF 		bl	vPortExitCritical
 1573              	.LVL204:
1503:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1574              		.loc 1 1503 0
 1575 0062 FFF7FEFF 		bl	vTaskSuspendAll
 1576              	.LVL205:
1504:..\FreeRTOS/queue.c **** 
 1577              		.loc 1 1504 0
 1578 0066 FFF7FEFF 		bl	vPortEnterCritical
 1579              	.LVL206:
 1580 006a 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1581 006e 5BB2     		sxtb	r3, r3
 1582 0070 B3F1FF3F 		cmp	r3, #-1
 1583 0074 02D1     		bne	.L123
1504:..\FreeRTOS/queue.c **** 
 1584              		.loc 1 1504 0 is_stmt 0 discriminator 1
 1585 0076 0023     		movs	r3, #0
 1586 0078 84F84430 		strb	r3, [r4, #68]
 1587              	.L123:
1504:..\FreeRTOS/queue.c **** 
 1588              		.loc 1 1504 0 discriminator 3
 1589 007c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 78


 1590 0080 5BB2     		sxtb	r3, r3
 1591 0082 B3F1FF3F 		cmp	r3, #-1
 1592 0086 02D1     		bne	.L124
1504:..\FreeRTOS/queue.c **** 
 1593              		.loc 1 1504 0 discriminator 4
 1594 0088 0023     		movs	r3, #0
 1595 008a 84F84530 		strb	r3, [r4, #69]
 1596              	.L124:
1504:..\FreeRTOS/queue.c **** 
 1597              		.loc 1 1504 0 discriminator 6
 1598 008e FFF7FEFF 		bl	vPortExitCritical
 1599              	.LVL207:
1507:..\FreeRTOS/queue.c **** 		{
 1600              		.loc 1 1507 0 is_stmt 1 discriminator 6
 1601 0092 01A9     		add	r1, sp, #4
 1602              	.LVL208:
 1603 0094 02A8     		add	r0, sp, #8
 1604 0096 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1605              	.LVL209:
 1606 009a 40BB     		cbnz	r0, .L125
1513:..\FreeRTOS/queue.c **** 			{
 1607              		.loc 1 1513 0
 1608 009c 2046     		mov	r0, r4
 1609 009e FFF7FEFF 		bl	prvIsQueueEmpty
 1610              	.LVL210:
 1611 00a2 F0B1     		cbz	r0, .L126
1519:..\FreeRTOS/queue.c **** 					{
 1612              		.loc 1 1519 0
 1613 00a4 2368     		ldr	r3, [r4]
 1614 00a6 3BB9     		cbnz	r3, .L127
1521:..\FreeRTOS/queue.c **** 						{
 1615              		.loc 1 1521 0
 1616 00a8 FFF7FEFF 		bl	vPortEnterCritical
 1617              	.LVL211:
1523:..\FreeRTOS/queue.c **** 						}
 1618              		.loc 1 1523 0
 1619 00ac 6068     		ldr	r0, [r4, #4]
 1620 00ae FFF7FEFF 		bl	xTaskPriorityInherit
 1621              	.LVL212:
 1622 00b2 0646     		mov	r6, r0
 1623              	.LVL213:
1525:..\FreeRTOS/queue.c **** 					}
 1624              		.loc 1 1525 0
 1625 00b4 FFF7FEFF 		bl	vPortExitCritical
 1626              	.LVL214:
 1627              	.L127:
1534:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1628              		.loc 1 1534 0
 1629 00b8 0199     		ldr	r1, [sp, #4]
 1630 00ba 04F12400 		add	r0, r4, #36
 1631 00be FFF7FEFF 		bl	vTaskPlaceOnEventList
 1632              	.LVL215:
1535:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1633              		.loc 1 1535 0
 1634 00c2 2046     		mov	r0, r4
 1635 00c4 FFF7FEFF 		bl	prvUnlockQueue
 1636              	.LVL216:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 79


1536:..\FreeRTOS/queue.c **** 				{
 1637              		.loc 1 1536 0
 1638 00c8 FFF7FEFF 		bl	xTaskResumeAll
 1639              	.LVL217:
 1640 00cc 0028     		cmp	r0, #0
 1641 00ce 9DD1     		bne	.L116
1538:..\FreeRTOS/queue.c **** 				}
 1642              		.loc 1 1538 0
 1643 00d0 4FF08052 		mov	r2, #268435456
 1644 00d4 134B     		ldr	r3, .L131
 1645 00d6 1A60     		str	r2, [r3]
 1646              		.syntax unified
 1647              	@ 1538 "..\FreeRTOS\queue.c" 1
 1648 00d8 BFF34F8F 		dsb
 1649              	@ 0 "" 2
 1650              	@ 1538 "..\FreeRTOS\queue.c" 1
 1651 00dc BFF36F8F 		isb
 1652              	@ 0 "" 2
 1653              		.thumb
 1654              		.syntax unified
 1655 00e0 94E7     		b	.L116
 1656              	.L126:
1549:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1657              		.loc 1 1549 0
 1658 00e2 2046     		mov	r0, r4
 1659 00e4 FFF7FEFF 		bl	prvUnlockQueue
 1660              	.LVL218:
1550:..\FreeRTOS/queue.c **** 			}
 1661              		.loc 1 1550 0
 1662 00e8 FFF7FEFF 		bl	xTaskResumeAll
 1663              	.LVL219:
 1664 00ec 8EE7     		b	.L116
 1665              	.L125:
1556:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1666              		.loc 1 1556 0
 1667 00ee 2046     		mov	r0, r4
 1668 00f0 FFF7FEFF 		bl	prvUnlockQueue
 1669              	.LVL220:
1557:..\FreeRTOS/queue.c **** 
 1670              		.loc 1 1557 0
 1671 00f4 FFF7FEFF 		bl	xTaskResumeAll
 1672              	.LVL221:
1563:..\FreeRTOS/queue.c **** 			{
 1673              		.loc 1 1563 0
 1674 00f8 2046     		mov	r0, r4
 1675 00fa FFF7FEFF 		bl	prvIsQueueEmpty
 1676              	.LVL222:
 1677 00fe 0028     		cmp	r0, #0
 1678 0100 84D0     		beq	.L116
1570:..\FreeRTOS/queue.c **** 					{
 1679              		.loc 1 1570 0
 1680 0102 66B1     		cbz	r6, .L129
1572:..\FreeRTOS/queue.c **** 						{
 1681              		.loc 1 1572 0
 1682 0104 FFF7FEFF 		bl	vPortEnterCritical
 1683              	.LVL223:
 1684              	.LBB40:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 80


1581:..\FreeRTOS/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 1685              		.loc 1 1581 0
 1686 0108 2046     		mov	r0, r4
 1687 010a FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 1688              	.LVL224:
1582:..\FreeRTOS/queue.c **** 						}
 1689              		.loc 1 1582 0
 1690 010e 0146     		mov	r1, r0
 1691 0110 6068     		ldr	r0, [r4, #4]
 1692              	.LVL225:
 1693 0112 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 1694              	.LVL226:
 1695              	.LBE40:
1584:..\FreeRTOS/queue.c **** 					}
 1696              		.loc 1 1584 0
 1697 0116 FFF7FEFF 		bl	vPortExitCritical
 1698              	.LVL227:
1590:..\FreeRTOS/queue.c **** 			}
 1699              		.loc 1 1590 0
 1700 011a 0020     		movs	r0, #0
 1701 011c 00E0     		b	.L120
 1702              	.L129:
 1703 011e 0020     		movs	r0, #0
 1704              	.L120:
1598:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1705              		.loc 1 1598 0
 1706 0120 04B0     		add	sp, sp, #16
 1707              		.cfi_def_cfa_offset 16
 1708              		@ sp needed
 1709 0122 70BD     		pop	{r4, r5, r6, pc}
 1710              	.LVL228:
 1711              	.L132:
 1712              		.align	2
 1713              	.L131:
 1714 0124 04ED00E0 		.word	-536810236
 1715              		.cfi_endproc
 1716              	.LFE81:
 1717              		.size	xQueueSemaphoreTake, .-xQueueSemaphoreTake
 1718              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1719              		.align	2
 1720              		.global	xQueueTakeMutexRecursive
 1721              		.thumb
 1722              		.thumb_func
 1723              		.type	xQueueTakeMutexRecursive, %function
 1724              	xQueueTakeMutexRecursive:
 1725              	.LFB75:
 631:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 1726              		.loc 1 631 0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 0
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 1730              	.LVL229:
 1731 0000 70B5     		push	{r4, r5, r6, lr}
 1732              		.cfi_def_cfa_offset 16
 1733              		.cfi_offset 4, -16
 1734              		.cfi_offset 5, -12
 1735              		.cfi_offset 6, -8
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 81


 1736              		.cfi_offset 14, -4
 1737 0002 0446     		mov	r4, r0
 1738 0004 0E46     		mov	r6, r1
 1739              	.LVL230:
 642:..\FreeRTOS/queue.c **** 		{
 1740              		.loc 1 642 0
 1741 0006 4568     		ldr	r5, [r0, #4]
 1742 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1743              	.LVL231:
 1744 000c 8542     		cmp	r5, r0
 1745 000e 04D1     		bne	.L134
 644:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1746              		.loc 1 644 0
 1747 0010 E368     		ldr	r3, [r4, #12]
 1748 0012 0133     		adds	r3, r3, #1
 1749 0014 E360     		str	r3, [r4, #12]
 1750              	.LVL232:
 645:..\FreeRTOS/queue.c **** 		}
 1751              		.loc 1 645 0
 1752 0016 0123     		movs	r3, #1
 1753 0018 08E0     		b	.L135
 1754              	.LVL233:
 1755              	.L134:
 649:..\FreeRTOS/queue.c **** 
 1756              		.loc 1 649 0
 1757 001a 3146     		mov	r1, r6
 1758 001c 2046     		mov	r0, r4
 1759 001e FFF7FEFF 		bl	xQueueSemaphoreTake
 1760              	.LVL234:
 654:..\FreeRTOS/queue.c **** 			{
 1761              		.loc 1 654 0
 1762 0022 0346     		mov	r3, r0
 1763 0024 10B1     		cbz	r0, .L135
 656:..\FreeRTOS/queue.c **** 			}
 1764              		.loc 1 656 0
 1765 0026 E268     		ldr	r2, [r4, #12]
 1766 0028 0132     		adds	r2, r2, #1
 1767 002a E260     		str	r2, [r4, #12]
 1768              	.LVL235:
 1769              	.L135:
 665:..\FreeRTOS/queue.c **** 
 1770              		.loc 1 665 0
 1771 002c 1846     		mov	r0, r3
 1772 002e 70BD     		pop	{r4, r5, r6, pc}
 1773              		.cfi_endproc
 1774              	.LFE75:
 1775              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 1776              		.section	.text.xQueuePeek,"ax",%progbits
 1777              		.align	2
 1778              		.global	xQueuePeek
 1779              		.thumb
 1780              		.thumb_func
 1781              		.type	xQueuePeek, %function
 1782              	xQueuePeek:
 1783              	.LFB82:
1602:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1784              		.loc 1 1602 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 82


 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 16
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788              	.LVL236:
 1789 0000 70B5     		push	{r4, r5, r6, lr}
 1790              		.cfi_def_cfa_offset 16
 1791              		.cfi_offset 4, -16
 1792              		.cfi_offset 5, -12
 1793              		.cfi_offset 6, -8
 1794              		.cfi_offset 14, -4
 1795 0002 84B0     		sub	sp, sp, #16
 1796              		.cfi_def_cfa_offset 32
 1797 0004 0446     		mov	r4, r0
 1798 0006 0E46     		mov	r6, r1
 1799 0008 0192     		str	r2, [sp, #4]
 1800              	.LVL237:
1603:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 1801              		.loc 1 1603 0
 1802 000a 0025     		movs	r5, #0
 1803              	.LVL238:
 1804              	.L138:
1629:..\FreeRTOS/queue.c **** 		{
 1805              		.loc 1 1629 0
 1806 000c FFF7FEFF 		bl	vPortEnterCritical
 1807              	.LVL239:
 1808              	.LBB41:
1631:..\FreeRTOS/queue.c **** 
 1809              		.loc 1 1631 0
 1810 0010 A36B     		ldr	r3, [r4, #56]
 1811              	.LVL240:
1635:..\FreeRTOS/queue.c **** 			{
 1812              		.loc 1 1635 0
 1813 0012 C3B1     		cbz	r3, .L139
1640:..\FreeRTOS/queue.c **** 
 1814              		.loc 1 1640 0
 1815 0014 E568     		ldr	r5, [r4, #12]
 1816              	.LVL241:
1642:..\FreeRTOS/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 1817              		.loc 1 1642 0
 1818 0016 3146     		mov	r1, r6
 1819 0018 2046     		mov	r0, r4
 1820 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1821              	.LVL242:
1646:..\FreeRTOS/queue.c **** 
 1822              		.loc 1 1646 0
 1823 001e E560     		str	r5, [r4, #12]
1650:..\FreeRTOS/queue.c **** 				{
 1824              		.loc 1 1650 0
 1825 0020 636A     		ldr	r3, [r4, #36]
 1826 0022 63B1     		cbz	r3, .L140
1652:..\FreeRTOS/queue.c **** 					{
 1827              		.loc 1 1652 0
 1828 0024 04F12400 		add	r0, r4, #36
 1829 0028 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1830              	.LVL243:
 1831 002c 38B1     		cbz	r0, .L140
1655:..\FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 83


 1832              		.loc 1 1655 0
 1833 002e 4FF08052 		mov	r2, #268435456
 1834 0032 304B     		ldr	r3, .L150
 1835 0034 1A60     		str	r2, [r3]
 1836              		.syntax unified
 1837              	@ 1655 "..\FreeRTOS\queue.c" 1
 1838 0036 BFF34F8F 		dsb
 1839              	@ 0 "" 2
 1840              	@ 1655 "..\FreeRTOS\queue.c" 1
 1841 003a BFF36F8F 		isb
 1842              	@ 0 "" 2
 1843              		.thumb
 1844              		.syntax unified
 1845              	.L140:
1667:..\FreeRTOS/queue.c **** 				return pdPASS;
 1846              		.loc 1 1667 0
 1847 003e FFF7FEFF 		bl	vPortExitCritical
 1848              	.LVL244:
1668:..\FreeRTOS/queue.c **** 			}
 1849              		.loc 1 1668 0
 1850 0042 0120     		movs	r0, #1
 1851 0044 53E0     		b	.L141
 1852              	.LVL245:
 1853              	.L139:
1672:..\FreeRTOS/queue.c **** 				{
 1854              		.loc 1 1672 0
 1855 0046 019B     		ldr	r3, [sp, #4]
 1856              	.LVL246:
 1857 0048 1BB9     		cbnz	r3, .L142
1676:..\FreeRTOS/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 1858              		.loc 1 1676 0
 1859 004a FFF7FEFF 		bl	vPortExitCritical
 1860              	.LVL247:
1678:..\FreeRTOS/queue.c **** 				}
 1861              		.loc 1 1678 0
 1862 004e 0020     		movs	r0, #0
 1863 0050 4DE0     		b	.L141
 1864              	.L142:
1680:..\FreeRTOS/queue.c **** 				{
 1865              		.loc 1 1680 0
 1866 0052 1DB9     		cbnz	r5, .L143
1685:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1867              		.loc 1 1685 0
 1868 0054 02A8     		add	r0, sp, #8
 1869 0056 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1870              	.LVL248:
1686:..\FreeRTOS/queue.c **** 				}
 1871              		.loc 1 1686 0
 1872 005a 0125     		movs	r5, #1
 1873              	.LVL249:
 1874              	.L143:
 1875              	.LBE41:
1695:..\FreeRTOS/queue.c **** 
 1876              		.loc 1 1695 0
 1877 005c FFF7FEFF 		bl	vPortExitCritical
 1878              	.LVL250:
1700:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 84


 1879              		.loc 1 1700 0
 1880 0060 FFF7FEFF 		bl	vTaskSuspendAll
 1881              	.LVL251:
1701:..\FreeRTOS/queue.c **** 
 1882              		.loc 1 1701 0
 1883 0064 FFF7FEFF 		bl	vPortEnterCritical
 1884              	.LVL252:
 1885 0068 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1886 006c 5BB2     		sxtb	r3, r3
 1887 006e B3F1FF3F 		cmp	r3, #-1
 1888 0072 02D1     		bne	.L144
1701:..\FreeRTOS/queue.c **** 
 1889              		.loc 1 1701 0 is_stmt 0 discriminator 1
 1890 0074 0023     		movs	r3, #0
 1891 0076 84F84430 		strb	r3, [r4, #68]
 1892              	.L144:
1701:..\FreeRTOS/queue.c **** 
 1893              		.loc 1 1701 0 discriminator 3
 1894 007a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1895 007e 5BB2     		sxtb	r3, r3
 1896 0080 B3F1FF3F 		cmp	r3, #-1
 1897 0084 02D1     		bne	.L145
1701:..\FreeRTOS/queue.c **** 
 1898              		.loc 1 1701 0 discriminator 4
 1899 0086 0023     		movs	r3, #0
 1900 0088 84F84530 		strb	r3, [r4, #69]
 1901              	.L145:
1701:..\FreeRTOS/queue.c **** 
 1902              		.loc 1 1701 0 discriminator 6
 1903 008c FFF7FEFF 		bl	vPortExitCritical
 1904              	.LVL253:
1704:..\FreeRTOS/queue.c **** 		{
 1905              		.loc 1 1704 0 is_stmt 1 discriminator 6
 1906 0090 01A9     		add	r1, sp, #4
 1907              	.LVL254:
 1908 0092 02A8     		add	r0, sp, #8
 1909 0094 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1910              	.LVL255:
 1911 0098 F0B9     		cbnz	r0, .L146
1708:..\FreeRTOS/queue.c **** 			{
 1912              		.loc 1 1708 0
 1913 009a 2046     		mov	r0, r4
 1914 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1915              	.LVL256:
 1916 00a0 A0B1     		cbz	r0, .L147
1711:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1917              		.loc 1 1711 0
 1918 00a2 0199     		ldr	r1, [sp, #4]
 1919 00a4 04F12400 		add	r0, r4, #36
 1920 00a8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1921              	.LVL257:
1712:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1922              		.loc 1 1712 0
 1923 00ac 2046     		mov	r0, r4
 1924 00ae FFF7FEFF 		bl	prvUnlockQueue
 1925              	.LVL258:
1713:..\FreeRTOS/queue.c **** 				{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 85


 1926              		.loc 1 1713 0
 1927 00b2 FFF7FEFF 		bl	xTaskResumeAll
 1928              	.LVL259:
 1929 00b6 0028     		cmp	r0, #0
 1930 00b8 A8D1     		bne	.L138
1715:..\FreeRTOS/queue.c **** 				}
 1931              		.loc 1 1715 0
 1932 00ba 4FF08052 		mov	r2, #268435456
 1933 00be 0D4B     		ldr	r3, .L150
 1934 00c0 1A60     		str	r2, [r3]
 1935              		.syntax unified
 1936              	@ 1715 "..\FreeRTOS\queue.c" 1
 1937 00c2 BFF34F8F 		dsb
 1938              	@ 0 "" 2
 1939              	@ 1715 "..\FreeRTOS\queue.c" 1
 1940 00c6 BFF36F8F 		isb
 1941              	@ 0 "" 2
 1942              		.thumb
 1943              		.syntax unified
 1944 00ca 9FE7     		b	.L138
 1945              	.L147:
1726:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1946              		.loc 1 1726 0
 1947 00cc 2046     		mov	r0, r4
 1948 00ce FFF7FEFF 		bl	prvUnlockQueue
 1949              	.LVL260:
1727:..\FreeRTOS/queue.c **** 			}
 1950              		.loc 1 1727 0
 1951 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1952              	.LVL261:
 1953 00d6 99E7     		b	.L138
 1954              	.L146:
1734:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1955              		.loc 1 1734 0
 1956 00d8 2046     		mov	r0, r4
 1957 00da FFF7FEFF 		bl	prvUnlockQueue
 1958              	.LVL262:
1735:..\FreeRTOS/queue.c **** 
 1959              		.loc 1 1735 0
 1960 00de FFF7FEFF 		bl	xTaskResumeAll
 1961              	.LVL263:
1737:..\FreeRTOS/queue.c **** 			{
 1962              		.loc 1 1737 0
 1963 00e2 2046     		mov	r0, r4
 1964 00e4 FFF7FEFF 		bl	prvIsQueueEmpty
 1965              	.LVL264:
 1966 00e8 0028     		cmp	r0, #0
 1967 00ea 8FD0     		beq	.L138
1740:..\FreeRTOS/queue.c **** 			}
 1968              		.loc 1 1740 0
 1969 00ec 0020     		movs	r0, #0
 1970              	.LVL265:
 1971              	.L141:
1748:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1972              		.loc 1 1748 0
 1973 00ee 04B0     		add	sp, sp, #16
 1974              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 86


 1975              		@ sp needed
 1976 00f0 70BD     		pop	{r4, r5, r6, pc}
 1977              	.LVL266:
 1978              	.L151:
 1979 00f2 00BF     		.align	2
 1980              	.L150:
 1981 00f4 04ED00E0 		.word	-536810236
 1982              		.cfi_endproc
 1983              	.LFE82:
 1984              		.size	xQueuePeek, .-xQueuePeek
 1985              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1986              		.align	2
 1987              		.global	xQueueReceiveFromISR
 1988              		.thumb
 1989              		.thumb_func
 1990              		.type	xQueueReceiveFromISR, %function
 1991              	xQueueReceiveFromISR:
 1992              	.LFB83:
1752:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1993              		.loc 1 1752 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997              	.LVL267:
 1998 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1999              		.cfi_def_cfa_offset 24
 2000              		.cfi_offset 4, -24
 2001              		.cfi_offset 5, -20
 2002              		.cfi_offset 6, -16
 2003              		.cfi_offset 7, -12
 2004              		.cfi_offset 8, -8
 2005              		.cfi_offset 14, -4
 2006              	.LVL268:
 2007              	.LBB42:
 2008              	.LBB43:
 222:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	(
 2009              		.loc 2 222 0
 2010              		.syntax unified
 2011              	@ 222 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 2012 0004 EFF31186 			mrs r6, basepri											
 2013 0008 4FF0A003 		mov r3, #160												
 2014 000c 83F31188 		msr basepri, r3											
 2015 0010 BFF36F8F 		isb														
 2016 0014 BFF34F8F 		dsb														
 2017              	
 2018              	@ 0 "" 2
 2019              		.thumb
 2020              		.syntax unified
 2021              	.LBE43:
 2022              	.LBE42:
 2023              	.LBB44:
1778:..\FreeRTOS/queue.c **** 
 2024              		.loc 1 1778 0
 2025 0018 846B     		ldr	r4, [r0, #56]
 2026              	.LVL269:
1781:..\FreeRTOS/queue.c **** 		{
 2027              		.loc 1 1781 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 87


 2028 001a FCB1     		cbz	r4, .L155
 2029 001c 9046     		mov	r8, r2
 2030 001e 0746     		mov	r7, r0
 2031              	.LBB45:
1783:..\FreeRTOS/queue.c **** 
 2032              		.loc 1 1783 0
 2033 0020 90F84450 		ldrb	r5, [r0, #68]	@ zero_extendqisi2
 2034 0024 6DB2     		sxtb	r5, r5
 2035              	.LVL270:
1787:..\FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2036              		.loc 1 1787 0
 2037 0026 FFF7FEFF 		bl	prvCopyDataFromQueue
 2038              	.LVL271:
1788:..\FreeRTOS/queue.c **** 
 2039              		.loc 1 1788 0
 2040 002a 013C     		subs	r4, r4, #1
 2041              	.LVL272:
 2042 002c BC63     		str	r4, [r7, #56]
1794:..\FreeRTOS/queue.c **** 			{
 2043              		.loc 1 1794 0
 2044 002e B5F1FF3F 		cmp	r5, #-1
 2045 0032 0DD1     		bne	.L154
1796:..\FreeRTOS/queue.c **** 				{
 2046              		.loc 1 1796 0
 2047 0034 3B69     		ldr	r3, [r7, #16]
 2048 0036 9BB1     		cbz	r3, .L156
1798:..\FreeRTOS/queue.c **** 					{
 2049              		.loc 1 1798 0
 2050 0038 07F11000 		add	r0, r7, #16
 2051 003c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2052              	.LVL273:
 2053 0040 80B1     		cbz	r0, .L157
1802:..\FreeRTOS/queue.c **** 						{
 2054              		.loc 1 1802 0
 2055 0042 B8F1000F 		cmp	r8, #0
 2056 0046 0FD0     		beq	.L158
1804:..\FreeRTOS/queue.c **** 						}
 2057              		.loc 1 1804 0
 2058 0048 0120     		movs	r0, #1
 2059 004a C8F80000 		str	r0, [r8]
 2060 004e 0CE0     		b	.L153
 2061              	.L154:
1825:..\FreeRTOS/queue.c **** 			}
 2062              		.loc 1 1825 0
 2063 0050 0135     		adds	r5, r5, #1
 2064              	.LVL274:
 2065 0052 6DB2     		sxtb	r5, r5
 2066              	.LVL275:
 2067 0054 87F84450 		strb	r5, [r7, #68]
1828:..\FreeRTOS/queue.c **** 		}
 2068              		.loc 1 1828 0
 2069 0058 0120     		movs	r0, #1
 2070 005a 06E0     		b	.L153
 2071              	.LVL276:
 2072              	.L155:
 2073              	.LBE45:
1832:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 88


 2074              		.loc 1 1832 0
 2075 005c 0020     		movs	r0, #0
 2076              	.LVL277:
 2077 005e 04E0     		b	.L153
 2078              	.LVL278:
 2079              	.L156:
 2080              	.LBB46:
1828:..\FreeRTOS/queue.c **** 		}
 2081              		.loc 1 1828 0
 2082 0060 0120     		movs	r0, #1
 2083 0062 02E0     		b	.L153
 2084              	.L157:
 2085 0064 0120     		movs	r0, #1
 2086 0066 00E0     		b	.L153
 2087              	.L158:
 2088 0068 0120     		movs	r0, #1
 2089              	.LVL279:
 2090              	.L153:
 2091              	.LBE46:
 2092              	.LBE44:
 2093              	.LBB47:
 2094              	.LBB48:
 2095              		.loc 2 240 0
 2096              		.syntax unified
 2097              	@ 240 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 2098 006a 86F31188 			msr basepri, r6	
 2099              	@ 0 "" 2
 2100              	.LVL280:
 2101              		.thumb
 2102              		.syntax unified
 2103              	.LBE48:
 2104              	.LBE47:
1839:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2105              		.loc 1 1839 0
 2106 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2107              		.cfi_endproc
 2108              	.LFE83:
 2109              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 2110 0072 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2111              		.align	2
 2112              		.global	xQueuePeekFromISR
 2113              		.thumb
 2114              		.thumb_func
 2115              		.type	xQueuePeekFromISR, %function
 2116              	xQueuePeekFromISR:
 2117              	.LFB84:
1843:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 2118              		.loc 1 1843 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 0
 2121              		@ frame_needed = 0, uses_anonymous_args = 0
 2122              	.LVL281:
 2123 0000 70B5     		push	{r4, r5, r6, lr}
 2124              		.cfi_def_cfa_offset 16
 2125              		.cfi_offset 4, -16
 2126              		.cfi_offset 5, -12
 2127              		.cfi_offset 6, -8
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 89


 2128              		.cfi_offset 14, -4
 2129              	.LVL282:
 2130              	.LBB49:
 2131              	.LBB50:
 222:..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h **** 	(
 2132              		.loc 2 222 0
 2133              		.syntax unified
 2134              	@ 222 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 2135 0002 EFF31185 			mrs r5, basepri											
 2136 0006 4FF0A003 		mov r3, #160												
 2137 000a 83F31188 		msr basepri, r3											
 2138 000e BFF36F8F 		isb														
 2139 0012 BFF34F8F 		dsb														
 2140              	
 2141              	@ 0 "" 2
 2142              		.thumb
 2143              		.syntax unified
 2144              	.LBE50:
 2145              	.LBE49:
1872:..\FreeRTOS/queue.c **** 		{
 2146              		.loc 1 1872 0
 2147 0016 836B     		ldr	r3, [r0, #56]
 2148 0018 33B1     		cbz	r3, .L162
 2149 001a 0446     		mov	r4, r0
1878:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2150              		.loc 1 1878 0
 2151 001c C668     		ldr	r6, [r0, #12]
 2152              	.LVL283:
1879:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2153              		.loc 1 1879 0
 2154 001e FFF7FEFF 		bl	prvCopyDataFromQueue
 2155              	.LVL284:
1880:..\FreeRTOS/queue.c **** 
 2156              		.loc 1 1880 0
 2157 0022 E660     		str	r6, [r4, #12]
 2158              	.LVL285:
1882:..\FreeRTOS/queue.c **** 		}
 2159              		.loc 1 1882 0
 2160 0024 0120     		movs	r0, #1
 2161 0026 00E0     		b	.L161
 2162              	.LVL286:
 2163              	.L162:
1886:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2164              		.loc 1 1886 0
 2165 0028 0020     		movs	r0, #0
 2166              	.LVL287:
 2167              	.L161:
 2168              	.LBB51:
 2169              	.LBB52:
 2170              		.loc 2 240 0
 2171              		.syntax unified
 2172              	@ 240 "..\FreeRTOS\portable\GCC\ARM_CM3/portmacro.h" 1
 2173 002a 85F31188 			msr basepri, r5	
 2174              	@ 0 "" 2
 2175              	.LVL288:
 2176              		.thumb
 2177              		.syntax unified
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 90


 2178              	.LBE52:
 2179              	.LBE51:
1893:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2180              		.loc 1 1893 0
 2181 002e 70BD     		pop	{r4, r5, r6, pc}
 2182              		.cfi_endproc
 2183              	.LFE84:
 2184              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 2185              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2186              		.align	2
 2187              		.global	uxQueueMessagesWaiting
 2188              		.thumb
 2189              		.thumb_func
 2190              		.type	uxQueueMessagesWaiting, %function
 2191              	uxQueueMessagesWaiting:
 2192              	.LFB85:
1897:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 2193              		.loc 1 1897 0
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 0
 2196              		@ frame_needed = 0, uses_anonymous_args = 0
 2197              	.LVL289:
 2198 0000 10B5     		push	{r4, lr}
 2199              		.cfi_def_cfa_offset 8
 2200              		.cfi_offset 4, -8
 2201              		.cfi_offset 14, -4
 2202 0002 0446     		mov	r4, r0
1902:..\FreeRTOS/queue.c **** 	{
 2203              		.loc 1 1902 0
 2204 0004 FFF7FEFF 		bl	vPortEnterCritical
 2205              	.LVL290:
1904:..\FreeRTOS/queue.c **** 	}
 2206              		.loc 1 1904 0
 2207 0008 A46B     		ldr	r4, [r4, #56]
 2208              	.LVL291:
1906:..\FreeRTOS/queue.c **** 
 2209              		.loc 1 1906 0
 2210 000a FFF7FEFF 		bl	vPortExitCritical
 2211              	.LVL292:
1909:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2212              		.loc 1 1909 0
 2213 000e 2046     		mov	r0, r4
 2214 0010 10BD     		pop	{r4, pc}
 2215              		.cfi_endproc
 2216              	.LFE85:
 2217              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 2218 0012 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2219              		.align	2
 2220              		.global	uxQueueSpacesAvailable
 2221              		.thumb
 2222              		.thumb_func
 2223              		.type	uxQueueSpacesAvailable, %function
 2224              	uxQueueSpacesAvailable:
 2225              	.LFB86:
1913:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 2226              		.loc 1 1913 0
 2227              		.cfi_startproc
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 91


 2228              		@ args = 0, pretend = 0, frame = 0
 2229              		@ frame_needed = 0, uses_anonymous_args = 0
 2230              	.LVL293:
 2231 0000 10B5     		push	{r4, lr}
 2232              		.cfi_def_cfa_offset 8
 2233              		.cfi_offset 4, -8
 2234              		.cfi_offset 14, -4
 2235 0002 0446     		mov	r4, r0
 2236              	.LVL294:
1920:..\FreeRTOS/queue.c **** 	{
 2237              		.loc 1 1920 0
 2238 0004 FFF7FEFF 		bl	vPortEnterCritical
 2239              	.LVL295:
1922:..\FreeRTOS/queue.c **** 	}
 2240              		.loc 1 1922 0
 2241 0008 E36B     		ldr	r3, [r4, #60]
 2242 000a A46B     		ldr	r4, [r4, #56]
 2243              	.LVL296:
 2244 000c 1C1B     		subs	r4, r3, r4
 2245              	.LVL297:
1924:..\FreeRTOS/queue.c **** 
 2246              		.loc 1 1924 0
 2247 000e FFF7FEFF 		bl	vPortExitCritical
 2248              	.LVL298:
1927:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2249              		.loc 1 1927 0
 2250 0012 2046     		mov	r0, r4
 2251 0014 10BD     		pop	{r4, pc}
 2252              		.cfi_endproc
 2253              	.LFE86:
 2254              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 2255 0016 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2256              		.align	2
 2257              		.global	uxQueueMessagesWaitingFromISR
 2258              		.thumb
 2259              		.thumb_func
 2260              		.type	uxQueueMessagesWaitingFromISR, %function
 2261              	uxQueueMessagesWaitingFromISR:
 2262              	.LFB87:
1931:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 2263              		.loc 1 1931 0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 0, uses_anonymous_args = 0
 2267              		@ link register save eliminated.
 2268              	.LVL299:
1936:..\FreeRTOS/queue.c **** 
 2269              		.loc 1 1936 0
 2270 0000 806B     		ldr	r0, [r0, #56]
 2271              	.LVL300:
1939:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2272              		.loc 1 1939 0
 2273 0002 7047     		bx	lr
 2274              		.cfi_endproc
 2275              	.LFE87:
 2276              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 2277              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 92


 2278              		.align	2
 2279              		.global	xQueueIsQueueEmptyFromISR
 2280              		.thumb
 2281              		.thumb_func
 2282              		.type	xQueueIsQueueEmptyFromISR, %function
 2283              	xQueueIsQueueEmptyFromISR:
 2284              	.LFB94:
2280:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 2285              		.loc 1 2280 0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 0, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
 2290              	.LVL301:
2284:..\FreeRTOS/queue.c **** 	{
 2291              		.loc 1 2284 0
 2292 0000 836B     		ldr	r3, [r0, #56]
 2293 0002 0BB9     		cbnz	r3, .L171
2286:..\FreeRTOS/queue.c **** 	}
 2294              		.loc 1 2286 0
 2295 0004 0120     		movs	r0, #1
 2296              	.LVL302:
 2297 0006 7047     		bx	lr
 2298              	.LVL303:
 2299              	.L171:
2290:..\FreeRTOS/queue.c **** 	}
 2300              		.loc 1 2290 0
 2301 0008 0020     		movs	r0, #0
 2302              	.LVL304:
2294:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2303              		.loc 1 2294 0
 2304 000a 7047     		bx	lr
 2305              		.cfi_endproc
 2306              	.LFE94:
 2307              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2308              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2309              		.align	2
 2310              		.global	xQueueIsQueueFullFromISR
 2311              		.thumb
 2312              		.thumb_func
 2313              		.type	xQueueIsQueueFullFromISR, %function
 2314              	xQueueIsQueueFullFromISR:
 2315              	.LFB96:
2316:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2317:..\FreeRTOS/queue.c **** 
2318:..\FreeRTOS/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2319:..\FreeRTOS/queue.c **** {
 2316              		.loc 1 2319 0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              		@ link register save eliminated.
 2321              	.LVL305:
2320:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2321:..\FreeRTOS/queue.c **** 
2322:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
2323:..\FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 93


 2322              		.loc 1 2323 0
 2323 0000 826B     		ldr	r2, [r0, #56]
 2324 0002 C36B     		ldr	r3, [r0, #60]
 2325 0004 9A42     		cmp	r2, r3
 2326 0006 01D1     		bne	.L174
2324:..\FreeRTOS/queue.c **** 	{
2325:..\FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 2327              		.loc 1 2325 0
 2328 0008 0120     		movs	r0, #1
 2329              	.LVL306:
 2330 000a 7047     		bx	lr
 2331              	.LVL307:
 2332              	.L174:
2326:..\FreeRTOS/queue.c **** 	}
2327:..\FreeRTOS/queue.c **** 	else
2328:..\FreeRTOS/queue.c **** 	{
2329:..\FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 2333              		.loc 1 2329 0
 2334 000c 0020     		movs	r0, #0
 2335              	.LVL308:
2330:..\FreeRTOS/queue.c **** 	}
2331:..\FreeRTOS/queue.c **** 
2332:..\FreeRTOS/queue.c **** 	return xReturn;
2333:..\FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2336              		.loc 1 2333 0
 2337 000e 7047     		bx	lr
 2338              		.cfi_endproc
 2339              	.LFE96:
 2340              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2341              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2342              		.align	2
 2343              		.global	vQueueAddToRegistry
 2344              		.thumb
 2345              		.thumb_func
 2346              		.type	vQueueAddToRegistry, %function
 2347              	vQueueAddToRegistry:
 2348              	.LFB97:
2334:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2335:..\FreeRTOS/queue.c **** 
2336:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2337:..\FreeRTOS/queue.c **** 
2338:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2339:..\FreeRTOS/queue.c **** 	{
2340:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2341:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2342:..\FreeRTOS/queue.c **** 
2343:..\FreeRTOS/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2344:..\FreeRTOS/queue.c **** 		is required to prevent an interrupt removing something from the queue
2345:..\FreeRTOS/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2346:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2347:..\FreeRTOS/queue.c **** 		{
2348:..\FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2349:..\FreeRTOS/queue.c **** 			{
2350:..\FreeRTOS/queue.c **** 				/* The queue is full - do we want to block or just leave without
2351:..\FreeRTOS/queue.c **** 				posting? */
2352:..\FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2353:..\FreeRTOS/queue.c **** 				{
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 94


2354:..\FreeRTOS/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2355:..\FreeRTOS/queue.c **** 					return indicating that we need to block. */
2356:..\FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2357:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2358:..\FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2359:..\FreeRTOS/queue.c **** 				}
2360:..\FreeRTOS/queue.c **** 				else
2361:..\FreeRTOS/queue.c **** 				{
2362:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2363:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2364:..\FreeRTOS/queue.c **** 				}
2365:..\FreeRTOS/queue.c **** 			}
2366:..\FreeRTOS/queue.c **** 		}
2367:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2368:..\FreeRTOS/queue.c **** 
2369:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2370:..\FreeRTOS/queue.c **** 		{
2371:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2372:..\FreeRTOS/queue.c **** 			{
2373:..\FreeRTOS/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2374:..\FreeRTOS/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2375:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
2376:..\FreeRTOS/queue.c **** 
2377:..\FreeRTOS/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2378:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2379:..\FreeRTOS/queue.c **** 				{
2380:..\FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2381:..\FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2382:..\FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2383:..\FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2384:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2385:..\FreeRTOS/queue.c **** 					{
2386:..\FreeRTOS/queue.c **** 						/* The co-routine waiting has a higher priority so record
2387:..\FreeRTOS/queue.c **** 						that a yield might be appropriate. */
2388:..\FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2389:..\FreeRTOS/queue.c **** 					}
2390:..\FreeRTOS/queue.c **** 					else
2391:..\FreeRTOS/queue.c **** 					{
2392:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2393:..\FreeRTOS/queue.c **** 					}
2394:..\FreeRTOS/queue.c **** 				}
2395:..\FreeRTOS/queue.c **** 				else
2396:..\FreeRTOS/queue.c **** 				{
2397:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2398:..\FreeRTOS/queue.c **** 				}
2399:..\FreeRTOS/queue.c **** 			}
2400:..\FreeRTOS/queue.c **** 			else
2401:..\FreeRTOS/queue.c **** 			{
2402:..\FreeRTOS/queue.c **** 				xReturn = errQUEUE_FULL;
2403:..\FreeRTOS/queue.c **** 			}
2404:..\FreeRTOS/queue.c **** 		}
2405:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2406:..\FreeRTOS/queue.c **** 
2407:..\FreeRTOS/queue.c **** 		return xReturn;
2408:..\FreeRTOS/queue.c **** 	}
2409:..\FreeRTOS/queue.c **** 
2410:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 95


2411:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2412:..\FreeRTOS/queue.c **** 
2413:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2414:..\FreeRTOS/queue.c **** 
2415:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2416:..\FreeRTOS/queue.c **** 	{
2417:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2418:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2419:..\FreeRTOS/queue.c **** 
2420:..\FreeRTOS/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2421:..\FreeRTOS/queue.c **** 		is required to prevent an interrupt adding something to the queue
2422:..\FreeRTOS/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2423:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2424:..\FreeRTOS/queue.c **** 		{
2425:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2426:..\FreeRTOS/queue.c **** 			{
2427:..\FreeRTOS/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2428:..\FreeRTOS/queue.c **** 				leave with nothing? */
2429:..\FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2430:..\FreeRTOS/queue.c **** 				{
2431:..\FreeRTOS/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2432:..\FreeRTOS/queue.c **** 					indicating that we need to block. */
2433:..\FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2434:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2435:..\FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2436:..\FreeRTOS/queue.c **** 				}
2437:..\FreeRTOS/queue.c **** 				else
2438:..\FreeRTOS/queue.c **** 				{
2439:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2440:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2441:..\FreeRTOS/queue.c **** 				}
2442:..\FreeRTOS/queue.c **** 			}
2443:..\FreeRTOS/queue.c **** 			else
2444:..\FreeRTOS/queue.c **** 			{
2445:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2446:..\FreeRTOS/queue.c **** 			}
2447:..\FreeRTOS/queue.c **** 		}
2448:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2449:..\FreeRTOS/queue.c **** 
2450:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2451:..\FreeRTOS/queue.c **** 		{
2452:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2453:..\FreeRTOS/queue.c **** 			{
2454:..\FreeRTOS/queue.c **** 				/* Data is available from the queue. */
2455:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2456:..\FreeRTOS/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2457:..\FreeRTOS/queue.c **** 				{
2458:..\FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2459:..\FreeRTOS/queue.c **** 				}
2460:..\FreeRTOS/queue.c **** 				else
2461:..\FreeRTOS/queue.c **** 				{
2462:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2463:..\FreeRTOS/queue.c **** 				}
2464:..\FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2465:..\FreeRTOS/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2466:..\FreeRTOS/queue.c **** 
2467:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 96


2468:..\FreeRTOS/queue.c **** 
2469:..\FreeRTOS/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2470:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2471:..\FreeRTOS/queue.c **** 				{
2472:..\FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2473:..\FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2474:..\FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2475:..\FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2476:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2477:..\FreeRTOS/queue.c **** 					{
2478:..\FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2479:..\FreeRTOS/queue.c **** 					}
2480:..\FreeRTOS/queue.c **** 					else
2481:..\FreeRTOS/queue.c **** 					{
2482:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2483:..\FreeRTOS/queue.c **** 					}
2484:..\FreeRTOS/queue.c **** 				}
2485:..\FreeRTOS/queue.c **** 				else
2486:..\FreeRTOS/queue.c **** 				{
2487:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2488:..\FreeRTOS/queue.c **** 				}
2489:..\FreeRTOS/queue.c **** 			}
2490:..\FreeRTOS/queue.c **** 			else
2491:..\FreeRTOS/queue.c **** 			{
2492:..\FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2493:..\FreeRTOS/queue.c **** 			}
2494:..\FreeRTOS/queue.c **** 		}
2495:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2496:..\FreeRTOS/queue.c **** 
2497:..\FreeRTOS/queue.c **** 		return xReturn;
2498:..\FreeRTOS/queue.c **** 	}
2499:..\FreeRTOS/queue.c **** 
2500:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2501:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2502:..\FreeRTOS/queue.c **** 
2503:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2504:..\FreeRTOS/queue.c **** 
2505:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2506:..\FreeRTOS/queue.c **** 	{
2507:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2508:..\FreeRTOS/queue.c **** 
2509:..\FreeRTOS/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2510:..\FreeRTOS/queue.c **** 		exit without doing anything. */
2511:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2512:..\FreeRTOS/queue.c **** 		{
2513:..\FreeRTOS/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2514:..\FreeRTOS/queue.c **** 
2515:..\FreeRTOS/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2516:..\FreeRTOS/queue.c **** 			co-routine has not already been woken. */
2517:..\FreeRTOS/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2518:..\FreeRTOS/queue.c **** 			{
2519:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2520:..\FreeRTOS/queue.c **** 				{
2521:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2522:..\FreeRTOS/queue.c **** 					{
2523:..\FreeRTOS/queue.c **** 						return pdTRUE;
2524:..\FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 97


2525:..\FreeRTOS/queue.c **** 					else
2526:..\FreeRTOS/queue.c **** 					{
2527:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2528:..\FreeRTOS/queue.c **** 					}
2529:..\FreeRTOS/queue.c **** 				}
2530:..\FreeRTOS/queue.c **** 				else
2531:..\FreeRTOS/queue.c **** 				{
2532:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2533:..\FreeRTOS/queue.c **** 				}
2534:..\FreeRTOS/queue.c **** 			}
2535:..\FreeRTOS/queue.c **** 			else
2536:..\FreeRTOS/queue.c **** 			{
2537:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2538:..\FreeRTOS/queue.c **** 			}
2539:..\FreeRTOS/queue.c **** 		}
2540:..\FreeRTOS/queue.c **** 		else
2541:..\FreeRTOS/queue.c **** 		{
2542:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2543:..\FreeRTOS/queue.c **** 		}
2544:..\FreeRTOS/queue.c **** 
2545:..\FreeRTOS/queue.c **** 		return xCoRoutinePreviouslyWoken;
2546:..\FreeRTOS/queue.c **** 	}
2547:..\FreeRTOS/queue.c **** 
2548:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2549:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2550:..\FreeRTOS/queue.c **** 
2551:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2552:..\FreeRTOS/queue.c **** 
2553:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2554:..\FreeRTOS/queue.c **** 	{
2555:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2556:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2557:..\FreeRTOS/queue.c **** 
2558:..\FreeRTOS/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2559:..\FreeRTOS/queue.c **** 		not then just leave without doing anything. */
2560:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2561:..\FreeRTOS/queue.c **** 		{
2562:..\FreeRTOS/queue.c **** 			/* Copy the data from the queue. */
2563:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2564:..\FreeRTOS/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2565:..\FreeRTOS/queue.c **** 			{
2566:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2567:..\FreeRTOS/queue.c **** 			}
2568:..\FreeRTOS/queue.c **** 			else
2569:..\FreeRTOS/queue.c **** 			{
2570:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2571:..\FreeRTOS/queue.c **** 			}
2572:..\FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2573:..\FreeRTOS/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2574:..\FreeRTOS/queue.c **** 
2575:..\FreeRTOS/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2576:..\FreeRTOS/queue.c **** 			{
2577:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2578:..\FreeRTOS/queue.c **** 				{
2579:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2580:..\FreeRTOS/queue.c **** 					{
2581:..\FreeRTOS/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 98


2582:..\FreeRTOS/queue.c **** 					}
2583:..\FreeRTOS/queue.c **** 					else
2584:..\FreeRTOS/queue.c **** 					{
2585:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2586:..\FreeRTOS/queue.c **** 					}
2587:..\FreeRTOS/queue.c **** 				}
2588:..\FreeRTOS/queue.c **** 				else
2589:..\FreeRTOS/queue.c **** 				{
2590:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2591:..\FreeRTOS/queue.c **** 				}
2592:..\FreeRTOS/queue.c **** 			}
2593:..\FreeRTOS/queue.c **** 			else
2594:..\FreeRTOS/queue.c **** 			{
2595:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2596:..\FreeRTOS/queue.c **** 			}
2597:..\FreeRTOS/queue.c **** 
2598:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
2599:..\FreeRTOS/queue.c **** 		}
2600:..\FreeRTOS/queue.c **** 		else
2601:..\FreeRTOS/queue.c **** 		{
2602:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2603:..\FreeRTOS/queue.c **** 		}
2604:..\FreeRTOS/queue.c **** 
2605:..\FreeRTOS/queue.c **** 		return xReturn;
2606:..\FreeRTOS/queue.c **** 	}
2607:..\FreeRTOS/queue.c **** 
2608:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2609:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2610:..\FreeRTOS/queue.c **** 
2611:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2612:..\FreeRTOS/queue.c **** 
2613:..\FreeRTOS/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2614:..\FreeRTOS/queue.c **** 	{
 2349              		.loc 1 2614 0
 2350              		.cfi_startproc
 2351              		@ args = 0, pretend = 0, frame = 0
 2352              		@ frame_needed = 0, uses_anonymous_args = 0
 2353              		@ link register save eliminated.
 2354              	.LVL309:
2615:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2616:..\FreeRTOS/queue.c **** 
2617:..\FreeRTOS/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2618:..\FreeRTOS/queue.c **** 		a free slot. */
2619:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2355              		.loc 1 2619 0
 2356 0000 0023     		movs	r3, #0
 2357 0002 0BE0     		b	.L176
 2358              	.LVL310:
 2359              	.L179:
2620:..\FreeRTOS/queue.c **** 		{
2621:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2360              		.loc 1 2621 0
 2361 0004 074A     		ldr	r2, .L180
 2362 0006 52F83320 		ldr	r2, [r2, r3, lsl #3]
 2363 000a 32B9     		cbnz	r2, .L177
2622:..\FreeRTOS/queue.c **** 			{
2623:..\FreeRTOS/queue.c **** 				/* Store the information on this queue. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 99


2624:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2364              		.loc 1 2624 0
 2365 000c 054A     		ldr	r2, .L180
 2366 000e 42F83310 		str	r1, [r2, r3, lsl #3]
2625:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2367              		.loc 1 2625 0
 2368 0012 02EBC303 		add	r3, r2, r3, lsl #3
 2369              	.LVL311:
 2370 0016 5860     		str	r0, [r3, #4]
2626:..\FreeRTOS/queue.c **** 
2627:..\FreeRTOS/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2628:..\FreeRTOS/queue.c **** 				break;
 2371              		.loc 1 2628 0
 2372 0018 7047     		bx	lr
 2373              	.LVL312:
 2374              	.L177:
2619:..\FreeRTOS/queue.c **** 		{
 2375              		.loc 1 2619 0 discriminator 2
 2376 001a 0133     		adds	r3, r3, #1
 2377              	.LVL313:
 2378              	.L176:
2619:..\FreeRTOS/queue.c **** 		{
 2379              		.loc 1 2619 0 is_stmt 0 discriminator 1
 2380 001c 092B     		cmp	r3, #9
 2381 001e F1D9     		bls	.L179
 2382 0020 7047     		bx	lr
 2383              	.L181:
 2384 0022 00BF     		.align	2
 2385              	.L180:
 2386 0024 00000000 		.word	xQueueRegistry
 2387              		.cfi_endproc
 2388              	.LFE97:
 2389              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2390              		.section	.text.pcQueueGetName,"ax",%progbits
 2391              		.align	2
 2392              		.global	pcQueueGetName
 2393              		.thumb
 2394              		.thumb_func
 2395              		.type	pcQueueGetName, %function
 2396              	pcQueueGetName:
 2397              	.LFB98:
2629:..\FreeRTOS/queue.c **** 			}
2630:..\FreeRTOS/queue.c **** 			else
2631:..\FreeRTOS/queue.c **** 			{
2632:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2633:..\FreeRTOS/queue.c **** 			}
2634:..\FreeRTOS/queue.c **** 		}
2635:..\FreeRTOS/queue.c **** 	}
2636:..\FreeRTOS/queue.c **** 
2637:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2638:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2639:..\FreeRTOS/queue.c **** 
2640:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2641:..\FreeRTOS/queue.c **** 
2642:..\FreeRTOS/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2643:..\FreeRTOS/queue.c **** 	{
 2398              		.loc 1 2643 0 is_stmt 1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 100


 2399              		.cfi_startproc
 2400              		@ args = 0, pretend = 0, frame = 0
 2401              		@ frame_needed = 0, uses_anonymous_args = 0
 2402              		@ link register save eliminated.
 2403              	.LVL314:
2644:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2645:..\FreeRTOS/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2646:..\FreeRTOS/queue.c **** 
2647:..\FreeRTOS/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2648:..\FreeRTOS/queue.c **** 		removing entries from the registry while it is being searched. */
2649:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2404              		.loc 1 2649 0
 2405 0000 0023     		movs	r3, #0
 2406 0002 0AE0     		b	.L183
 2407              	.LVL315:
 2408              	.L186:
2650:..\FreeRTOS/queue.c **** 		{
2651:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2409              		.loc 1 2651 0
 2410 0004 074A     		ldr	r2, .L187
 2411 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2412 000a 5268     		ldr	r2, [r2, #4]
 2413 000c 8242     		cmp	r2, r0
 2414 000e 03D1     		bne	.L184
2652:..\FreeRTOS/queue.c **** 			{
2653:..\FreeRTOS/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2415              		.loc 1 2653 0
 2416 0010 044A     		ldr	r2, .L187
 2417 0012 52F83300 		ldr	r0, [r2, r3, lsl #3]
 2418              	.LVL316:
2654:..\FreeRTOS/queue.c **** 				break;
 2419              		.loc 1 2654 0
 2420 0016 7047     		bx	lr
 2421              	.LVL317:
 2422              	.L184:
2649:..\FreeRTOS/queue.c **** 		{
 2423              		.loc 1 2649 0 discriminator 2
 2424 0018 0133     		adds	r3, r3, #1
 2425              	.LVL318:
 2426              	.L183:
2649:..\FreeRTOS/queue.c **** 		{
 2427              		.loc 1 2649 0 is_stmt 0 discriminator 1
 2428 001a 092B     		cmp	r3, #9
 2429 001c F2D9     		bls	.L186
2645:..\FreeRTOS/queue.c **** 
 2430              		.loc 1 2645 0 is_stmt 1
 2431 001e 0020     		movs	r0, #0
 2432              	.LVL319:
2655:..\FreeRTOS/queue.c **** 			}
2656:..\FreeRTOS/queue.c **** 			else
2657:..\FreeRTOS/queue.c **** 			{
2658:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2659:..\FreeRTOS/queue.c **** 			}
2660:..\FreeRTOS/queue.c **** 		}
2661:..\FreeRTOS/queue.c **** 
2662:..\FreeRTOS/queue.c **** 		return pcReturn;
2663:..\FreeRTOS/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 101


 2433              		.loc 1 2663 0
 2434 0020 7047     		bx	lr
 2435              	.L188:
 2436 0022 00BF     		.align	2
 2437              	.L187:
 2438 0024 00000000 		.word	xQueueRegistry
 2439              		.cfi_endproc
 2440              	.LFE98:
 2441              		.size	pcQueueGetName, .-pcQueueGetName
 2442              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2443              		.align	2
 2444              		.global	vQueueUnregisterQueue
 2445              		.thumb
 2446              		.thumb_func
 2447              		.type	vQueueUnregisterQueue, %function
 2448              	vQueueUnregisterQueue:
 2449              	.LFB99:
2664:..\FreeRTOS/queue.c **** 
2665:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2666:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2667:..\FreeRTOS/queue.c **** 
2668:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2669:..\FreeRTOS/queue.c **** 
2670:..\FreeRTOS/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2671:..\FreeRTOS/queue.c **** 	{
 2450              		.loc 1 2671 0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 0
 2453              		@ frame_needed = 0, uses_anonymous_args = 0
 2454              		@ link register save eliminated.
 2455              	.LVL320:
2672:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2673:..\FreeRTOS/queue.c **** 
2674:..\FreeRTOS/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2675:..\FreeRTOS/queue.c **** 		registry. */
2676:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2456              		.loc 1 2676 0
 2457 0000 0023     		movs	r3, #0
 2458 0002 0EE0     		b	.L190
 2459              	.LVL321:
 2460              	.L193:
2677:..\FreeRTOS/queue.c **** 		{
2678:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2461              		.loc 1 2678 0
 2462 0004 084A     		ldr	r2, .L194
 2463 0006 02EBC302 		add	r2, r2, r3, lsl #3
 2464 000a 5268     		ldr	r2, [r2, #4]
 2465 000c 8242     		cmp	r2, r0
 2466 000e 07D1     		bne	.L191
2679:..\FreeRTOS/queue.c **** 			{
2680:..\FreeRTOS/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2681:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2467              		.loc 1 2681 0
 2468 0010 054A     		ldr	r2, .L194
 2469 0012 0021     		movs	r1, #0
 2470 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2682:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 102


2683:..\FreeRTOS/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2684:..\FreeRTOS/queue.c **** 				appear in the registry twice if it is added, removed, then
2685:..\FreeRTOS/queue.c **** 				added again. */
2686:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2471              		.loc 1 2686 0
 2472 0018 02EBC303 		add	r3, r2, r3, lsl #3
 2473              	.LVL322:
 2474 001c 5960     		str	r1, [r3, #4]
2687:..\FreeRTOS/queue.c **** 				break;
 2475              		.loc 1 2687 0
 2476 001e 7047     		bx	lr
 2477              	.LVL323:
 2478              	.L191:
2676:..\FreeRTOS/queue.c **** 		{
 2479              		.loc 1 2676 0 discriminator 2
 2480 0020 0133     		adds	r3, r3, #1
 2481              	.LVL324:
 2482              	.L190:
2676:..\FreeRTOS/queue.c **** 		{
 2483              		.loc 1 2676 0 is_stmt 0 discriminator 1
 2484 0022 092B     		cmp	r3, #9
 2485 0024 EED9     		bls	.L193
 2486 0026 7047     		bx	lr
 2487              	.L195:
 2488              		.align	2
 2489              	.L194:
 2490 0028 00000000 		.word	xQueueRegistry
 2491              		.cfi_endproc
 2492              	.LFE99:
 2493              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2494              		.section	.text.vQueueDelete,"ax",%progbits
 2495              		.align	2
 2496              		.global	vQueueDelete
 2497              		.thumb
 2498              		.thumb_func
 2499              		.type	vQueueDelete, %function
 2500              	vQueueDelete:
 2501              	.LFB88:
1943:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2502              		.loc 1 1943 0 is_stmt 1
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 0
 2505              		@ frame_needed = 0, uses_anonymous_args = 0
 2506              	.LVL325:
 2507 0000 10B5     		push	{r4, lr}
 2508              		.cfi_def_cfa_offset 8
 2509              		.cfi_offset 4, -8
 2510              		.cfi_offset 14, -4
 2511 0002 0446     		mov	r4, r0
 2512              	.LVL326:
1951:..\FreeRTOS/queue.c **** 	}
 2513              		.loc 1 1951 0
 2514 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 2515              	.LVL327:
1959:..\FreeRTOS/queue.c **** 	}
 2516              		.loc 1 1959 0
 2517 0008 2046     		mov	r0, r4
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 103


 2518 000a FFF7FEFF 		bl	vPortFree
 2519              	.LVL328:
 2520 000e 10BD     		pop	{r4, pc}
 2521              		.cfi_endproc
 2522              	.LFE88:
 2523              		.size	vQueueDelete, .-vQueueDelete
 2524              		.comm	xQueueRegistry,80,4
 2525              		.text
 2526              	.Letext0:
 2527              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2528              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2529              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2530              		.file 6 "..\\FreeRTOS\\include/list.h"
 2531              		.file 7 "..\\FreeRTOS\\include/task.h"
 2532              		.file 8 "..\\FreeRTOS\\include/queue.h"
 2533              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 2534              		.file 10 "..\\FreeRTOS\\include/portable.h"
 2535              		.section	.debug_info,"",%progbits
 2536              	.Ldebug_info0:
 2537 0000 AD180000 		.4byte	0x18ad
 2538 0004 0400     		.2byte	0x4
 2539 0006 00000000 		.4byte	.Ldebug_abbrev0
 2540 000a 04       		.byte	0x4
 2541 000b 01       		.uleb128 0x1
 2542 000c 2F030000 		.4byte	.LASF149
 2543 0010 0C       		.byte	0xc
 2544 0011 9F000000 		.4byte	.LASF150
 2545 0015 DB010000 		.4byte	.LASF151
 2546 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 2547 001d 00000000 		.4byte	0
 2548 0021 00000000 		.4byte	.Ldebug_line0
 2549 0025 02       		.uleb128 0x2
 2550 0026 CB030000 		.4byte	.LASF3
 2551 002a 03       		.byte	0x3
 2552 002b D8       		.byte	0xd8
 2553 002c 30000000 		.4byte	0x30
 2554 0030 03       		.uleb128 0x3
 2555 0031 04       		.byte	0x4
 2556 0032 07       		.byte	0x7
 2557 0033 92000000 		.4byte	.LASF0
 2558 0037 04       		.uleb128 0x4
 2559 0038 04       		.byte	0x4
 2560 0039 05       		.byte	0x5
 2561 003a 696E7400 		.ascii	"int\000"
 2562 003e 03       		.uleb128 0x3
 2563 003f 08       		.byte	0x8
 2564 0040 05       		.byte	0x5
 2565 0041 CE050000 		.4byte	.LASF1
 2566 0045 03       		.uleb128 0x3
 2567 0046 08       		.byte	0x8
 2568 0047 04       		.byte	0x4
 2569 0048 0E070000 		.4byte	.LASF2
 2570 004c 02       		.uleb128 0x2
 2571 004d F7060000 		.4byte	.LASF4
 2572 0051 04       		.byte	0x4
 2573 0052 1B       		.byte	0x1b
 2574 0053 57000000 		.4byte	0x57
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 104


 2575 0057 03       		.uleb128 0x3
 2576 0058 01       		.byte	0x1
 2577 0059 06       		.byte	0x6
 2578 005a A0090000 		.4byte	.LASF5
 2579 005e 02       		.uleb128 0x2
 2580 005f 25080000 		.4byte	.LASF6
 2581 0063 04       		.byte	0x4
 2582 0064 1D       		.byte	0x1d
 2583 0065 69000000 		.4byte	0x69
 2584 0069 03       		.uleb128 0x3
 2585 006a 01       		.byte	0x1
 2586 006b 08       		.byte	0x8
 2587 006c B3080000 		.4byte	.LASF7
 2588 0070 03       		.uleb128 0x3
 2589 0071 02       		.byte	0x2
 2590 0072 05       		.byte	0x5
 2591 0073 75070000 		.4byte	.LASF8
 2592 0077 03       		.uleb128 0x3
 2593 0078 02       		.byte	0x2
 2594 0079 07       		.byte	0x7
 2595 007a AC090000 		.4byte	.LASF9
 2596 007e 02       		.uleb128 0x2
 2597 007f D0000000 		.4byte	.LASF10
 2598 0083 04       		.byte	0x4
 2599 0084 3F       		.byte	0x3f
 2600 0085 89000000 		.4byte	0x89
 2601 0089 03       		.uleb128 0x3
 2602 008a 04       		.byte	0x4
 2603 008b 05       		.byte	0x5
 2604 008c 8A070000 		.4byte	.LASF11
 2605 0090 02       		.uleb128 0x2
 2606 0091 C1080000 		.4byte	.LASF12
 2607 0095 04       		.byte	0x4
 2608 0096 41       		.byte	0x41
 2609 0097 9B000000 		.4byte	0x9b
 2610 009b 03       		.uleb128 0x3
 2611 009c 04       		.byte	0x4
 2612 009d 07       		.byte	0x7
 2613 009e 59080000 		.4byte	.LASF13
 2614 00a2 03       		.uleb128 0x3
 2615 00a3 08       		.byte	0x8
 2616 00a4 07       		.byte	0x7
 2617 00a5 95020000 		.4byte	.LASF14
 2618 00a9 03       		.uleb128 0x3
 2619 00aa 04       		.byte	0x4
 2620 00ab 07       		.byte	0x7
 2621 00ac 3F080000 		.4byte	.LASF15
 2622 00b0 05       		.uleb128 0x5
 2623 00b1 04       		.byte	0x4
 2624 00b2 03       		.uleb128 0x3
 2625 00b3 01       		.byte	0x1
 2626 00b4 08       		.byte	0x8
 2627 00b5 C7040000 		.4byte	.LASF16
 2628 00b9 06       		.uleb128 0x6
 2629 00ba 04       		.byte	0x4
 2630 00bb BF000000 		.4byte	0xbf
 2631 00bf 07       		.uleb128 0x7
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 105


 2632 00c0 B2000000 		.4byte	0xb2
 2633 00c4 06       		.uleb128 0x6
 2634 00c5 04       		.byte	0x4
 2635 00c6 CA000000 		.4byte	0xca
 2636 00ca 08       		.uleb128 0x8
 2637 00cb 02       		.uleb128 0x2
 2638 00cc 44020000 		.4byte	.LASF17
 2639 00d0 05       		.byte	0x5
 2640 00d1 14       		.byte	0x14
 2641 00d2 4C000000 		.4byte	0x4c
 2642 00d6 02       		.uleb128 0x2
 2643 00d7 7A050000 		.4byte	.LASF18
 2644 00db 05       		.byte	0x5
 2645 00dc 18       		.byte	0x18
 2646 00dd 5E000000 		.4byte	0x5e
 2647 00e1 02       		.uleb128 0x2
 2648 00e2 80080000 		.4byte	.LASF19
 2649 00e6 05       		.byte	0x5
 2650 00e7 2C       		.byte	0x2c
 2651 00e8 7E000000 		.4byte	0x7e
 2652 00ec 02       		.uleb128 0x2
 2653 00ed 3B020000 		.4byte	.LASF20
 2654 00f1 05       		.byte	0x5
 2655 00f2 30       		.byte	0x30
 2656 00f3 90000000 		.4byte	0x90
 2657 00f7 03       		.uleb128 0x3
 2658 00f8 04       		.byte	0x4
 2659 00f9 04       		.byte	0x4
 2660 00fa 7F020000 		.4byte	.LASF21
 2661 00fe 03       		.uleb128 0x3
 2662 00ff 08       		.byte	0x8
 2663 0100 04       		.byte	0x4
 2664 0101 CD090000 		.4byte	.LASF22
 2665 0105 02       		.uleb128 0x2
 2666 0106 EF050000 		.4byte	.LASF23
 2667 010a 02       		.byte	0x2
 2668 010b 43       		.byte	0x43
 2669 010c 89000000 		.4byte	0x89
 2670 0110 02       		.uleb128 0x2
 2671 0111 F3040000 		.4byte	.LASF24
 2672 0115 02       		.byte	0x2
 2673 0116 44       		.byte	0x44
 2674 0117 9B000000 		.4byte	0x9b
 2675 011b 02       		.uleb128 0x2
 2676 011c EC060000 		.4byte	.LASF25
 2677 0120 02       		.byte	0x2
 2678 0121 4A       		.byte	0x4a
 2679 0122 EC000000 		.4byte	0xec
 2680 0126 06       		.uleb128 0x6
 2681 0127 04       		.byte	0x4
 2682 0128 D6000000 		.4byte	0xd6
 2683 012c 09       		.uleb128 0x9
 2684 012d DA000000 		.4byte	.LASF32
 2685 0131 14       		.byte	0x14
 2686 0132 06       		.byte	0x6
 2687 0133 8C       		.byte	0x8c
 2688 0134 75010000 		.4byte	0x175
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 106


 2689 0138 0A       		.uleb128 0xa
 2690 0139 7F070000 		.4byte	.LASF26
 2691 013d 06       		.byte	0x6
 2692 013e 8F       		.byte	0x8f
 2693 013f 1B010000 		.4byte	0x11b
 2694 0143 00       		.byte	0
 2695 0144 0A       		.uleb128 0xa
 2696 0145 35060000 		.4byte	.LASF27
 2697 0149 06       		.byte	0x6
 2698 014a 90       		.byte	0x90
 2699 014b 75010000 		.4byte	0x175
 2700 014f 04       		.byte	0x4
 2701 0150 0A       		.uleb128 0xa
 2702 0151 EA020000 		.4byte	.LASF28
 2703 0155 06       		.byte	0x6
 2704 0156 91       		.byte	0x91
 2705 0157 75010000 		.4byte	0x175
 2706 015b 08       		.byte	0x8
 2707 015c 0A       		.uleb128 0xa
 2708 015d 22090000 		.4byte	.LASF29
 2709 0161 06       		.byte	0x6
 2710 0162 92       		.byte	0x92
 2711 0163 B0000000 		.4byte	0xb0
 2712 0167 0C       		.byte	0xc
 2713 0168 0A       		.uleb128 0xa
 2714 0169 48070000 		.4byte	.LASF30
 2715 016d 06       		.byte	0x6
 2716 016e 93       		.byte	0x93
 2717 016f B0000000 		.4byte	0xb0
 2718 0173 10       		.byte	0x10
 2719 0174 00       		.byte	0
 2720 0175 06       		.uleb128 0x6
 2721 0176 04       		.byte	0x4
 2722 0177 2C010000 		.4byte	0x12c
 2723 017b 02       		.uleb128 0x2
 2724 017c CC040000 		.4byte	.LASF31
 2725 0180 06       		.byte	0x6
 2726 0181 96       		.byte	0x96
 2727 0182 2C010000 		.4byte	0x12c
 2728 0186 09       		.uleb128 0x9
 2729 0187 EF030000 		.4byte	.LASF33
 2730 018b 0C       		.byte	0xc
 2731 018c 06       		.byte	0x6
 2732 018d 98       		.byte	0x98
 2733 018e B7010000 		.4byte	0x1b7
 2734 0192 0A       		.uleb128 0xa
 2735 0193 7F070000 		.4byte	.LASF26
 2736 0197 06       		.byte	0x6
 2737 0198 9B       		.byte	0x9b
 2738 0199 1B010000 		.4byte	0x11b
 2739 019d 00       		.byte	0
 2740 019e 0A       		.uleb128 0xa
 2741 019f 35060000 		.4byte	.LASF27
 2742 01a3 06       		.byte	0x6
 2743 01a4 9C       		.byte	0x9c
 2744 01a5 75010000 		.4byte	0x175
 2745 01a9 04       		.byte	0x4
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 107


 2746 01aa 0A       		.uleb128 0xa
 2747 01ab EA020000 		.4byte	.LASF28
 2748 01af 06       		.byte	0x6
 2749 01b0 9D       		.byte	0x9d
 2750 01b1 75010000 		.4byte	0x175
 2751 01b5 08       		.byte	0x8
 2752 01b6 00       		.byte	0
 2753 01b7 02       		.uleb128 0x2
 2754 01b8 6B050000 		.4byte	.LASF34
 2755 01bc 06       		.byte	0x6
 2756 01bd 9F       		.byte	0x9f
 2757 01be 86010000 		.4byte	0x186
 2758 01c2 09       		.uleb128 0x9
 2759 01c3 FF030000 		.4byte	.LASF35
 2760 01c7 14       		.byte	0x14
 2761 01c8 06       		.byte	0x6
 2762 01c9 A4       		.byte	0xa4
 2763 01ca F3010000 		.4byte	0x1f3
 2764 01ce 0A       		.uleb128 0xa
 2765 01cf 00000000 		.4byte	.LASF36
 2766 01d3 06       		.byte	0x6
 2767 01d4 A7       		.byte	0xa7
 2768 01d5 F3010000 		.4byte	0x1f3
 2769 01d9 00       		.byte	0
 2770 01da 0A       		.uleb128 0xa
 2771 01db B3000000 		.4byte	.LASF37
 2772 01df 06       		.byte	0x6
 2773 01e0 A8       		.byte	0xa8
 2774 01e1 F8010000 		.4byte	0x1f8
 2775 01e5 04       		.byte	0x4
 2776 01e6 0A       		.uleb128 0xa
 2777 01e7 44050000 		.4byte	.LASF38
 2778 01eb 06       		.byte	0x6
 2779 01ec A9       		.byte	0xa9
 2780 01ed B7010000 		.4byte	0x1b7
 2781 01f1 08       		.byte	0x8
 2782 01f2 00       		.byte	0
 2783 01f3 0B       		.uleb128 0xb
 2784 01f4 10010000 		.4byte	0x110
 2785 01f8 06       		.uleb128 0x6
 2786 01f9 04       		.byte	0x4
 2787 01fa 7B010000 		.4byte	0x17b
 2788 01fe 02       		.uleb128 0x2
 2789 01ff CA060000 		.4byte	.LASF39
 2790 0203 06       		.byte	0x6
 2791 0204 AB       		.byte	0xab
 2792 0205 C2010000 		.4byte	0x1c2
 2793 0209 09       		.uleb128 0x9
 2794 020a BB000000 		.4byte	.LASF40
 2795 020e 08       		.byte	0x8
 2796 020f 07       		.byte	0x7
 2797 0210 63       		.byte	0x63
 2798 0211 2E020000 		.4byte	0x22e
 2799 0215 0A       		.uleb128 0xa
 2800 0216 2C010000 		.4byte	.LASF41
 2801 021a 07       		.byte	0x7
 2802 021b 65       		.byte	0x65
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 108


 2803 021c 05010000 		.4byte	0x105
 2804 0220 00       		.byte	0
 2805 0221 0A       		.uleb128 0xa
 2806 0222 11060000 		.4byte	.LASF42
 2807 0226 07       		.byte	0x7
 2808 0227 66       		.byte	0x66
 2809 0228 1B010000 		.4byte	0x11b
 2810 022c 04       		.byte	0x4
 2811 022d 00       		.byte	0
 2812 022e 02       		.uleb128 0x2
 2813 022f 51060000 		.4byte	.LASF43
 2814 0233 07       		.byte	0x7
 2815 0234 67       		.byte	0x67
 2816 0235 09020000 		.4byte	0x209
 2817 0239 02       		.uleb128 0x2
 2818 023a 36050000 		.4byte	.LASF44
 2819 023e 08       		.byte	0x8
 2820 023f 2F       		.byte	0x2f
 2821 0240 B0000000 		.4byte	0xb0
 2822 0244 0C       		.uleb128 0xc
 2823 0245 04       		.byte	0x4
 2824 0246 01       		.byte	0x1
 2825 0247 5F       		.byte	0x5f
 2826 0248 63020000 		.4byte	0x263
 2827 024c 0D       		.uleb128 0xd
 2828 024d A3010000 		.4byte	.LASF45
 2829 0251 01       		.byte	0x1
 2830 0252 61       		.byte	0x61
 2831 0253 63020000 		.4byte	0x263
 2832 0257 0D       		.uleb128 0xd
 2833 0258 4E010000 		.4byte	.LASF46
 2834 025c 01       		.byte	0x1
 2835 025d 62       		.byte	0x62
 2836 025e 10010000 		.4byte	0x110
 2837 0262 00       		.byte	0
 2838 0263 06       		.uleb128 0x6
 2839 0264 04       		.byte	0x4
 2840 0265 CB000000 		.4byte	0xcb
 2841 0269 09       		.uleb128 0x9
 2842 026a 85020000 		.4byte	.LASF47
 2843 026e 48       		.byte	0x48
 2844 026f 01       		.byte	0x1
 2845 0270 59       		.byte	0x59
 2846 0271 F8020000 		.4byte	0x2f8
 2847 0275 0A       		.uleb128 0xa
 2848 0276 44090000 		.4byte	.LASF48
 2849 027a 01       		.byte	0x1
 2850 027b 5B       		.byte	0x5b
 2851 027c 63020000 		.4byte	0x263
 2852 0280 00       		.byte	0
 2853 0281 0A       		.uleb128 0xa
 2854 0282 1E080000 		.4byte	.LASF49
 2855 0286 01       		.byte	0x1
 2856 0287 5C       		.byte	0x5c
 2857 0288 63020000 		.4byte	0x263
 2858 028c 04       		.byte	0x4
 2859 028d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 109


 2860 028e E2060000 		.4byte	.LASF50
 2861 0292 01       		.byte	0x1
 2862 0293 5D       		.byte	0x5d
 2863 0294 63020000 		.4byte	0x263
 2864 0298 08       		.byte	0x8
 2865 0299 0E       		.uleb128 0xe
 2866 029a 7500     		.ascii	"u\000"
 2867 029c 01       		.byte	0x1
 2868 029d 63       		.byte	0x63
 2869 029e 44020000 		.4byte	0x244
 2870 02a2 0C       		.byte	0xc
 2871 02a3 0A       		.uleb128 0xa
 2872 02a4 F9000000 		.4byte	.LASF51
 2873 02a8 01       		.byte	0x1
 2874 02a9 65       		.byte	0x65
 2875 02aa FE010000 		.4byte	0x1fe
 2876 02ae 10       		.byte	0x10
 2877 02af 0A       		.uleb128 0xa
 2878 02b0 45000000 		.4byte	.LASF52
 2879 02b4 01       		.byte	0x1
 2880 02b5 66       		.byte	0x66
 2881 02b6 FE010000 		.4byte	0x1fe
 2882 02ba 24       		.byte	0x24
 2883 02bb 0A       		.uleb128 0xa
 2884 02bc F5020000 		.4byte	.LASF53
 2885 02c0 01       		.byte	0x1
 2886 02c1 68       		.byte	0x68
 2887 02c2 F3010000 		.4byte	0x1f3
 2888 02c6 38       		.byte	0x38
 2889 02c7 0A       		.uleb128 0xa
 2890 02c8 6C070000 		.4byte	.LASF54
 2891 02cc 01       		.byte	0x1
 2892 02cd 69       		.byte	0x69
 2893 02ce 10010000 		.4byte	0x110
 2894 02d2 3C       		.byte	0x3c
 2895 02d3 0A       		.uleb128 0xa
 2896 02d4 87040000 		.4byte	.LASF55
 2897 02d8 01       		.byte	0x1
 2898 02d9 6A       		.byte	0x6a
 2899 02da 10010000 		.4byte	0x110
 2900 02de 40       		.byte	0x40
 2901 02df 0A       		.uleb128 0xa
 2902 02e0 DE090000 		.4byte	.LASF56
 2903 02e4 01       		.byte	0x1
 2904 02e5 6C       		.byte	0x6c
 2905 02e6 F8020000 		.4byte	0x2f8
 2906 02ea 44       		.byte	0x44
 2907 02eb 0A       		.uleb128 0xa
 2908 02ec 24010000 		.4byte	.LASF57
 2909 02f0 01       		.byte	0x1
 2910 02f1 6D       		.byte	0x6d
 2911 02f2 F8020000 		.4byte	0x2f8
 2912 02f6 45       		.byte	0x45
 2913 02f7 00       		.byte	0
 2914 02f8 0B       		.uleb128 0xb
 2915 02f9 CB000000 		.4byte	0xcb
 2916 02fd 02       		.uleb128 0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 110


 2917 02fe C6090000 		.4byte	.LASF58
 2918 0302 01       		.byte	0x1
 2919 0303 7C       		.byte	0x7c
 2920 0304 69020000 		.4byte	0x269
 2921 0308 02       		.uleb128 0x2
 2922 0309 63010000 		.4byte	.LASF59
 2923 030d 01       		.byte	0x1
 2924 030e 80       		.byte	0x80
 2925 030f FD020000 		.4byte	0x2fd
 2926 0313 09       		.uleb128 0x9
 2927 0314 E5000000 		.4byte	.LASF60
 2928 0318 08       		.byte	0x8
 2929 0319 01       		.byte	0x1
 2930 031a 8D       		.byte	0x8d
 2931 031b 38030000 		.4byte	0x338
 2932 031f 0A       		.uleb128 0xa
 2933 0320 E3030000 		.4byte	.LASF61
 2934 0324 01       		.byte	0x1
 2935 0325 8F       		.byte	0x8f
 2936 0326 B9000000 		.4byte	0xb9
 2937 032a 00       		.byte	0
 2938 032b 0A       		.uleb128 0xa
 2939 032c DB030000 		.4byte	.LASF62
 2940 0330 01       		.byte	0x1
 2941 0331 90       		.byte	0x90
 2942 0332 39020000 		.4byte	0x239
 2943 0336 04       		.byte	0x4
 2944 0337 00       		.byte	0
 2945 0338 02       		.uleb128 0x2
 2946 0339 82050000 		.4byte	.LASF63
 2947 033d 01       		.byte	0x1
 2948 033e 91       		.byte	0x91
 2949 033f 13030000 		.4byte	0x313
 2950 0343 02       		.uleb128 0x2
 2951 0344 82010000 		.4byte	.LASF64
 2952 0348 01       		.byte	0x1
 2953 0349 96       		.byte	0x96
 2954 034a 38030000 		.4byte	0x338
 2955 034e 0F       		.uleb128 0xf
 2956 034f BB050000 		.4byte	.LASF152
 2957 0353 02       		.byte	0x2
 2958 0354 DA       		.byte	0xda
 2959 0355 EC000000 		.4byte	0xec
 2960 0359 03       		.byte	0x3
 2961 035a 75030000 		.4byte	0x375
 2962 035e 10       		.uleb128 0x10
 2963 035f 66020000 		.4byte	.LASF65
 2964 0363 02       		.byte	0x2
 2965 0364 DC       		.byte	0xdc
 2966 0365 EC000000 		.4byte	0xec
 2967 0369 10       		.uleb128 0x10
 2968 036a E6040000 		.4byte	.LASF66
 2969 036e 02       		.byte	0x2
 2970 036f DC       		.byte	0xdc
 2971 0370 EC000000 		.4byte	0xec
 2972 0374 00       		.byte	0
 2973 0375 11       		.uleb128 0x11
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 111


 2974 0376 1E040000 		.4byte	.LASF153
 2975 037a 02       		.byte	0x2
 2976 037b EE       		.byte	0xee
 2977 037c 03       		.byte	0x3
 2978 037d 8D030000 		.4byte	0x38d
 2979 0381 12       		.uleb128 0x12
 2980 0382 AF060000 		.4byte	.LASF154
 2981 0386 02       		.byte	0x2
 2982 0387 EE       		.byte	0xee
 2983 0388 EC000000 		.4byte	0xec
 2984 038c 00       		.byte	0
 2985 038d 13       		.uleb128 0x13
 2986 038e C5020000 		.4byte	.LASF67
 2987 0392 01       		.byte	0x1
 2988 0393 E007     		.2byte	0x7e0
 2989 0395 10010000 		.4byte	0x110
 2990 0399 00000000 		.4byte	.LFB89
 2991 039d 12000000 		.4byte	.LFE89-.LFB89
 2992 03a1 01       		.uleb128 0x1
 2993 03a2 9C       		.byte	0x9c
 2994 03a3 C8030000 		.4byte	0x3c8
 2995 03a7 14       		.uleb128 0x14
 2996 03a8 2F080000 		.4byte	.LASF69
 2997 03ac 01       		.byte	0x1
 2998 03ad E007     		.2byte	0x7e0
 2999 03af D3030000 		.4byte	0x3d3
 3000 03b3 00000000 		.4byte	.LLST0
 3001 03b7 15       		.uleb128 0x15
 3002 03b8 8F060000 		.4byte	.LASF70
 3003 03bc 01       		.byte	0x1
 3004 03bd E207     		.2byte	0x7e2
 3005 03bf 10010000 		.4byte	0x110
 3006 03c3 3A000000 		.4byte	.LLST1
 3007 03c7 00       		.byte	0
 3008 03c8 06       		.uleb128 0x6
 3009 03c9 04       		.byte	0x4
 3010 03ca CE030000 		.4byte	0x3ce
 3011 03ce 07       		.uleb128 0x7
 3012 03cf 08030000 		.4byte	0x308
 3013 03d3 07       		.uleb128 0x7
 3014 03d4 C8030000 		.4byte	0x3c8
 3015 03d8 13       		.uleb128 0x13
 3016 03d9 D7040000 		.4byte	.LASF68
 3017 03dd 01       		.byte	0x1
 3018 03de F908     		.2byte	0x8f9
 3019 03e0 05010000 		.4byte	0x105
 3020 03e4 00000000 		.4byte	.LFB95
 3021 03e8 1E000000 		.4byte	.LFE95-.LFB95
 3022 03ec 01       		.uleb128 0x1
 3023 03ed 9C       		.byte	0x9c
 3024 03ee 23040000 		.4byte	0x423
 3025 03f2 14       		.uleb128 0x14
 3026 03f3 2F080000 		.4byte	.LASF69
 3027 03f7 01       		.byte	0x1
 3028 03f8 F908     		.2byte	0x8f9
 3029 03fa C8030000 		.4byte	0x3c8
 3030 03fe 58000000 		.4byte	.LLST2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 112


 3031 0402 16       		.uleb128 0x16
 3032 0403 37080000 		.4byte	.LASF71
 3033 0407 01       		.byte	0x1
 3034 0408 FB08     		.2byte	0x8fb
 3035 040a 05010000 		.4byte	0x105
 3036 040e 01       		.uleb128 0x1
 3037 040f 54       		.byte	0x54
 3038 0410 17       		.uleb128 0x17
 3039 0411 08000000 		.4byte	.LVL6
 3040 0415 DF170000 		.4byte	0x17df
 3041 0419 17       		.uleb128 0x17
 3042 041a 1A000000 		.4byte	.LVL10
 3043 041e EA170000 		.4byte	0x17ea
 3044 0422 00       		.byte	0
 3045 0423 13       		.uleb128 0x13
 3046 0424 AC020000 		.4byte	.LASF72
 3047 0428 01       		.byte	0x1
 3048 0429 D208     		.2byte	0x8d2
 3049 042b 05010000 		.4byte	0x105
 3050 042f 00000000 		.4byte	.LFB93
 3051 0433 1A000000 		.4byte	.LFE93-.LFB93
 3052 0437 01       		.uleb128 0x1
 3053 0438 9C       		.byte	0x9c
 3054 0439 6E040000 		.4byte	0x46e
 3055 043d 14       		.uleb128 0x14
 3056 043e 2F080000 		.4byte	.LASF69
 3057 0442 01       		.byte	0x1
 3058 0443 D208     		.2byte	0x8d2
 3059 0445 C8030000 		.4byte	0x3c8
 3060 0449 9D000000 		.4byte	.LLST3
 3061 044d 16       		.uleb128 0x16
 3062 044e 37080000 		.4byte	.LASF71
 3063 0452 01       		.byte	0x1
 3064 0453 D408     		.2byte	0x8d4
 3065 0455 05010000 		.4byte	0x105
 3066 0459 01       		.uleb128 0x1
 3067 045a 54       		.byte	0x54
 3068 045b 17       		.uleb128 0x17
 3069 045c 08000000 		.4byte	.LVL12
 3070 0460 DF170000 		.4byte	0x17df
 3071 0464 17       		.uleb128 0x17
 3072 0465 16000000 		.4byte	.LVL16
 3073 0469 EA170000 		.4byte	0x17ea
 3074 046d 00       		.byte	0
 3075 046e 13       		.uleb128 0x13
 3076 046f 2E040000 		.4byte	.LASF73
 3077 0473 01       		.byte	0x1
 3078 0474 F907     		.2byte	0x7f9
 3079 0476 05010000 		.4byte	0x105
 3080 047a 00000000 		.4byte	.LFB90
 3081 047e 76000000 		.4byte	.LFE90-.LFB90
 3082 0482 01       		.uleb128 0x1
 3083 0483 9C       		.byte	0x9c
 3084 0484 F4040000 		.4byte	0x4f4
 3085 0488 14       		.uleb128 0x14
 3086 0489 2F080000 		.4byte	.LASF69
 3087 048d 01       		.byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 113


 3088 048e F907     		.2byte	0x7f9
 3089 0490 FA040000 		.4byte	0x4fa
 3090 0494 E2000000 		.4byte	.LLST4
 3091 0498 14       		.uleb128 0x14
 3092 0499 C1070000 		.4byte	.LASF74
 3093 049d 01       		.byte	0x1
 3094 049e F907     		.2byte	0x7f9
 3095 04a0 C4000000 		.4byte	0xc4
 3096 04a4 42010000 		.4byte	.LLST5
 3097 04a8 14       		.uleb128 0x14
 3098 04a9 D4090000 		.4byte	.LASF75
 3099 04ad 01       		.byte	0x1
 3100 04ae F907     		.2byte	0x7f9
 3101 04b0 FF040000 		.4byte	0x4ff
 3102 04b4 AE010000 		.4byte	.LLST6
 3103 04b8 15       		.uleb128 0x15
 3104 04b9 37080000 		.4byte	.LASF71
 3105 04bd 01       		.byte	0x1
 3106 04be FB07     		.2byte	0x7fb
 3107 04c0 05010000 		.4byte	0x105
 3108 04c4 CC010000 		.4byte	.LLST7
 3109 04c8 15       		.uleb128 0x15
 3110 04c9 F5020000 		.4byte	.LASF53
 3111 04cd 01       		.byte	0x1
 3112 04ce FC07     		.2byte	0x7fc
 3113 04d0 10010000 		.4byte	0x110
 3114 04d4 02020000 		.4byte	.LLST8
 3115 04d8 17       		.uleb128 0x17
 3116 04d9 16000000 		.4byte	.LVL22
 3117 04dd F5170000 		.4byte	0x17f5
 3118 04e1 17       		.uleb128 0x17
 3119 04e2 24000000 		.4byte	.LVL25
 3120 04e6 01180000 		.4byte	0x1801
 3121 04ea 17       		.uleb128 0x17
 3122 04eb 40000000 		.4byte	.LVL28
 3123 04ef 01180000 		.4byte	0x1801
 3124 04f3 00       		.byte	0
 3125 04f4 06       		.uleb128 0x6
 3126 04f5 04       		.byte	0x4
 3127 04f6 08030000 		.4byte	0x308
 3128 04fa 07       		.uleb128 0x7
 3129 04fb F4040000 		.4byte	0x4f4
 3130 04ff 07       		.uleb128 0x7
 3131 0500 05010000 		.4byte	0x105
 3132 0504 18       		.uleb128 0x18
 3133 0505 DC080000 		.4byte	.LASF77
 3134 0509 01       		.byte	0x1
 3135 050a 4808     		.2byte	0x848
 3136 050c 00000000 		.4byte	.LFB91
 3137 0510 24000000 		.4byte	.LFE91-.LFB91
 3138 0514 01       		.uleb128 0x1
 3139 0515 9C       		.byte	0x9c
 3140 0516 4B050000 		.4byte	0x54b
 3141 051a 14       		.uleb128 0x14
 3142 051b 2F080000 		.4byte	.LASF69
 3143 051f 01       		.byte	0x1
 3144 0520 4808     		.2byte	0x848
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 114


 3145 0522 FA040000 		.4byte	0x4fa
 3146 0526 22020000 		.4byte	.LLST9
 3147 052a 14       		.uleb128 0x14
 3148 052b BC020000 		.4byte	.LASF76
 3149 052f 01       		.byte	0x1
 3150 0530 4808     		.2byte	0x848
 3151 0532 4B050000 		.4byte	0x54b
 3152 0536 4E020000 		.4byte	.LLST10
 3153 053a 19       		.uleb128 0x19
 3154 053b 20000000 		.4byte	.LVL38
 3155 053f 01180000 		.4byte	0x1801
 3156 0543 1A       		.uleb128 0x1a
 3157 0544 01       		.uleb128 0x1
 3158 0545 50       		.byte	0x50
 3159 0546 02       		.uleb128 0x2
 3160 0547 74       		.byte	0x74
 3161 0548 00       		.sleb128 0
 3162 0549 00       		.byte	0
 3163 054a 00       		.byte	0
 3164 054b 07       		.uleb128 0x7
 3165 054c B0000000 		.4byte	0xb0
 3166 0550 18       		.uleb128 0x18
 3167 0551 64090000 		.4byte	.LASF78
 3168 0555 01       		.byte	0x1
 3169 0556 5A08     		.2byte	0x85a
 3170 0558 00000000 		.4byte	.LFB92
 3171 055c 66000000 		.4byte	.LFE92-.LFB92
 3172 0560 01       		.uleb128 0x1
 3173 0561 9C       		.byte	0x9c
 3174 0562 11060000 		.4byte	0x611
 3175 0566 14       		.uleb128 0x14
 3176 0567 2F080000 		.4byte	.LASF69
 3177 056b 01       		.byte	0x1
 3178 056c 5A08     		.2byte	0x85a
 3179 056e FA040000 		.4byte	0x4fa
 3180 0572 77020000 		.4byte	.LLST11
 3181 0576 1B       		.uleb128 0x1b
 3182 0577 08000000 		.4byte	.LBB23
 3183 057b 28000000 		.4byte	.LBE23-.LBB23
 3184 057f B1050000 		.4byte	0x5b1
 3185 0583 15       		.uleb128 0x15
 3186 0584 24010000 		.4byte	.LASF57
 3187 0588 01       		.byte	0x1
 3188 0589 6408     		.2byte	0x864
 3189 058b CB000000 		.4byte	0xcb
 3190 058f 95020000 		.4byte	.LLST12
 3191 0593 1C       		.uleb128 0x1c
 3192 0594 1C000000 		.4byte	.LVL43
 3193 0598 0A180000 		.4byte	0x180a
 3194 059c A7050000 		.4byte	0x5a7
 3195 05a0 1A       		.uleb128 0x1a
 3196 05a1 01       		.uleb128 0x1
 3197 05a2 50       		.byte	0x50
 3198 05a3 02       		.uleb128 0x2
 3199 05a4 75       		.byte	0x75
 3200 05a5 24       		.sleb128 36
 3201 05a6 00       		.byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 115


 3202 05a7 17       		.uleb128 0x17
 3203 05a8 22000000 		.4byte	.LVL44
 3204 05ac 16180000 		.4byte	0x1816
 3205 05b0 00       		.byte	0
 3206 05b1 1B       		.uleb128 0x1b
 3207 05b2 38000000 		.4byte	.LBB24
 3208 05b6 28000000 		.4byte	.LBE24-.LBB24
 3209 05ba EC050000 		.4byte	0x5ec
 3210 05be 15       		.uleb128 0x15
 3211 05bf DE090000 		.4byte	.LASF56
 3212 05c3 01       		.byte	0x1
 3213 05c4 B508     		.2byte	0x8b5
 3214 05c6 CB000000 		.4byte	0xcb
 3215 05ca B3020000 		.4byte	.LLST13
 3216 05ce 1C       		.uleb128 0x1c
 3217 05cf 4C000000 		.4byte	.LVL51
 3218 05d3 0A180000 		.4byte	0x180a
 3219 05d7 E2050000 		.4byte	0x5e2
 3220 05db 1A       		.uleb128 0x1a
 3221 05dc 01       		.uleb128 0x1
 3222 05dd 50       		.byte	0x50
 3223 05de 02       		.uleb128 0x2
 3224 05df 75       		.byte	0x75
 3225 05e0 10       		.sleb128 16
 3226 05e1 00       		.byte	0
 3227 05e2 17       		.uleb128 0x17
 3228 05e3 52000000 		.4byte	.LVL52
 3229 05e7 16180000 		.4byte	0x1816
 3230 05eb 00       		.byte	0
 3231 05ec 17       		.uleb128 0x17
 3232 05ed 08000000 		.4byte	.LVL41
 3233 05f1 DF170000 		.4byte	0x17df
 3234 05f5 17       		.uleb128 0x17
 3235 05f6 34000000 		.4byte	.LVL47
 3236 05fa EA170000 		.4byte	0x17ea
 3237 05fe 17       		.uleb128 0x17
 3238 05ff 38000000 		.4byte	.LVL48
 3239 0603 DF170000 		.4byte	0x17df
 3240 0607 17       		.uleb128 0x17
 3241 0608 64000000 		.4byte	.LVL55
 3242 060c EA170000 		.4byte	0x17ea
 3243 0610 00       		.byte	0
 3244 0611 1D       		.uleb128 0x1d
 3245 0612 73090000 		.4byte	.LASF86
 3246 0616 01       		.byte	0x1
 3247 0617 F8       		.byte	0xf8
 3248 0618 05010000 		.4byte	0x105
 3249 061c 00000000 		.4byte	.LFB69
 3250 0620 6C000000 		.4byte	.LFE69-.LFB69
 3251 0624 01       		.uleb128 0x1
 3252 0625 9C       		.byte	0x9c
 3253 0626 A6060000 		.4byte	0x6a6
 3254 062a 1E       		.uleb128 0x1e
 3255 062b 78020000 		.4byte	.LASF79
 3256 062f 01       		.byte	0x1
 3257 0630 F8       		.byte	0xf8
 3258 0631 39020000 		.4byte	0x239
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 116


 3259 0635 D1020000 		.4byte	.LLST14
 3260 0639 1E       		.uleb128 0x1e
 3261 063a 3C060000 		.4byte	.LASF80
 3262 063e 01       		.byte	0x1
 3263 063f F8       		.byte	0xf8
 3264 0640 05010000 		.4byte	0x105
 3265 0644 FD020000 		.4byte	.LLST15
 3266 0648 1F       		.uleb128 0x1f
 3267 0649 2F080000 		.4byte	.LASF69
 3268 064d 01       		.byte	0x1
 3269 064e FA       		.byte	0xfa
 3270 064f FA040000 		.4byte	0x4fa
 3271 0653 29030000 		.4byte	.LLST16
 3272 0657 17       		.uleb128 0x17
 3273 0658 0A000000 		.4byte	.LVL58
 3274 065c DF170000 		.4byte	0x17df
 3275 0660 1C       		.uleb128 0x1c
 3276 0661 3C000000 		.4byte	.LVL59
 3277 0665 0A180000 		.4byte	0x180a
 3278 0669 74060000 		.4byte	0x674
 3279 066d 1A       		.uleb128 0x1a
 3280 066e 01       		.uleb128 0x1
 3281 066f 50       		.byte	0x50
 3282 0670 02       		.uleb128 0x2
 3283 0671 74       		.byte	0x74
 3284 0672 10       		.sleb128 16
 3285 0673 00       		.byte	0
 3286 0674 1C       		.uleb128 0x1c
 3287 0675 58000000 		.4byte	.LVL60
 3288 0679 22180000 		.4byte	0x1822
 3289 067d 88060000 		.4byte	0x688
 3290 0681 1A       		.uleb128 0x1a
 3291 0682 01       		.uleb128 0x1
 3292 0683 50       		.byte	0x50
 3293 0684 02       		.uleb128 0x2
 3294 0685 74       		.byte	0x74
 3295 0686 10       		.sleb128 16
 3296 0687 00       		.byte	0
 3297 0688 1C       		.uleb128 0x1c
 3298 0689 60000000 		.4byte	.LVL61
 3299 068d 22180000 		.4byte	0x1822
 3300 0691 9C060000 		.4byte	0x69c
 3301 0695 1A       		.uleb128 0x1a
 3302 0696 01       		.uleb128 0x1
 3303 0697 50       		.byte	0x50
 3304 0698 02       		.uleb128 0x2
 3305 0699 74       		.byte	0x74
 3306 069a 24       		.sleb128 36
 3307 069b 00       		.byte	0
 3308 069c 17       		.uleb128 0x17
 3309 069d 64000000 		.4byte	.LVL62
 3310 06a1 EA170000 		.4byte	0x17ea
 3311 06a5 00       		.byte	0
 3312 06a6 18       		.uleb128 0x18
 3313 06a7 11050000 		.4byte	.LASF81
 3314 06ab 01       		.byte	0x1
 3315 06ac 9901     		.2byte	0x199
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 117


 3316 06ae 00000000 		.4byte	.LFB71
 3317 06b2 1C000000 		.4byte	.LFE71-.LFB71
 3318 06b6 01       		.uleb128 0x1
 3319 06b7 9C       		.byte	0x9c
 3320 06b8 22070000 		.4byte	0x722
 3321 06bc 14       		.uleb128 0x14
 3322 06bd 00070000 		.4byte	.LASF82
 3323 06c1 01       		.byte	0x1
 3324 06c2 9901     		.2byte	0x199
 3325 06c4 22070000 		.4byte	0x722
 3326 06c8 55030000 		.4byte	.LLST17
 3327 06cc 14       		.uleb128 0x14
 3328 06cd 87040000 		.4byte	.LASF55
 3329 06d1 01       		.byte	0x1
 3330 06d2 9901     		.2byte	0x199
 3331 06d4 22070000 		.4byte	0x722
 3332 06d8 82030000 		.4byte	.LLST18
 3333 06dc 14       		.uleb128 0x14
 3334 06dd FA050000 		.4byte	.LASF83
 3335 06e1 01       		.byte	0x1
 3336 06e2 9901     		.2byte	0x199
 3337 06e4 26010000 		.4byte	0x126
 3338 06e8 A0030000 		.4byte	.LLST19
 3339 06ec 14       		.uleb128 0x14
 3340 06ed BE060000 		.4byte	.LASF84
 3341 06f1 01       		.byte	0x1
 3342 06f2 9901     		.2byte	0x199
 3343 06f4 27070000 		.4byte	0x727
 3344 06f8 C1030000 		.4byte	.LLST20
 3345 06fc 20       		.uleb128 0x20
 3346 06fd C5000000 		.4byte	.LASF85
 3347 0701 01       		.byte	0x1
 3348 0702 9901     		.2byte	0x199
 3349 0704 F4040000 		.4byte	0x4f4
 3350 0708 02       		.uleb128 0x2
 3351 0709 91       		.byte	0x91
 3352 070a 00       		.sleb128 0
 3353 070b 19       		.uleb128 0x19
 3354 070c 1A000000 		.4byte	.LVL68
 3355 0710 11060000 		.4byte	0x611
 3356 0714 1A       		.uleb128 0x1a
 3357 0715 01       		.uleb128 0x1
 3358 0716 50       		.byte	0x50
 3359 0717 03       		.uleb128 0x3
 3360 0718 91       		.byte	0x91
 3361 0719 00       		.sleb128 0
 3362 071a 06       		.byte	0x6
 3363 071b 1A       		.uleb128 0x1a
 3364 071c 01       		.uleb128 0x1
 3365 071d 51       		.byte	0x51
 3366 071e 01       		.uleb128 0x1
 3367 071f 31       		.byte	0x31
 3368 0720 00       		.byte	0
 3369 0721 00       		.byte	0
 3370 0722 07       		.uleb128 0x7
 3371 0723 10010000 		.4byte	0x110
 3372 0727 07       		.uleb128 0x7
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 118


 3373 0728 D6000000 		.4byte	0xd6
 3374 072c 21       		.uleb128 0x21
 3375 072d 95050000 		.4byte	.LASF87
 3376 0731 01       		.byte	0x1
 3377 0732 6701     		.2byte	0x167
 3378 0734 39020000 		.4byte	0x239
 3379 0738 00000000 		.4byte	.LFB70
 3380 073c 34000000 		.4byte	.LFE70-.LFB70
 3381 0740 01       		.uleb128 0x1
 3382 0741 9C       		.byte	0x9c
 3383 0742 DA070000 		.4byte	0x7da
 3384 0746 14       		.uleb128 0x14
 3385 0747 00070000 		.4byte	.LASF82
 3386 074b 01       		.byte	0x1
 3387 074c 6701     		.2byte	0x167
 3388 074e 22070000 		.4byte	0x722
 3389 0752 E2030000 		.4byte	.LLST21
 3390 0756 14       		.uleb128 0x14
 3391 0757 87040000 		.4byte	.LASF55
 3392 075b 01       		.byte	0x1
 3393 075c 6701     		.2byte	0x167
 3394 075e 22070000 		.4byte	0x722
 3395 0762 16040000 		.4byte	.LLST22
 3396 0766 14       		.uleb128 0x14
 3397 0767 BE060000 		.4byte	.LASF84
 3398 076b 01       		.byte	0x1
 3399 076c 6701     		.2byte	0x167
 3400 076e 27070000 		.4byte	0x727
 3401 0772 34040000 		.4byte	.LLST23
 3402 0776 15       		.uleb128 0x15
 3403 0777 C5000000 		.4byte	.LASF85
 3404 077b 01       		.byte	0x1
 3405 077c 6901     		.2byte	0x169
 3406 077e F4040000 		.4byte	0x4f4
 3407 0782 55040000 		.4byte	.LLST24
 3408 0786 15       		.uleb128 0x15
 3409 0787 A0070000 		.4byte	.LASF88
 3410 078b 01       		.byte	0x1
 3411 078c 6A01     		.2byte	0x16a
 3412 078e 25000000 		.4byte	0x25
 3413 0792 73040000 		.4byte	.LLST25
 3414 0796 15       		.uleb128 0x15
 3415 0797 FA050000 		.4byte	.LASF83
 3416 079b 01       		.byte	0x1
 3417 079c 6B01     		.2byte	0x16b
 3418 079e 26010000 		.4byte	0x126
 3419 07a2 9F040000 		.4byte	.LLST26
 3420 07a6 17       		.uleb128 0x17
 3421 07a7 1A000000 		.4byte	.LVL74
 3422 07ab 2E180000 		.4byte	0x182e
 3423 07af 19       		.uleb128 0x19
 3424 07b0 2E000000 		.4byte	.LVL78
 3425 07b4 A6060000 		.4byte	0x6a6
 3426 07b8 1A       		.uleb128 0x1a
 3427 07b9 01       		.uleb128 0x1
 3428 07ba 50       		.byte	0x50
 3429 07bb 02       		.uleb128 0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 119


 3430 07bc 75       		.byte	0x75
 3431 07bd 00       		.sleb128 0
 3432 07be 1A       		.uleb128 0x1a
 3433 07bf 01       		.uleb128 0x1
 3434 07c0 51       		.byte	0x51
 3435 07c1 02       		.uleb128 0x2
 3436 07c2 76       		.byte	0x76
 3437 07c3 00       		.sleb128 0
 3438 07c4 1A       		.uleb128 0x1a
 3439 07c5 01       		.uleb128 0x1
 3440 07c6 52       		.byte	0x52
 3441 07c7 03       		.uleb128 0x3
 3442 07c8 74       		.byte	0x74
 3443 07c9 C800     		.sleb128 72
 3444 07cb 1A       		.uleb128 0x1a
 3445 07cc 01       		.uleb128 0x1
 3446 07cd 53       		.byte	0x53
 3447 07ce 02       		.uleb128 0x2
 3448 07cf 77       		.byte	0x77
 3449 07d0 00       		.sleb128 0
 3450 07d1 1A       		.uleb128 0x1a
 3451 07d2 02       		.uleb128 0x2
 3452 07d3 7D       		.byte	0x7d
 3453 07d4 00       		.sleb128 0
 3454 07d5 02       		.uleb128 0x2
 3455 07d6 74       		.byte	0x74
 3456 07d7 00       		.sleb128 0
 3457 07d8 00       		.byte	0
 3458 07d9 00       		.byte	0
 3459 07da 21       		.uleb128 0x21
 3460 07db FF090000 		.4byte	.LASF89
 3461 07df 01       		.byte	0x1
 3462 07e0 BC02     		.2byte	0x2bc
 3463 07e2 39020000 		.4byte	0x239
 3464 07e6 00000000 		.4byte	.LFB76
 3465 07ea 16000000 		.4byte	.LFE76-.LFB76
 3466 07ee 01       		.uleb128 0x1
 3467 07ef 9C       		.byte	0x9c
 3468 07f0 40080000 		.4byte	0x840
 3469 07f4 14       		.uleb128 0x14
 3470 07f5 46060000 		.4byte	.LASF90
 3471 07f9 01       		.byte	0x1
 3472 07fa BC02     		.2byte	0x2bc
 3473 07fc 22070000 		.4byte	0x722
 3474 0800 CE040000 		.4byte	.LLST27
 3475 0804 14       		.uleb128 0x14
 3476 0805 92040000 		.4byte	.LASF91
 3477 0809 01       		.byte	0x1
 3478 080a BC02     		.2byte	0x2bc
 3479 080c 22070000 		.4byte	0x722
 3480 0810 EF040000 		.4byte	.LLST28
 3481 0814 15       		.uleb128 0x15
 3482 0815 DB030000 		.4byte	.LASF62
 3483 0819 01       		.byte	0x1
 3484 081a BE02     		.2byte	0x2be
 3485 081c 39020000 		.4byte	0x239
 3486 0820 0D050000 		.4byte	.LLST29
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 120


 3487 0824 19       		.uleb128 0x19
 3488 0825 0C000000 		.4byte	.LVL81
 3489 0829 2C070000 		.4byte	0x72c
 3490 082d 1A       		.uleb128 0x1a
 3491 082e 01       		.uleb128 0x1
 3492 082f 50       		.byte	0x50
 3493 0830 03       		.uleb128 0x3
 3494 0831 F3       		.byte	0xf3
 3495 0832 01       		.uleb128 0x1
 3496 0833 50       		.byte	0x50
 3497 0834 1A       		.uleb128 0x1a
 3498 0835 01       		.uleb128 0x1
 3499 0836 51       		.byte	0x51
 3500 0837 01       		.uleb128 0x1
 3501 0838 30       		.byte	0x30
 3502 0839 1A       		.uleb128 0x1a
 3503 083a 01       		.uleb128 0x1
 3504 083b 52       		.byte	0x52
 3505 083c 01       		.uleb128 0x1
 3506 083d 32       		.byte	0x32
 3507 083e 00       		.byte	0
 3508 083f 00       		.byte	0
 3509 0840 21       		.uleb128 0x21
 3510 0841 41040000 		.4byte	.LASF92
 3511 0845 01       		.byte	0x1
 3512 0846 D602     		.2byte	0x2d6
 3513 0848 05010000 		.4byte	0x105
 3514 084c 00000000 		.4byte	.LFB77
 3515 0850 08010000 		.4byte	.LFE77-.LFB77
 3516 0854 01       		.uleb128 0x1
 3517 0855 9C       		.byte	0x9c
 3518 0856 FA090000 		.4byte	0x9fa
 3519 085a 14       		.uleb128 0x14
 3520 085b 78020000 		.4byte	.LASF79
 3521 085f 01       		.byte	0x1
 3522 0860 D602     		.2byte	0x2d6
 3523 0862 39020000 		.4byte	0x239
 3524 0866 2B050000 		.4byte	.LLST30
 3525 086a 14       		.uleb128 0x14
 3526 086b C1070000 		.4byte	.LASF74
 3527 086f 01       		.byte	0x1
 3528 0870 D602     		.2byte	0x2d6
 3529 0872 FA090000 		.4byte	0x9fa
 3530 0876 57050000 		.4byte	.LLST31
 3531 087a 14       		.uleb128 0x14
 3532 087b 15090000 		.4byte	.LASF93
 3533 087f 01       		.byte	0x1
 3534 0880 D602     		.2byte	0x2d6
 3535 0882 1B010000 		.4byte	0x11b
 3536 0886 83050000 		.4byte	.LLST32
 3537 088a 14       		.uleb128 0x14
 3538 088b 6B010000 		.4byte	.LASF94
 3539 088f 01       		.byte	0x1
 3540 0890 D602     		.2byte	0x2d6
 3541 0892 FF040000 		.4byte	0x4ff
 3542 0896 C6050000 		.4byte	.LLST33
 3543 089a 15       		.uleb128 0x15
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 121


 3544 089b BD030000 		.4byte	.LASF95
 3545 089f 01       		.byte	0x1
 3546 08a0 D802     		.2byte	0x2d8
 3547 08a2 05010000 		.4byte	0x105
 3548 08a6 F2050000 		.4byte	.LLST34
 3549 08aa 15       		.uleb128 0x15
 3550 08ab 57020000 		.4byte	.LASF96
 3551 08af 01       		.byte	0x1
 3552 08b0 D802     		.2byte	0x2d8
 3553 08b2 05010000 		.4byte	0x105
 3554 08b6 28060000 		.4byte	.LLST35
 3555 08ba 16       		.uleb128 0x16
 3556 08bb D2030000 		.4byte	.LASF97
 3557 08bf 01       		.byte	0x1
 3558 08c0 D902     		.2byte	0x2d9
 3559 08c2 2E020000 		.4byte	0x22e
 3560 08c6 02       		.uleb128 0x2
 3561 08c7 91       		.byte	0x91
 3562 08c8 60       		.sleb128 -32
 3563 08c9 15       		.uleb128 0x15
 3564 08ca 2F080000 		.4byte	.LASF69
 3565 08ce 01       		.byte	0x1
 3566 08cf DA02     		.2byte	0x2da
 3567 08d1 FA040000 		.4byte	0x4fa
 3568 08d5 46060000 		.4byte	.LLST36
 3569 08d9 17       		.uleb128 0x17
 3570 08da 12000000 		.4byte	.LVL86
 3571 08de DF170000 		.4byte	0x17df
 3572 08e2 1C       		.uleb128 0x1c
 3573 08e3 28000000 		.4byte	.LVL87
 3574 08e7 6E040000 		.4byte	0x46e
 3575 08eb 02090000 		.4byte	0x902
 3576 08ef 1A       		.uleb128 0x1a
 3577 08f0 01       		.uleb128 0x1
 3578 08f1 50       		.byte	0x50
 3579 08f2 02       		.uleb128 0x2
 3580 08f3 74       		.byte	0x74
 3581 08f4 00       		.sleb128 0
 3582 08f5 1A       		.uleb128 0x1a
 3583 08f6 01       		.uleb128 0x1
 3584 08f7 51       		.byte	0x51
 3585 08f8 02       		.uleb128 0x2
 3586 08f9 77       		.byte	0x77
 3587 08fa 00       		.sleb128 0
 3588 08fb 1A       		.uleb128 0x1a
 3589 08fc 01       		.uleb128 0x1
 3590 08fd 52       		.byte	0x52
 3591 08fe 02       		.uleb128 0x2
 3592 08ff 76       		.byte	0x76
 3593 0900 00       		.sleb128 0
 3594 0901 00       		.byte	0
 3595 0902 1C       		.uleb128 0x1c
 3596 0903 34000000 		.4byte	.LVL89
 3597 0907 0A180000 		.4byte	0x180a
 3598 090b 16090000 		.4byte	0x916
 3599 090f 1A       		.uleb128 0x1a
 3600 0910 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 122


 3601 0911 50       		.byte	0x50
 3602 0912 02       		.uleb128 0x2
 3603 0913 74       		.byte	0x74
 3604 0914 24       		.sleb128 36
 3605 0915 00       		.byte	0
 3606 0916 17       		.uleb128 0x17
 3607 0917 5E000000 		.4byte	.LVL92
 3608 091b EA170000 		.4byte	0x17ea
 3609 091f 17       		.uleb128 0x17
 3610 0920 6A000000 		.4byte	.LVL93
 3611 0924 EA170000 		.4byte	0x17ea
 3612 0928 1C       		.uleb128 0x1c
 3613 0929 76000000 		.4byte	.LVL94
 3614 092d 39180000 		.4byte	0x1839
 3615 0931 3C090000 		.4byte	0x93c
 3616 0935 1A       		.uleb128 0x1a
 3617 0936 01       		.uleb128 0x1
 3618 0937 50       		.byte	0x50
 3619 0938 02       		.uleb128 0x2
 3620 0939 91       		.byte	0x91
 3621 093a 60       		.sleb128 -32
 3622 093b 00       		.byte	0
 3623 093c 17       		.uleb128 0x17
 3624 093d 7C000000 		.4byte	.LVL96
 3625 0941 EA170000 		.4byte	0x17ea
 3626 0945 17       		.uleb128 0x17
 3627 0946 80000000 		.4byte	.LVL97
 3628 094a 45180000 		.4byte	0x1845
 3629 094e 17       		.uleb128 0x17
 3630 094f 84000000 		.4byte	.LVL98
 3631 0953 DF170000 		.4byte	0x17df
 3632 0957 17       		.uleb128 0x17
 3633 0958 AC000000 		.4byte	.LVL99
 3634 095c EA170000 		.4byte	0x17ea
 3635 0960 1C       		.uleb128 0x1c
 3636 0961 B4000000 		.4byte	.LVL101
 3637 0965 51180000 		.4byte	0x1851
 3638 0969 7A090000 		.4byte	0x97a
 3639 096d 1A       		.uleb128 0x1a
 3640 096e 01       		.uleb128 0x1
 3641 096f 50       		.byte	0x50
 3642 0970 02       		.uleb128 0x2
 3643 0971 91       		.byte	0x91
 3644 0972 60       		.sleb128 -32
 3645 0973 1A       		.uleb128 0x1a
 3646 0974 01       		.uleb128 0x1
 3647 0975 51       		.byte	0x51
 3648 0976 02       		.uleb128 0x2
 3649 0977 91       		.byte	0x91
 3650 0978 5C       		.sleb128 -36
 3651 0979 00       		.byte	0
 3652 097a 1C       		.uleb128 0x1c
 3653 097b BC000000 		.4byte	.LVL102
 3654 097f D8030000 		.4byte	0x3d8
 3655 0983 8E090000 		.4byte	0x98e
 3656 0987 1A       		.uleb128 0x1a
 3657 0988 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 123


 3658 0989 50       		.byte	0x50
 3659 098a 02       		.uleb128 0x2
 3660 098b 74       		.byte	0x74
 3661 098c 00       		.sleb128 0
 3662 098d 00       		.byte	0
 3663 098e 1C       		.uleb128 0x1c
 3664 098f C8000000 		.4byte	.LVL103
 3665 0993 5D180000 		.4byte	0x185d
 3666 0997 A2090000 		.4byte	0x9a2
 3667 099b 1A       		.uleb128 0x1a
 3668 099c 01       		.uleb128 0x1
 3669 099d 50       		.byte	0x50
 3670 099e 02       		.uleb128 0x2
 3671 099f 74       		.byte	0x74
 3672 09a0 10       		.sleb128 16
 3673 09a1 00       		.byte	0
 3674 09a2 1C       		.uleb128 0x1c
 3675 09a3 CE000000 		.4byte	.LVL104
 3676 09a7 50050000 		.4byte	0x550
 3677 09ab B6090000 		.4byte	0x9b6
 3678 09af 1A       		.uleb128 0x1a
 3679 09b0 01       		.uleb128 0x1
 3680 09b1 50       		.byte	0x50
 3681 09b2 02       		.uleb128 0x2
 3682 09b3 74       		.byte	0x74
 3683 09b4 00       		.sleb128 0
 3684 09b5 00       		.byte	0
 3685 09b6 17       		.uleb128 0x17
 3686 09b7 D2000000 		.4byte	.LVL105
 3687 09bb 69180000 		.4byte	0x1869
 3688 09bf 1C       		.uleb128 0x1c
 3689 09c0 EE000000 		.4byte	.LVL106
 3690 09c4 50050000 		.4byte	0x550
 3691 09c8 D3090000 		.4byte	0x9d3
 3692 09cc 1A       		.uleb128 0x1a
 3693 09cd 01       		.uleb128 0x1
 3694 09ce 50       		.byte	0x50
 3695 09cf 02       		.uleb128 0x2
 3696 09d0 74       		.byte	0x74
 3697 09d1 00       		.sleb128 0
 3698 09d2 00       		.byte	0
 3699 09d3 17       		.uleb128 0x17
 3700 09d4 F2000000 		.4byte	.LVL107
 3701 09d8 69180000 		.4byte	0x1869
 3702 09dc 1C       		.uleb128 0x1c
 3703 09dd FA000000 		.4byte	.LVL108
 3704 09e1 50050000 		.4byte	0x550
 3705 09e5 F0090000 		.4byte	0x9f0
 3706 09e9 1A       		.uleb128 0x1a
 3707 09ea 01       		.uleb128 0x1
 3708 09eb 50       		.byte	0x50
 3709 09ec 02       		.uleb128 0x2
 3710 09ed 74       		.byte	0x74
 3711 09ee 00       		.sleb128 0
 3712 09ef 00       		.byte	0
 3713 09f0 17       		.uleb128 0x17
 3714 09f1 FE000000 		.4byte	.LVL109
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 124


 3715 09f5 69180000 		.4byte	0x1869
 3716 09f9 00       		.byte	0
 3717 09fa 07       		.uleb128 0x7
 3718 09fb C4000000 		.4byte	0xc4
 3719 09ff 18       		.uleb128 0x18
 3720 0a00 DC050000 		.4byte	.LASF98
 3721 0a04 01       		.byte	0x1
 3722 0a05 C501     		.2byte	0x1c5
 3723 0a07 00000000 		.4byte	.LFB72
 3724 0a0b 18000000 		.4byte	.LFE72-.LFB72
 3725 0a0f 01       		.uleb128 0x1
 3726 0a10 9C       		.byte	0x9c
 3727 0a11 460A0000 		.4byte	0xa46
 3728 0a15 14       		.uleb128 0x14
 3729 0a16 C5000000 		.4byte	.LASF85
 3730 0a1a 01       		.byte	0x1
 3731 0a1b C501     		.2byte	0x1c5
 3732 0a1d F4040000 		.4byte	0x4f4
 3733 0a21 72060000 		.4byte	.LLST37
 3734 0a25 19       		.uleb128 0x19
 3735 0a26 14000000 		.4byte	.LVL112
 3736 0a2a 40080000 		.4byte	0x840
 3737 0a2e 1A       		.uleb128 0x1a
 3738 0a2f 01       		.uleb128 0x1
 3739 0a30 50       		.byte	0x50
 3740 0a31 03       		.uleb128 0x3
 3741 0a32 F3       		.byte	0xf3
 3742 0a33 01       		.uleb128 0x1
 3743 0a34 50       		.byte	0x50
 3744 0a35 1A       		.uleb128 0x1a
 3745 0a36 01       		.uleb128 0x1
 3746 0a37 51       		.byte	0x51
 3747 0a38 01       		.uleb128 0x1
 3748 0a39 30       		.byte	0x30
 3749 0a3a 1A       		.uleb128 0x1a
 3750 0a3b 01       		.uleb128 0x1
 3751 0a3c 52       		.byte	0x52
 3752 0a3d 01       		.uleb128 0x1
 3753 0a3e 30       		.byte	0x30
 3754 0a3f 1A       		.uleb128 0x1a
 3755 0a40 01       		.uleb128 0x1
 3756 0a41 53       		.byte	0x53
 3757 0a42 01       		.uleb128 0x1
 3758 0a43 30       		.byte	0x30
 3759 0a44 00       		.byte	0
 3760 0a45 00       		.byte	0
 3761 0a46 21       		.uleb128 0x21
 3762 0a47 A9050000 		.4byte	.LASF99
 3763 0a4b 01       		.byte	0x1
 3764 0a4c E301     		.2byte	0x1e3
 3765 0a4e 39020000 		.4byte	0x239
 3766 0a52 00000000 		.4byte	.LFB73
 3767 0a56 16000000 		.4byte	.LFE73-.LFB73
 3768 0a5a 01       		.uleb128 0x1
 3769 0a5b 9C       		.byte	0x9c
 3770 0a5c C30A0000 		.4byte	0xac3
 3771 0a60 14       		.uleb128 0x14
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 125


 3772 0a61 BE060000 		.4byte	.LASF84
 3773 0a65 01       		.byte	0x1
 3774 0a66 E301     		.2byte	0x1e3
 3775 0a68 27070000 		.4byte	0x727
 3776 0a6c 9E060000 		.4byte	.LLST38
 3777 0a70 15       		.uleb128 0x15
 3778 0a71 C5000000 		.4byte	.LASF85
 3779 0a75 01       		.byte	0x1
 3780 0a76 E501     		.2byte	0x1e5
 3781 0a78 F4040000 		.4byte	0x4f4
 3782 0a7c BF060000 		.4byte	.LLST39
 3783 0a80 22       		.uleb128 0x22
 3784 0a81 B9040000 		.4byte	.LASF100
 3785 0a85 01       		.byte	0x1
 3786 0a86 E601     		.2byte	0x1e6
 3787 0a88 22070000 		.4byte	0x722
 3788 0a8c 01       		.byte	0x1
 3789 0a8d 22       		.uleb128 0x22
 3790 0a8e 4B020000 		.4byte	.LASF101
 3791 0a92 01       		.byte	0x1
 3792 0a93 E601     		.2byte	0x1e6
 3793 0a95 22070000 		.4byte	0x722
 3794 0a99 00       		.byte	0
 3795 0a9a 1C       		.uleb128 0x1c
 3796 0a9b 0C000000 		.4byte	.LVL117
 3797 0a9f 2C070000 		.4byte	0x72c
 3798 0aa3 B20A0000 		.4byte	0xab2
 3799 0aa7 1A       		.uleb128 0x1a
 3800 0aa8 01       		.uleb128 0x1
 3801 0aa9 50       		.byte	0x50
 3802 0aaa 01       		.uleb128 0x1
 3803 0aab 31       		.byte	0x31
 3804 0aac 1A       		.uleb128 0x1a
 3805 0aad 01       		.uleb128 0x1
 3806 0aae 51       		.byte	0x51
 3807 0aaf 01       		.uleb128 0x1
 3808 0ab0 30       		.byte	0x30
 3809 0ab1 00       		.byte	0
 3810 0ab2 19       		.uleb128 0x19
 3811 0ab3 12000000 		.4byte	.LVL119
 3812 0ab7 FF090000 		.4byte	0x9ff
 3813 0abb 1A       		.uleb128 0x1a
 3814 0abc 01       		.uleb128 0x1
 3815 0abd 50       		.byte	0x50
 3816 0abe 02       		.uleb128 0x2
 3817 0abf 74       		.byte	0x74
 3818 0ac0 00       		.sleb128 0
 3819 0ac1 00       		.byte	0
 3820 0ac2 00       		.byte	0
 3821 0ac3 21       		.uleb128 0x21
 3822 0ac4 4B090000 		.4byte	.LASF102
 3823 0ac8 01       		.byte	0x1
 3824 0ac9 3F02     		.2byte	0x23f
 3825 0acb 05010000 		.4byte	0x105
 3826 0acf 00000000 		.4byte	.LFB74
 3827 0ad3 2C000000 		.4byte	.LFE74-.LFB74
 3828 0ad7 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 126


 3829 0ad8 9C       		.byte	0x9c
 3830 0ad9 250B0000 		.4byte	0xb25
 3831 0add 14       		.uleb128 0x14
 3832 0ade 0A060000 		.4byte	.LASF103
 3833 0ae2 01       		.byte	0x1
 3834 0ae3 3F02     		.2byte	0x23f
 3835 0ae5 39020000 		.4byte	0x239
 3836 0ae9 DD060000 		.4byte	.LLST40
 3837 0aed 16       		.uleb128 0x16
 3838 0aee 37080000 		.4byte	.LASF71
 3839 0af2 01       		.byte	0x1
 3840 0af3 4102     		.2byte	0x241
 3841 0af5 05010000 		.4byte	0x105
 3842 0af9 01       		.uleb128 0x1
 3843 0afa 50       		.byte	0x50
 3844 0afb 15       		.uleb128 0x15
 3845 0afc 76000000 		.4byte	.LASF104
 3846 0b00 01       		.byte	0x1
 3847 0b01 4202     		.2byte	0x242
 3848 0b03 FA040000 		.4byte	0x4fa
 3849 0b07 FB060000 		.4byte	.LLST41
 3850 0b0b 17       		.uleb128 0x17
 3851 0b0c 0A000000 		.4byte	.LVL122
 3852 0b10 75180000 		.4byte	0x1875
 3853 0b14 19       		.uleb128 0x19
 3854 0b15 20000000 		.4byte	.LVL123
 3855 0b19 40080000 		.4byte	0x840
 3856 0b1d 1A       		.uleb128 0x1a
 3857 0b1e 01       		.uleb128 0x1
 3858 0b1f 50       		.byte	0x50
 3859 0b20 02       		.uleb128 0x2
 3860 0b21 74       		.byte	0x74
 3861 0b22 00       		.sleb128 0
 3862 0b23 00       		.byte	0
 3863 0b24 00       		.byte	0
 3864 0b25 21       		.uleb128 0x21
 3865 0b26 05040000 		.4byte	.LASF105
 3866 0b2a 01       		.byte	0x1
 3867 0b2b 9C03     		.2byte	0x39c
 3868 0b2d 05010000 		.4byte	0x105
 3869 0b31 00000000 		.4byte	.LFB78
 3870 0b35 6E000000 		.4byte	.LFE78-.LFB78
 3871 0b39 01       		.uleb128 0x1
 3872 0b3a 9C       		.byte	0x9c
 3873 0b3b 320C0000 		.4byte	0xc32
 3874 0b3f 14       		.uleb128 0x14
 3875 0b40 78020000 		.4byte	.LASF79
 3876 0b44 01       		.byte	0x1
 3877 0b45 9C03     		.2byte	0x39c
 3878 0b47 39020000 		.4byte	0x239
 3879 0b4b 19070000 		.4byte	.LLST42
 3880 0b4f 14       		.uleb128 0x14
 3881 0b50 C1070000 		.4byte	.LASF74
 3882 0b54 01       		.byte	0x1
 3883 0b55 9C03     		.2byte	0x39c
 3884 0b57 FA090000 		.4byte	0x9fa
 3885 0b5b 69070000 		.4byte	.LLST43
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 127


 3886 0b5f 14       		.uleb128 0x14
 3887 0b60 5C000000 		.4byte	.LASF106
 3888 0b64 01       		.byte	0x1
 3889 0b65 9C03     		.2byte	0x39c
 3890 0b67 380C0000 		.4byte	0xc38
 3891 0b6b A3070000 		.4byte	.LLST44
 3892 0b6f 14       		.uleb128 0x14
 3893 0b70 6B010000 		.4byte	.LASF94
 3894 0b74 01       		.byte	0x1
 3895 0b75 9C03     		.2byte	0x39c
 3896 0b77 FF040000 		.4byte	0x4ff
 3897 0b7b E5070000 		.4byte	.LLST45
 3898 0b7f 16       		.uleb128 0x16
 3899 0b80 37080000 		.4byte	.LASF71
 3900 0b84 01       		.byte	0x1
 3901 0b85 9E03     		.2byte	0x39e
 3902 0b87 05010000 		.4byte	0x105
 3903 0b8b 01       		.uleb128 0x1
 3904 0b8c 50       		.byte	0x50
 3905 0b8d 23       		.uleb128 0x23
 3906 0b8e C4010000 		.4byte	.LASF107
 3907 0b92 01       		.byte	0x1
 3908 0b93 9F03     		.2byte	0x39f
 3909 0b95 10010000 		.4byte	0x110
 3910 0b99 15       		.uleb128 0x15
 3911 0b9a 2F080000 		.4byte	.LASF69
 3912 0b9e 01       		.byte	0x1
 3913 0b9f A003     		.2byte	0x3a0
 3914 0ba1 FA040000 		.4byte	0x4fa
 3915 0ba5 1F080000 		.4byte	.LLST46
 3916 0ba9 24       		.uleb128 0x24
 3917 0baa 4E030000 		.4byte	0x34e
 3918 0bae 02000000 		.4byte	.LBB25
 3919 0bb2 14000000 		.4byte	.LBE25-.LBB25
 3920 0bb6 01       		.byte	0x1
 3921 0bb7 BB03     		.2byte	0x3bb
 3922 0bb9 D20B0000 		.4byte	0xbd2
 3923 0bbd 25       		.uleb128 0x25
 3924 0bbe 02000000 		.4byte	.LBB26
 3925 0bc2 14000000 		.4byte	.LBE26-.LBB26
 3926 0bc6 26       		.uleb128 0x26
 3927 0bc7 5E030000 		.4byte	0x35e
 3928 0bcb 26       		.uleb128 0x26
 3929 0bcc 69030000 		.4byte	0x369
 3930 0bd0 00       		.byte	0
 3931 0bd1 00       		.byte	0
 3932 0bd2 27       		.uleb128 0x27
 3933 0bd3 00000000 		.4byte	.Ldebug_ranges0+0
 3934 0bd7 170C0000 		.4byte	0xc17
 3935 0bdb 15       		.uleb128 0x15
 3936 0bdc 24010000 		.4byte	.LASF57
 3937 0be0 01       		.byte	0x1
 3938 0be1 BF03     		.2byte	0x3bf
 3939 0be3 3D0C0000 		.4byte	0xc3d
 3940 0be7 6F080000 		.4byte	.LLST47
 3941 0beb 1C       		.uleb128 0x1c
 3942 0bec 32000000 		.4byte	.LVL131
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 128


 3943 0bf0 6E040000 		.4byte	0x46e
 3944 0bf4 060C0000 		.4byte	0xc06
 3945 0bf8 1A       		.uleb128 0x1a
 3946 0bf9 01       		.uleb128 0x1
 3947 0bfa 50       		.byte	0x50
 3948 0bfb 02       		.uleb128 0x2
 3949 0bfc 75       		.byte	0x75
 3950 0bfd 00       		.sleb128 0
 3951 0bfe 1A       		.uleb128 0x1a
 3952 0bff 01       		.uleb128 0x1
 3953 0c00 52       		.byte	0x52
 3954 0c01 03       		.uleb128 0x3
 3955 0c02 F3       		.byte	0xf3
 3956 0c03 01       		.uleb128 0x1
 3957 0c04 53       		.byte	0x53
 3958 0c05 00       		.byte	0
 3959 0c06 19       		.uleb128 0x19
 3960 0c07 44000000 		.4byte	.LVL132
 3961 0c0b 0A180000 		.4byte	0x180a
 3962 0c0f 1A       		.uleb128 0x1a
 3963 0c10 01       		.uleb128 0x1
 3964 0c11 50       		.byte	0x50
 3965 0c12 02       		.uleb128 0x2
 3966 0c13 75       		.byte	0x75
 3967 0c14 24       		.sleb128 36
 3968 0c15 00       		.byte	0
 3969 0c16 00       		.byte	0
 3970 0c17 28       		.uleb128 0x28
 3971 0c18 75030000 		.4byte	0x375
 3972 0c1c 68000000 		.4byte	.LBB29
 3973 0c20 04000000 		.4byte	.LBE29-.LBB29
 3974 0c24 01       		.byte	0x1
 3975 0c25 2D04     		.2byte	0x42d
 3976 0c27 29       		.uleb128 0x29
 3977 0c28 81030000 		.4byte	0x381
 3978 0c2c 9A080000 		.4byte	.LLST48
 3979 0c30 00       		.byte	0
 3980 0c31 00       		.byte	0
 3981 0c32 06       		.uleb128 0x6
 3982 0c33 04       		.byte	0x4
 3983 0c34 05010000 		.4byte	0x105
 3984 0c38 07       		.uleb128 0x7
 3985 0c39 320C0000 		.4byte	0xc32
 3986 0c3d 07       		.uleb128 0x7
 3987 0c3e CB000000 		.4byte	0xcb
 3988 0c42 21       		.uleb128 0x21
 3989 0c43 FF040000 		.4byte	.LASF108
 3990 0c47 01       		.byte	0x1
 3991 0c48 3304     		.2byte	0x433
 3992 0c4a 05010000 		.4byte	0x105
 3993 0c4e 00000000 		.4byte	.LFB79
 3994 0c52 64000000 		.4byte	.LFE79-.LFB79
 3995 0c56 01       		.uleb128 0x1
 3996 0c57 9C       		.byte	0x9c
 3997 0c58 310D0000 		.4byte	0xd31
 3998 0c5c 14       		.uleb128 0x14
 3999 0c5d 78020000 		.4byte	.LASF79
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 129


 4000 0c61 01       		.byte	0x1
 4001 0c62 3304     		.2byte	0x433
 4002 0c64 39020000 		.4byte	0x239
 4003 0c68 AD080000 		.4byte	.LLST49
 4004 0c6c 14       		.uleb128 0x14
 4005 0c6d 5C000000 		.4byte	.LASF106
 4006 0c71 01       		.byte	0x1
 4007 0c72 3304     		.2byte	0x433
 4008 0c74 380C0000 		.4byte	0xc38
 4009 0c78 26090000 		.4byte	.LLST50
 4010 0c7c 16       		.uleb128 0x16
 4011 0c7d 37080000 		.4byte	.LASF71
 4012 0c81 01       		.byte	0x1
 4013 0c82 3504     		.2byte	0x435
 4014 0c84 05010000 		.4byte	0x105
 4015 0c88 01       		.uleb128 0x1
 4016 0c89 50       		.byte	0x50
 4017 0c8a 23       		.uleb128 0x23
 4018 0c8b C4010000 		.4byte	.LASF107
 4019 0c8f 01       		.byte	0x1
 4020 0c90 3604     		.2byte	0x436
 4021 0c92 10010000 		.4byte	0x110
 4022 0c96 15       		.uleb128 0x15
 4023 0c97 2F080000 		.4byte	.LASF69
 4024 0c9b 01       		.byte	0x1
 4025 0c9c 3704     		.2byte	0x437
 4026 0c9e FA040000 		.4byte	0x4fa
 4027 0ca2 68090000 		.4byte	.LLST51
 4028 0ca6 24       		.uleb128 0x24
 4029 0ca7 4E030000 		.4byte	0x34e
 4030 0cab 02000000 		.4byte	.LBB31
 4031 0caf 14000000 		.4byte	.LBE31-.LBB31
 4032 0cb3 01       		.byte	0x1
 4033 0cb4 5A04     		.2byte	0x45a
 4034 0cb6 CF0C0000 		.4byte	0xccf
 4035 0cba 25       		.uleb128 0x25
 4036 0cbb 02000000 		.4byte	.LBB32
 4037 0cbf 14000000 		.4byte	.LBE32-.LBB32
 4038 0cc3 26       		.uleb128 0x26
 4039 0cc4 5E030000 		.4byte	0x35e
 4040 0cc8 26       		.uleb128 0x26
 4041 0cc9 69030000 		.4byte	0x369
 4042 0ccd 00       		.byte	0
 4043 0cce 00       		.byte	0
 4044 0ccf 1B       		.uleb128 0x1b
 4045 0cd0 16000000 		.4byte	.LBB33
 4046 0cd4 48000000 		.4byte	.LBE33-.LBB33
 4047 0cd8 160D0000 		.4byte	0xd16
 4048 0cdc 15       		.uleb128 0x15
 4049 0cdd F5020000 		.4byte	.LASF53
 4050 0ce1 01       		.byte	0x1
 4051 0ce2 5C04     		.2byte	0x45c
 4052 0ce4 22070000 		.4byte	0x722
 4053 0ce8 E1090000 		.4byte	.LLST52
 4054 0cec 2A       		.uleb128 0x2a
 4055 0ced 18000000 		.4byte	.Ldebug_ranges0+0x18
 4056 0cf1 15       		.uleb128 0x15
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 130


 4057 0cf2 24010000 		.4byte	.LASF57
 4058 0cf6 01       		.byte	0x1
 4059 0cf7 6304     		.2byte	0x463
 4060 0cf9 3D0C0000 		.4byte	0xc3d
 4061 0cfd 260A0000 		.4byte	.LLST53
 4062 0d01 19       		.uleb128 0x19
 4063 0d02 3A000000 		.4byte	.LVL147
 4064 0d06 0A180000 		.4byte	0x180a
 4065 0d0a 1A       		.uleb128 0x1a
 4066 0d0b 01       		.uleb128 0x1
 4067 0d0c 50       		.byte	0x50
 4068 0d0d 05       		.uleb128 0x5
 4069 0d0e F3       		.byte	0xf3
 4070 0d0f 01       		.uleb128 0x1
 4071 0d10 50       		.byte	0x50
 4072 0d11 23       		.byte	0x23
 4073 0d12 24       		.uleb128 0x24
 4074 0d13 00       		.byte	0
 4075 0d14 00       		.byte	0
 4076 0d15 00       		.byte	0
 4077 0d16 28       		.uleb128 0x28
 4078 0d17 75030000 		.4byte	0x375
 4079 0d1b 5E000000 		.4byte	.LBB36
 4080 0d1f 04000000 		.4byte	.LBE36-.LBB36
 4081 0d23 01       		.byte	0x1
 4082 0d24 D204     		.2byte	0x4d2
 4083 0d26 29       		.uleb128 0x29
 4084 0d27 81030000 		.4byte	0x381
 4085 0d2b 510A0000 		.4byte	.LLST54
 4086 0d2f 00       		.byte	0
 4087 0d30 00       		.byte	0
 4088 0d31 21       		.uleb128 0x21
 4089 0d32 22000000 		.4byte	.LASF109
 4090 0d36 01       		.byte	0x1
 4091 0d37 D804     		.2byte	0x4d8
 4092 0d39 05010000 		.4byte	0x105
 4093 0d3d 00000000 		.4byte	.LFB80
 4094 0d41 F8000000 		.4byte	.LFE80-.LFB80
 4095 0d45 01       		.uleb128 0x1
 4096 0d46 9C       		.byte	0x9c
 4097 0d47 EF0E0000 		.4byte	0xeef
 4098 0d4b 14       		.uleb128 0x14
 4099 0d4c 78020000 		.4byte	.LASF79
 4100 0d50 01       		.byte	0x1
 4101 0d51 D804     		.2byte	0x4d8
 4102 0d53 39020000 		.4byte	0x239
 4103 0d57 640A0000 		.4byte	.LLST55
 4104 0d5b 14       		.uleb128 0x14
 4105 0d5c BC020000 		.4byte	.LASF76
 4106 0d60 01       		.byte	0x1
 4107 0d61 D804     		.2byte	0x4d8
 4108 0d63 4B050000 		.4byte	0x54b
 4109 0d67 900A0000 		.4byte	.LLST56
 4110 0d6b 14       		.uleb128 0x14
 4111 0d6c 15090000 		.4byte	.LASF93
 4112 0d70 01       		.byte	0x1
 4113 0d71 D804     		.2byte	0x4d8
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 131


 4114 0d73 1B010000 		.4byte	0x11b
 4115 0d77 BC0A0000 		.4byte	.LLST57
 4116 0d7b 15       		.uleb128 0x15
 4117 0d7c BD030000 		.4byte	.LASF95
 4118 0d80 01       		.byte	0x1
 4119 0d81 DA04     		.2byte	0x4da
 4120 0d83 05010000 		.4byte	0x105
 4121 0d87 FF0A0000 		.4byte	.LLST58
 4122 0d8b 16       		.uleb128 0x16
 4123 0d8c D2030000 		.4byte	.LASF97
 4124 0d90 01       		.byte	0x1
 4125 0d91 DB04     		.2byte	0x4db
 4126 0d93 2E020000 		.4byte	0x22e
 4127 0d97 02       		.uleb128 0x2
 4128 0d98 91       		.byte	0x91
 4129 0d99 60       		.sleb128 -32
 4130 0d9a 15       		.uleb128 0x15
 4131 0d9b 2F080000 		.4byte	.LASF69
 4132 0d9f 01       		.byte	0x1
 4133 0da0 DC04     		.2byte	0x4dc
 4134 0da2 FA040000 		.4byte	0x4fa
 4135 0da6 350B0000 		.4byte	.LLST59
 4136 0daa 1B       		.uleb128 0x1b
 4137 0dab 10000000 		.4byte	.LBB38
 4138 0daf 4C000000 		.4byte	.LBE38-.LBB38
 4139 0db3 180E0000 		.4byte	0xe18
 4140 0db7 15       		.uleb128 0x15
 4141 0db8 F5020000 		.4byte	.LASF53
 4142 0dbc 01       		.byte	0x1
 4143 0dbd F504     		.2byte	0x4f5
 4144 0dbf 22070000 		.4byte	0x722
 4145 0dc3 610B0000 		.4byte	.LLST60
 4146 0dc7 1C       		.uleb128 0x1c
 4147 0dc8 1C000000 		.4byte	.LVL164
 4148 0dcc 04050000 		.4byte	0x504
 4149 0dd0 E10D0000 		.4byte	0xde1
 4150 0dd4 1A       		.uleb128 0x1a
 4151 0dd5 01       		.uleb128 0x1
 4152 0dd6 50       		.byte	0x50
 4153 0dd7 02       		.uleb128 0x2
 4154 0dd8 74       		.byte	0x74
 4155 0dd9 00       		.sleb128 0
 4156 0dda 1A       		.uleb128 0x1a
 4157 0ddb 01       		.uleb128 0x1
 4158 0ddc 51       		.byte	0x51
 4159 0ddd 02       		.uleb128 0x2
 4160 0dde 77       		.byte	0x77
 4161 0ddf 00       		.sleb128 0
 4162 0de0 00       		.byte	0
 4163 0de1 1C       		.uleb128 0x1c
 4164 0de2 2C000000 		.4byte	.LVL166
 4165 0de6 0A180000 		.4byte	0x180a
 4166 0dea F50D0000 		.4byte	0xdf5
 4167 0dee 1A       		.uleb128 0x1a
 4168 0def 01       		.uleb128 0x1
 4169 0df0 50       		.byte	0x50
 4170 0df1 02       		.uleb128 0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 132


 4171 0df2 74       		.byte	0x74
 4172 0df3 10       		.sleb128 16
 4173 0df4 00       		.byte	0
 4174 0df5 17       		.uleb128 0x17
 4175 0df6 42000000 		.4byte	.LVL167
 4176 0dfa EA170000 		.4byte	0x17ea
 4177 0dfe 17       		.uleb128 0x17
 4178 0dff 4E000000 		.4byte	.LVL169
 4179 0e03 EA170000 		.4byte	0x17ea
 4180 0e07 19       		.uleb128 0x19
 4181 0e08 5A000000 		.4byte	.LVL170
 4182 0e0c 39180000 		.4byte	0x1839
 4183 0e10 1A       		.uleb128 0x1a
 4184 0e11 01       		.uleb128 0x1
 4185 0e12 50       		.byte	0x50
 4186 0e13 02       		.uleb128 0x2
 4187 0e14 91       		.byte	0x91
 4188 0e15 60       		.sleb128 -32
 4189 0e16 00       		.byte	0
 4190 0e17 00       		.byte	0
 4191 0e18 17       		.uleb128 0x17
 4192 0e19 10000000 		.4byte	.LVL162
 4193 0e1d DF170000 		.4byte	0x17df
 4194 0e21 17       		.uleb128 0x17
 4195 0e22 60000000 		.4byte	.LVL172
 4196 0e26 EA170000 		.4byte	0x17ea
 4197 0e2a 17       		.uleb128 0x17
 4198 0e2b 64000000 		.4byte	.LVL173
 4199 0e2f 45180000 		.4byte	0x1845
 4200 0e33 17       		.uleb128 0x17
 4201 0e34 68000000 		.4byte	.LVL174
 4202 0e38 DF170000 		.4byte	0x17df
 4203 0e3c 17       		.uleb128 0x17
 4204 0e3d 90000000 		.4byte	.LVL175
 4205 0e41 EA170000 		.4byte	0x17ea
 4206 0e45 1C       		.uleb128 0x1c
 4207 0e46 98000000 		.4byte	.LVL177
 4208 0e4a 51180000 		.4byte	0x1851
 4209 0e4e 5F0E0000 		.4byte	0xe5f
 4210 0e52 1A       		.uleb128 0x1a
 4211 0e53 01       		.uleb128 0x1
 4212 0e54 50       		.byte	0x50
 4213 0e55 02       		.uleb128 0x2
 4214 0e56 91       		.byte	0x91
 4215 0e57 60       		.sleb128 -32
 4216 0e58 1A       		.uleb128 0x1a
 4217 0e59 01       		.uleb128 0x1
 4218 0e5a 51       		.byte	0x51
 4219 0e5b 02       		.uleb128 0x2
 4220 0e5c 91       		.byte	0x91
 4221 0e5d 5C       		.sleb128 -36
 4222 0e5e 00       		.byte	0
 4223 0e5f 1C       		.uleb128 0x1c
 4224 0e60 A0000000 		.4byte	.LVL178
 4225 0e64 23040000 		.4byte	0x423
 4226 0e68 730E0000 		.4byte	0xe73
 4227 0e6c 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 133


 4228 0e6d 01       		.uleb128 0x1
 4229 0e6e 50       		.byte	0x50
 4230 0e6f 02       		.uleb128 0x2
 4231 0e70 74       		.byte	0x74
 4232 0e71 00       		.sleb128 0
 4233 0e72 00       		.byte	0
 4234 0e73 1C       		.uleb128 0x1c
 4235 0e74 AC000000 		.4byte	.LVL179
 4236 0e78 5D180000 		.4byte	0x185d
 4237 0e7c 870E0000 		.4byte	0xe87
 4238 0e80 1A       		.uleb128 0x1a
 4239 0e81 01       		.uleb128 0x1
 4240 0e82 50       		.byte	0x50
 4241 0e83 02       		.uleb128 0x2
 4242 0e84 74       		.byte	0x74
 4243 0e85 24       		.sleb128 36
 4244 0e86 00       		.byte	0
 4245 0e87 1C       		.uleb128 0x1c
 4246 0e88 B2000000 		.4byte	.LVL180
 4247 0e8c 50050000 		.4byte	0x550
 4248 0e90 9B0E0000 		.4byte	0xe9b
 4249 0e94 1A       		.uleb128 0x1a
 4250 0e95 01       		.uleb128 0x1
 4251 0e96 50       		.byte	0x50
 4252 0e97 02       		.uleb128 0x2
 4253 0e98 74       		.byte	0x74
 4254 0e99 00       		.sleb128 0
 4255 0e9a 00       		.byte	0
 4256 0e9b 17       		.uleb128 0x17
 4257 0e9c B6000000 		.4byte	.LVL181
 4258 0ea0 69180000 		.4byte	0x1869
 4259 0ea4 1C       		.uleb128 0x1c
 4260 0ea5 D2000000 		.4byte	.LVL182
 4261 0ea9 50050000 		.4byte	0x550
 4262 0ead B80E0000 		.4byte	0xeb8
 4263 0eb1 1A       		.uleb128 0x1a
 4264 0eb2 01       		.uleb128 0x1
 4265 0eb3 50       		.byte	0x50
 4266 0eb4 02       		.uleb128 0x2
 4267 0eb5 74       		.byte	0x74
 4268 0eb6 00       		.sleb128 0
 4269 0eb7 00       		.byte	0
 4270 0eb8 17       		.uleb128 0x17
 4271 0eb9 D6000000 		.4byte	.LVL183
 4272 0ebd 69180000 		.4byte	0x1869
 4273 0ec1 1C       		.uleb128 0x1c
 4274 0ec2 DE000000 		.4byte	.LVL184
 4275 0ec6 50050000 		.4byte	0x550
 4276 0eca D50E0000 		.4byte	0xed5
 4277 0ece 1A       		.uleb128 0x1a
 4278 0ecf 01       		.uleb128 0x1
 4279 0ed0 50       		.byte	0x50
 4280 0ed1 02       		.uleb128 0x2
 4281 0ed2 74       		.byte	0x74
 4282 0ed3 00       		.sleb128 0
 4283 0ed4 00       		.byte	0
 4284 0ed5 17       		.uleb128 0x17
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 134


 4285 0ed6 E2000000 		.4byte	.LVL185
 4286 0eda 69180000 		.4byte	0x1869
 4287 0ede 19       		.uleb128 0x19
 4288 0edf E8000000 		.4byte	.LVL186
 4289 0ee3 23040000 		.4byte	0x423
 4290 0ee7 1A       		.uleb128 0x1a
 4291 0ee8 01       		.uleb128 0x1
 4292 0ee9 50       		.byte	0x50
 4293 0eea 02       		.uleb128 0x2
 4294 0eeb 74       		.byte	0x74
 4295 0eec 00       		.sleb128 0
 4296 0eed 00       		.byte	0
 4297 0eee 00       		.byte	0
 4298 0eef 21       		.uleb128 0x21
 4299 0ef0 7E000000 		.4byte	.LASF110
 4300 0ef4 01       		.byte	0x1
 4301 0ef5 6605     		.2byte	0x566
 4302 0ef7 05010000 		.4byte	0x105
 4303 0efb 00000000 		.4byte	.LFB81
 4304 0eff 28010000 		.4byte	.LFE81-.LFB81
 4305 0f03 01       		.uleb128 0x1
 4306 0f04 9C       		.byte	0x9c
 4307 0f05 08110000 		.4byte	0x1108
 4308 0f09 14       		.uleb128 0x14
 4309 0f0a 78020000 		.4byte	.LASF79
 4310 0f0e 01       		.byte	0x1
 4311 0f0f 6605     		.2byte	0x566
 4312 0f11 39020000 		.4byte	0x239
 4313 0f15 8C0B0000 		.4byte	.LLST61
 4314 0f19 14       		.uleb128 0x14
 4315 0f1a 15090000 		.4byte	.LASF93
 4316 0f1e 01       		.byte	0x1
 4317 0f1f 6605     		.2byte	0x566
 4318 0f21 1B010000 		.4byte	0x11b
 4319 0f25 B80B0000 		.4byte	.LLST62
 4320 0f29 15       		.uleb128 0x15
 4321 0f2a BD030000 		.4byte	.LASF95
 4322 0f2e 01       		.byte	0x1
 4323 0f2f 6805     		.2byte	0x568
 4324 0f31 05010000 		.4byte	0x105
 4325 0f35 FB0B0000 		.4byte	.LLST63
 4326 0f39 16       		.uleb128 0x16
 4327 0f3a D2030000 		.4byte	.LASF97
 4328 0f3e 01       		.byte	0x1
 4329 0f3f 6905     		.2byte	0x569
 4330 0f41 2E020000 		.4byte	0x22e
 4331 0f45 02       		.uleb128 0x2
 4332 0f46 91       		.byte	0x91
 4333 0f47 68       		.sleb128 -24
 4334 0f48 15       		.uleb128 0x15
 4335 0f49 2F080000 		.4byte	.LASF69
 4336 0f4d 01       		.byte	0x1
 4337 0f4e 6A05     		.2byte	0x56a
 4338 0f50 FA040000 		.4byte	0x4fa
 4339 0f54 310C0000 		.4byte	.LLST64
 4340 0f58 15       		.uleb128 0x15
 4341 0f59 1A070000 		.4byte	.LASF111
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 135


 4342 0f5d 01       		.byte	0x1
 4343 0f5e 6D05     		.2byte	0x56d
 4344 0f60 05010000 		.4byte	0x105
 4345 0f64 5D0C0000 		.4byte	.LLST65
 4346 0f68 1B       		.uleb128 0x1b
 4347 0f69 10000000 		.4byte	.LBB39
 4348 0f6d 4E000000 		.4byte	.LBE39-.LBB39
 4349 0f71 C50F0000 		.4byte	0xfc5
 4350 0f75 15       		.uleb128 0x15
 4351 0f76 D1060000 		.4byte	.LASF112
 4352 0f7a 01       		.byte	0x1
 4353 0f7b 8905     		.2byte	0x589
 4354 0f7d 22070000 		.4byte	0x722
 4355 0f81 920C0000 		.4byte	.LLST66
 4356 0f85 17       		.uleb128 0x17
 4357 0f86 20000000 		.4byte	.LVL196
 4358 0f8a 81180000 		.4byte	0x1881
 4359 0f8e 1C       		.uleb128 0x1c
 4360 0f8f 2E000000 		.4byte	.LVL197
 4361 0f93 0A180000 		.4byte	0x180a
 4362 0f97 A20F0000 		.4byte	0xfa2
 4363 0f9b 1A       		.uleb128 0x1a
 4364 0f9c 01       		.uleb128 0x1
 4365 0f9d 50       		.byte	0x50
 4366 0f9e 02       		.uleb128 0x2
 4367 0f9f 74       		.byte	0x74
 4368 0fa0 10       		.sleb128 16
 4369 0fa1 00       		.byte	0
 4370 0fa2 17       		.uleb128 0x17
 4371 0fa3 44000000 		.4byte	.LVL198
 4372 0fa7 EA170000 		.4byte	0x17ea
 4373 0fab 17       		.uleb128 0x17
 4374 0fac 50000000 		.4byte	.LVL201
 4375 0fb0 EA170000 		.4byte	0x17ea
 4376 0fb4 19       		.uleb128 0x19
 4377 0fb5 5C000000 		.4byte	.LVL202
 4378 0fb9 39180000 		.4byte	0x1839
 4379 0fbd 1A       		.uleb128 0x1a
 4380 0fbe 01       		.uleb128 0x1
 4381 0fbf 50       		.byte	0x50
 4382 0fc0 02       		.uleb128 0x2
 4383 0fc1 91       		.byte	0x91
 4384 0fc2 68       		.sleb128 -24
 4385 0fc3 00       		.byte	0
 4386 0fc4 00       		.byte	0
 4387 0fc5 1B       		.uleb128 0x1b
 4388 0fc6 08010000 		.4byte	.LBB40
 4389 0fca 0E000000 		.4byte	.LBE40-.LBB40
 4390 0fce 00100000 		.4byte	0x1000
 4391 0fd2 15       		.uleb128 0x15
 4392 0fd3 9A080000 		.4byte	.LASF113
 4393 0fd7 01       		.byte	0x1
 4394 0fd8 2606     		.2byte	0x626
 4395 0fda 10010000 		.4byte	0x110
 4396 0fde CD0C0000 		.4byte	.LLST67
 4397 0fe2 1C       		.uleb128 0x1c
 4398 0fe3 0E010000 		.4byte	.LVL224
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 136


 4399 0fe7 8D030000 		.4byte	0x38d
 4400 0feb F60F0000 		.4byte	0xff6
 4401 0fef 1A       		.uleb128 0x1a
 4402 0ff0 01       		.uleb128 0x1
 4403 0ff1 50       		.byte	0x50
 4404 0ff2 02       		.uleb128 0x2
 4405 0ff3 74       		.byte	0x74
 4406 0ff4 00       		.sleb128 0
 4407 0ff5 00       		.byte	0
 4408 0ff6 17       		.uleb128 0x17
 4409 0ff7 16010000 		.4byte	.LVL226
 4410 0ffb 8D180000 		.4byte	0x188d
 4411 0fff 00       		.byte	0
 4412 1000 17       		.uleb128 0x17
 4413 1001 10000000 		.4byte	.LVL192
 4414 1005 DF170000 		.4byte	0x17df
 4415 1009 17       		.uleb128 0x17
 4416 100a 62000000 		.4byte	.LVL204
 4417 100e EA170000 		.4byte	0x17ea
 4418 1012 17       		.uleb128 0x17
 4419 1013 66000000 		.4byte	.LVL205
 4420 1017 45180000 		.4byte	0x1845
 4421 101b 17       		.uleb128 0x17
 4422 101c 6A000000 		.4byte	.LVL206
 4423 1020 DF170000 		.4byte	0x17df
 4424 1024 17       		.uleb128 0x17
 4425 1025 92000000 		.4byte	.LVL207
 4426 1029 EA170000 		.4byte	0x17ea
 4427 102d 1C       		.uleb128 0x1c
 4428 102e 9A000000 		.4byte	.LVL209
 4429 1032 51180000 		.4byte	0x1851
 4430 1036 47100000 		.4byte	0x1047
 4431 103a 1A       		.uleb128 0x1a
 4432 103b 01       		.uleb128 0x1
 4433 103c 50       		.byte	0x50
 4434 103d 02       		.uleb128 0x2
 4435 103e 91       		.byte	0x91
 4436 103f 68       		.sleb128 -24
 4437 1040 1A       		.uleb128 0x1a
 4438 1041 01       		.uleb128 0x1
 4439 1042 51       		.byte	0x51
 4440 1043 02       		.uleb128 0x2
 4441 1044 91       		.byte	0x91
 4442 1045 64       		.sleb128 -28
 4443 1046 00       		.byte	0
 4444 1047 1C       		.uleb128 0x1c
 4445 1048 A2000000 		.4byte	.LVL210
 4446 104c 23040000 		.4byte	0x423
 4447 1050 5B100000 		.4byte	0x105b
 4448 1054 1A       		.uleb128 0x1a
 4449 1055 01       		.uleb128 0x1
 4450 1056 50       		.byte	0x50
 4451 1057 02       		.uleb128 0x2
 4452 1058 74       		.byte	0x74
 4453 1059 00       		.sleb128 0
 4454 105a 00       		.byte	0
 4455 105b 17       		.uleb128 0x17
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 137


 4456 105c AC000000 		.4byte	.LVL211
 4457 1060 DF170000 		.4byte	0x17df
 4458 1064 17       		.uleb128 0x17
 4459 1065 B2000000 		.4byte	.LVL212
 4460 1069 99180000 		.4byte	0x1899
 4461 106d 17       		.uleb128 0x17
 4462 106e B8000000 		.4byte	.LVL214
 4463 1072 EA170000 		.4byte	0x17ea
 4464 1076 1C       		.uleb128 0x1c
 4465 1077 C2000000 		.4byte	.LVL215
 4466 107b 5D180000 		.4byte	0x185d
 4467 107f 8A100000 		.4byte	0x108a
 4468 1083 1A       		.uleb128 0x1a
 4469 1084 01       		.uleb128 0x1
 4470 1085 50       		.byte	0x50
 4471 1086 02       		.uleb128 0x2
 4472 1087 74       		.byte	0x74
 4473 1088 24       		.sleb128 36
 4474 1089 00       		.byte	0
 4475 108a 1C       		.uleb128 0x1c
 4476 108b C8000000 		.4byte	.LVL216
 4477 108f 50050000 		.4byte	0x550
 4478 1093 9E100000 		.4byte	0x109e
 4479 1097 1A       		.uleb128 0x1a
 4480 1098 01       		.uleb128 0x1
 4481 1099 50       		.byte	0x50
 4482 109a 02       		.uleb128 0x2
 4483 109b 74       		.byte	0x74
 4484 109c 00       		.sleb128 0
 4485 109d 00       		.byte	0
 4486 109e 17       		.uleb128 0x17
 4487 109f CC000000 		.4byte	.LVL217
 4488 10a3 69180000 		.4byte	0x1869
 4489 10a7 1C       		.uleb128 0x1c
 4490 10a8 E8000000 		.4byte	.LVL218
 4491 10ac 50050000 		.4byte	0x550
 4492 10b0 BB100000 		.4byte	0x10bb
 4493 10b4 1A       		.uleb128 0x1a
 4494 10b5 01       		.uleb128 0x1
 4495 10b6 50       		.byte	0x50
 4496 10b7 02       		.uleb128 0x2
 4497 10b8 74       		.byte	0x74
 4498 10b9 00       		.sleb128 0
 4499 10ba 00       		.byte	0
 4500 10bb 17       		.uleb128 0x17
 4501 10bc EC000000 		.4byte	.LVL219
 4502 10c0 69180000 		.4byte	0x1869
 4503 10c4 1C       		.uleb128 0x1c
 4504 10c5 F4000000 		.4byte	.LVL220
 4505 10c9 50050000 		.4byte	0x550
 4506 10cd D8100000 		.4byte	0x10d8
 4507 10d1 1A       		.uleb128 0x1a
 4508 10d2 01       		.uleb128 0x1
 4509 10d3 50       		.byte	0x50
 4510 10d4 02       		.uleb128 0x2
 4511 10d5 74       		.byte	0x74
 4512 10d6 00       		.sleb128 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 138


 4513 10d7 00       		.byte	0
 4514 10d8 17       		.uleb128 0x17
 4515 10d9 F8000000 		.4byte	.LVL221
 4516 10dd 69180000 		.4byte	0x1869
 4517 10e1 1C       		.uleb128 0x1c
 4518 10e2 FE000000 		.4byte	.LVL222
 4519 10e6 23040000 		.4byte	0x423
 4520 10ea F5100000 		.4byte	0x10f5
 4521 10ee 1A       		.uleb128 0x1a
 4522 10ef 01       		.uleb128 0x1
 4523 10f0 50       		.byte	0x50
 4524 10f1 02       		.uleb128 0x2
 4525 10f2 74       		.byte	0x74
 4526 10f3 00       		.sleb128 0
 4527 10f4 00       		.byte	0
 4528 10f5 17       		.uleb128 0x17
 4529 10f6 08010000 		.4byte	.LVL223
 4530 10fa DF170000 		.4byte	0x17df
 4531 10fe 17       		.uleb128 0x17
 4532 10ff 1A010000 		.4byte	.LVL227
 4533 1103 EA170000 		.4byte	0x17ea
 4534 1107 00       		.byte	0
 4535 1108 21       		.uleb128 0x21
 4536 1109 2F070000 		.4byte	.LASF114
 4537 110d 01       		.byte	0x1
 4538 110e 7602     		.2byte	0x276
 4539 1110 05010000 		.4byte	0x105
 4540 1114 00000000 		.4byte	.LFB75
 4541 1118 30000000 		.4byte	.LFE75-.LFB75
 4542 111c 01       		.uleb128 0x1
 4543 111d 9C       		.byte	0x9c
 4544 111e 82110000 		.4byte	0x1182
 4545 1122 14       		.uleb128 0x14
 4546 1123 0A060000 		.4byte	.LASF103
 4547 1127 01       		.byte	0x1
 4548 1128 7602     		.2byte	0x276
 4549 112a 39020000 		.4byte	0x239
 4550 112e EB0C0000 		.4byte	.LLST68
 4551 1132 14       		.uleb128 0x14
 4552 1133 15090000 		.4byte	.LASF93
 4553 1137 01       		.byte	0x1
 4554 1138 7602     		.2byte	0x276
 4555 113a 1B010000 		.4byte	0x11b
 4556 113e 090D0000 		.4byte	.LLST69
 4557 1142 15       		.uleb128 0x15
 4558 1143 37080000 		.4byte	.LASF71
 4559 1147 01       		.byte	0x1
 4560 1148 7802     		.2byte	0x278
 4561 114a 05010000 		.4byte	0x105
 4562 114e 270D0000 		.4byte	.LLST70
 4563 1152 15       		.uleb128 0x15
 4564 1153 76000000 		.4byte	.LASF104
 4565 1157 01       		.byte	0x1
 4566 1158 7902     		.2byte	0x279
 4567 115a FA040000 		.4byte	0x4fa
 4568 115e 510D0000 		.4byte	.LLST71
 4569 1162 17       		.uleb128 0x17
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 139


 4570 1163 0C000000 		.4byte	.LVL231
 4571 1167 75180000 		.4byte	0x1875
 4572 116b 19       		.uleb128 0x19
 4573 116c 22000000 		.4byte	.LVL234
 4574 1170 EF0E0000 		.4byte	0xeef
 4575 1174 1A       		.uleb128 0x1a
 4576 1175 01       		.uleb128 0x1
 4577 1176 50       		.byte	0x50
 4578 1177 02       		.uleb128 0x2
 4579 1178 74       		.byte	0x74
 4580 1179 00       		.sleb128 0
 4581 117a 1A       		.uleb128 0x1a
 4582 117b 01       		.uleb128 0x1
 4583 117c 51       		.byte	0x51
 4584 117d 02       		.uleb128 0x2
 4585 117e 76       		.byte	0x76
 4586 117f 00       		.sleb128 0
 4587 1180 00       		.byte	0
 4588 1181 00       		.byte	0
 4589 1182 21       		.uleb128 0x21
 4590 1183 24030000 		.4byte	.LASF115
 4591 1187 01       		.byte	0x1
 4592 1188 4106     		.2byte	0x641
 4593 118a 05010000 		.4byte	0x105
 4594 118e 00000000 		.4byte	.LFB82
 4595 1192 F8000000 		.4byte	.LFE82-.LFB82
 4596 1196 01       		.uleb128 0x1
 4597 1197 9C       		.byte	0x9c
 4598 1198 50130000 		.4byte	0x1350
 4599 119c 14       		.uleb128 0x14
 4600 119d 78020000 		.4byte	.LASF79
 4601 11a1 01       		.byte	0x1
 4602 11a2 4106     		.2byte	0x641
 4603 11a4 39020000 		.4byte	0x239
 4604 11a8 6F0D0000 		.4byte	.LLST72
 4605 11ac 14       		.uleb128 0x14
 4606 11ad BC020000 		.4byte	.LASF76
 4607 11b1 01       		.byte	0x1
 4608 11b2 4106     		.2byte	0x641
 4609 11b4 4B050000 		.4byte	0x54b
 4610 11b8 9B0D0000 		.4byte	.LLST73
 4611 11bc 14       		.uleb128 0x14
 4612 11bd 15090000 		.4byte	.LASF93
 4613 11c1 01       		.byte	0x1
 4614 11c2 4106     		.2byte	0x641
 4615 11c4 1B010000 		.4byte	0x11b
 4616 11c8 C70D0000 		.4byte	.LLST74
 4617 11cc 15       		.uleb128 0x15
 4618 11cd BD030000 		.4byte	.LASF95
 4619 11d1 01       		.byte	0x1
 4620 11d2 4306     		.2byte	0x643
 4621 11d4 05010000 		.4byte	0x105
 4622 11d8 0A0E0000 		.4byte	.LLST75
 4623 11dc 16       		.uleb128 0x16
 4624 11dd D2030000 		.4byte	.LASF97
 4625 11e1 01       		.byte	0x1
 4626 11e2 4406     		.2byte	0x644
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 140


 4627 11e4 2E020000 		.4byte	0x22e
 4628 11e8 02       		.uleb128 0x2
 4629 11e9 91       		.byte	0x91
 4630 11ea 68       		.sleb128 -24
 4631 11eb 15       		.uleb128 0x15
 4632 11ec 78060000 		.4byte	.LASF116
 4633 11f0 01       		.byte	0x1
 4634 11f1 4506     		.2byte	0x645
 4635 11f3 63020000 		.4byte	0x263
 4636 11f7 4B0E0000 		.4byte	.LLST76
 4637 11fb 15       		.uleb128 0x15
 4638 11fc 2F080000 		.4byte	.LASF69
 4639 1200 01       		.byte	0x1
 4640 1201 4606     		.2byte	0x646
 4641 1203 FA040000 		.4byte	0x4fa
 4642 1207 5E0E0000 		.4byte	.LLST77
 4643 120b 1B       		.uleb128 0x1b
 4644 120c 10000000 		.4byte	.LBB41
 4645 1210 4C000000 		.4byte	.LBE41-.LBB41
 4646 1214 79120000 		.4byte	0x1279
 4647 1218 15       		.uleb128 0x15
 4648 1219 F5020000 		.4byte	.LASF53
 4649 121d 01       		.byte	0x1
 4650 121e 5F06     		.2byte	0x65f
 4651 1220 22070000 		.4byte	0x722
 4652 1224 8A0E0000 		.4byte	.LLST78
 4653 1228 1C       		.uleb128 0x1c
 4654 1229 1E000000 		.4byte	.LVL242
 4655 122d 04050000 		.4byte	0x504
 4656 1231 42120000 		.4byte	0x1242
 4657 1235 1A       		.uleb128 0x1a
 4658 1236 01       		.uleb128 0x1
 4659 1237 50       		.byte	0x50
 4660 1238 02       		.uleb128 0x2
 4661 1239 74       		.byte	0x74
 4662 123a 00       		.sleb128 0
 4663 123b 1A       		.uleb128 0x1a
 4664 123c 01       		.uleb128 0x1
 4665 123d 51       		.byte	0x51
 4666 123e 02       		.uleb128 0x2
 4667 123f 76       		.byte	0x76
 4668 1240 00       		.sleb128 0
 4669 1241 00       		.byte	0
 4670 1242 1C       		.uleb128 0x1c
 4671 1243 2C000000 		.4byte	.LVL243
 4672 1247 0A180000 		.4byte	0x180a
 4673 124b 56120000 		.4byte	0x1256
 4674 124f 1A       		.uleb128 0x1a
 4675 1250 01       		.uleb128 0x1
 4676 1251 50       		.byte	0x50
 4677 1252 02       		.uleb128 0x2
 4678 1253 74       		.byte	0x74
 4679 1254 24       		.sleb128 36
 4680 1255 00       		.byte	0
 4681 1256 17       		.uleb128 0x17
 4682 1257 42000000 		.4byte	.LVL244
 4683 125b EA170000 		.4byte	0x17ea
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 141


 4684 125f 17       		.uleb128 0x17
 4685 1260 4E000000 		.4byte	.LVL247
 4686 1264 EA170000 		.4byte	0x17ea
 4687 1268 19       		.uleb128 0x19
 4688 1269 5A000000 		.4byte	.LVL248
 4689 126d 39180000 		.4byte	0x1839
 4690 1271 1A       		.uleb128 0x1a
 4691 1272 01       		.uleb128 0x1
 4692 1273 50       		.byte	0x50
 4693 1274 02       		.uleb128 0x2
 4694 1275 91       		.byte	0x91
 4695 1276 68       		.sleb128 -24
 4696 1277 00       		.byte	0
 4697 1278 00       		.byte	0
 4698 1279 17       		.uleb128 0x17
 4699 127a 10000000 		.4byte	.LVL239
 4700 127e DF170000 		.4byte	0x17df
 4701 1282 17       		.uleb128 0x17
 4702 1283 60000000 		.4byte	.LVL250
 4703 1287 EA170000 		.4byte	0x17ea
 4704 128b 17       		.uleb128 0x17
 4705 128c 64000000 		.4byte	.LVL251
 4706 1290 45180000 		.4byte	0x1845
 4707 1294 17       		.uleb128 0x17
 4708 1295 68000000 		.4byte	.LVL252
 4709 1299 DF170000 		.4byte	0x17df
 4710 129d 17       		.uleb128 0x17
 4711 129e 90000000 		.4byte	.LVL253
 4712 12a2 EA170000 		.4byte	0x17ea
 4713 12a6 1C       		.uleb128 0x1c
 4714 12a7 98000000 		.4byte	.LVL255
 4715 12ab 51180000 		.4byte	0x1851
 4716 12af C0120000 		.4byte	0x12c0
 4717 12b3 1A       		.uleb128 0x1a
 4718 12b4 01       		.uleb128 0x1
 4719 12b5 50       		.byte	0x50
 4720 12b6 02       		.uleb128 0x2
 4721 12b7 91       		.byte	0x91
 4722 12b8 68       		.sleb128 -24
 4723 12b9 1A       		.uleb128 0x1a
 4724 12ba 01       		.uleb128 0x1
 4725 12bb 51       		.byte	0x51
 4726 12bc 02       		.uleb128 0x2
 4727 12bd 91       		.byte	0x91
 4728 12be 64       		.sleb128 -28
 4729 12bf 00       		.byte	0
 4730 12c0 1C       		.uleb128 0x1c
 4731 12c1 A0000000 		.4byte	.LVL256
 4732 12c5 23040000 		.4byte	0x423
 4733 12c9 D4120000 		.4byte	0x12d4
 4734 12cd 1A       		.uleb128 0x1a
 4735 12ce 01       		.uleb128 0x1
 4736 12cf 50       		.byte	0x50
 4737 12d0 02       		.uleb128 0x2
 4738 12d1 74       		.byte	0x74
 4739 12d2 00       		.sleb128 0
 4740 12d3 00       		.byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 142


 4741 12d4 1C       		.uleb128 0x1c
 4742 12d5 AC000000 		.4byte	.LVL257
 4743 12d9 5D180000 		.4byte	0x185d
 4744 12dd E8120000 		.4byte	0x12e8
 4745 12e1 1A       		.uleb128 0x1a
 4746 12e2 01       		.uleb128 0x1
 4747 12e3 50       		.byte	0x50
 4748 12e4 02       		.uleb128 0x2
 4749 12e5 74       		.byte	0x74
 4750 12e6 24       		.sleb128 36
 4751 12e7 00       		.byte	0
 4752 12e8 1C       		.uleb128 0x1c
 4753 12e9 B2000000 		.4byte	.LVL258
 4754 12ed 50050000 		.4byte	0x550
 4755 12f1 FC120000 		.4byte	0x12fc
 4756 12f5 1A       		.uleb128 0x1a
 4757 12f6 01       		.uleb128 0x1
 4758 12f7 50       		.byte	0x50
 4759 12f8 02       		.uleb128 0x2
 4760 12f9 74       		.byte	0x74
 4761 12fa 00       		.sleb128 0
 4762 12fb 00       		.byte	0
 4763 12fc 17       		.uleb128 0x17
 4764 12fd B6000000 		.4byte	.LVL259
 4765 1301 69180000 		.4byte	0x1869
 4766 1305 1C       		.uleb128 0x1c
 4767 1306 D2000000 		.4byte	.LVL260
 4768 130a 50050000 		.4byte	0x550
 4769 130e 19130000 		.4byte	0x1319
 4770 1312 1A       		.uleb128 0x1a
 4771 1313 01       		.uleb128 0x1
 4772 1314 50       		.byte	0x50
 4773 1315 02       		.uleb128 0x2
 4774 1316 74       		.byte	0x74
 4775 1317 00       		.sleb128 0
 4776 1318 00       		.byte	0
 4777 1319 17       		.uleb128 0x17
 4778 131a D6000000 		.4byte	.LVL261
 4779 131e 69180000 		.4byte	0x1869
 4780 1322 1C       		.uleb128 0x1c
 4781 1323 DE000000 		.4byte	.LVL262
 4782 1327 50050000 		.4byte	0x550
 4783 132b 36130000 		.4byte	0x1336
 4784 132f 1A       		.uleb128 0x1a
 4785 1330 01       		.uleb128 0x1
 4786 1331 50       		.byte	0x50
 4787 1332 02       		.uleb128 0x2
 4788 1333 74       		.byte	0x74
 4789 1334 00       		.sleb128 0
 4790 1335 00       		.byte	0
 4791 1336 17       		.uleb128 0x17
 4792 1337 E2000000 		.4byte	.LVL263
 4793 133b 69180000 		.4byte	0x1869
 4794 133f 19       		.uleb128 0x19
 4795 1340 E8000000 		.4byte	.LVL264
 4796 1344 23040000 		.4byte	0x423
 4797 1348 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 143


 4798 1349 01       		.uleb128 0x1
 4799 134a 50       		.byte	0x50
 4800 134b 02       		.uleb128 0x2
 4801 134c 74       		.byte	0x74
 4802 134d 00       		.sleb128 0
 4803 134e 00       		.byte	0
 4804 134f 00       		.byte	0
 4805 1350 21       		.uleb128 0x21
 4806 1351 30000000 		.4byte	.LASF117
 4807 1355 01       		.byte	0x1
 4808 1356 D706     		.2byte	0x6d7
 4809 1358 05010000 		.4byte	0x105
 4810 135c 00000000 		.4byte	.LFB83
 4811 1360 72000000 		.4byte	.LFE83-.LFB83
 4812 1364 01       		.uleb128 0x1
 4813 1365 9C       		.byte	0x9c
 4814 1366 67140000 		.4byte	0x1467
 4815 136a 14       		.uleb128 0x14
 4816 136b 78020000 		.4byte	.LASF79
 4817 136f 01       		.byte	0x1
 4818 1370 D706     		.2byte	0x6d7
 4819 1372 39020000 		.4byte	0x239
 4820 1376 A80E0000 		.4byte	.LLST79
 4821 137a 14       		.uleb128 0x14
 4822 137b BC020000 		.4byte	.LASF76
 4823 137f 01       		.byte	0x1
 4824 1380 D706     		.2byte	0x6d7
 4825 1382 4B050000 		.4byte	0x54b
 4826 1386 F80E0000 		.4byte	.LLST80
 4827 138a 14       		.uleb128 0x14
 4828 138b 5C000000 		.4byte	.LASF106
 4829 138f 01       		.byte	0x1
 4830 1390 D706     		.2byte	0x6d7
 4831 1392 380C0000 		.4byte	0xc38
 4832 1396 320F0000 		.4byte	.LLST81
 4833 139a 16       		.uleb128 0x16
 4834 139b 37080000 		.4byte	.LASF71
 4835 139f 01       		.byte	0x1
 4836 13a0 D906     		.2byte	0x6d9
 4837 13a2 05010000 		.4byte	0x105
 4838 13a6 01       		.uleb128 0x1
 4839 13a7 50       		.byte	0x50
 4840 13a8 23       		.uleb128 0x23
 4841 13a9 C4010000 		.4byte	.LASF107
 4842 13ad 01       		.byte	0x1
 4843 13ae DA06     		.2byte	0x6da
 4844 13b0 10010000 		.4byte	0x110
 4845 13b4 15       		.uleb128 0x15
 4846 13b5 2F080000 		.4byte	.LASF69
 4847 13b9 01       		.byte	0x1
 4848 13ba DB06     		.2byte	0x6db
 4849 13bc FA040000 		.4byte	0x4fa
 4850 13c0 740F0000 		.4byte	.LLST82
 4851 13c4 24       		.uleb128 0x24
 4852 13c5 4E030000 		.4byte	0x34e
 4853 13c9 04000000 		.4byte	.LBB42
 4854 13cd 14000000 		.4byte	.LBE42-.LBB42
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 144


 4855 13d1 01       		.byte	0x1
 4856 13d2 F006     		.2byte	0x6f0
 4857 13d4 ED130000 		.4byte	0x13ed
 4858 13d8 25       		.uleb128 0x25
 4859 13d9 04000000 		.4byte	.LBB43
 4860 13dd 14000000 		.4byte	.LBE43-.LBB43
 4861 13e1 26       		.uleb128 0x26
 4862 13e2 5E030000 		.4byte	0x35e
 4863 13e6 26       		.uleb128 0x26
 4864 13e7 69030000 		.4byte	0x369
 4865 13eb 00       		.byte	0
 4866 13ec 00       		.byte	0
 4867 13ed 1B       		.uleb128 0x1b
 4868 13ee 18000000 		.4byte	.LBB44
 4869 13f2 52000000 		.4byte	.LBE44-.LBB44
 4870 13f6 4C140000 		.4byte	0x144c
 4871 13fa 15       		.uleb128 0x15
 4872 13fb F5020000 		.4byte	.LASF53
 4873 13ff 01       		.byte	0x1
 4874 1400 F206     		.2byte	0x6f2
 4875 1402 22070000 		.4byte	0x722
 4876 1406 C40F0000 		.4byte	.LLST83
 4877 140a 2A       		.uleb128 0x2a
 4878 140b 30000000 		.4byte	.Ldebug_ranges0+0x30
 4879 140f 15       		.uleb128 0x15
 4880 1410 DE090000 		.4byte	.LASF56
 4881 1414 01       		.byte	0x1
 4882 1415 F706     		.2byte	0x6f7
 4883 1417 3D0C0000 		.4byte	0xc3d
 4884 141b FC0F0000 		.4byte	.LLST84
 4885 141f 1C       		.uleb128 0x1c
 4886 1420 2A000000 		.4byte	.LVL271
 4887 1424 04050000 		.4byte	0x504
 4888 1428 3A140000 		.4byte	0x143a
 4889 142c 1A       		.uleb128 0x1a
 4890 142d 01       		.uleb128 0x1
 4891 142e 50       		.byte	0x50
 4892 142f 02       		.uleb128 0x2
 4893 1430 77       		.byte	0x77
 4894 1431 00       		.sleb128 0
 4895 1432 1A       		.uleb128 0x1a
 4896 1433 01       		.uleb128 0x1
 4897 1434 51       		.byte	0x51
 4898 1435 03       		.uleb128 0x3
 4899 1436 F3       		.byte	0xf3
 4900 1437 01       		.uleb128 0x1
 4901 1438 51       		.byte	0x51
 4902 1439 00       		.byte	0
 4903 143a 19       		.uleb128 0x19
 4904 143b 40000000 		.4byte	.LVL273
 4905 143f 0A180000 		.4byte	0x180a
 4906 1443 1A       		.uleb128 0x1a
 4907 1444 01       		.uleb128 0x1
 4908 1445 50       		.byte	0x50
 4909 1446 02       		.uleb128 0x2
 4910 1447 77       		.byte	0x77
 4911 1448 10       		.sleb128 16
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 145


 4912 1449 00       		.byte	0
 4913 144a 00       		.byte	0
 4914 144b 00       		.byte	0
 4915 144c 28       		.uleb128 0x28
 4916 144d 75030000 		.4byte	0x375
 4917 1451 6A000000 		.4byte	.LBB47
 4918 1455 04000000 		.4byte	.LBE47-.LBB47
 4919 1459 01       		.byte	0x1
 4920 145a 2C07     		.2byte	0x72c
 4921 145c 29       		.uleb128 0x29
 4922 145d 81030000 		.4byte	0x381
 4923 1461 27100000 		.4byte	.LLST85
 4924 1465 00       		.byte	0
 4925 1466 00       		.byte	0
 4926 1467 21       		.uleb128 0x21
 4927 1468 88080000 		.4byte	.LASF118
 4928 146c 01       		.byte	0x1
 4929 146d 3207     		.2byte	0x732
 4930 146f 05010000 		.4byte	0x105
 4931 1473 00000000 		.4byte	.LFB84
 4932 1477 30000000 		.4byte	.LFE84-.LFB84
 4933 147b 01       		.uleb128 0x1
 4934 147c 9C       		.byte	0x9c
 4935 147d 3C150000 		.4byte	0x153c
 4936 1481 14       		.uleb128 0x14
 4937 1482 78020000 		.4byte	.LASF79
 4938 1486 01       		.byte	0x1
 4939 1487 3207     		.2byte	0x732
 4940 1489 39020000 		.4byte	0x239
 4941 148d 3A100000 		.4byte	.LLST86
 4942 1491 14       		.uleb128 0x14
 4943 1492 BC020000 		.4byte	.LASF76
 4944 1496 01       		.byte	0x1
 4945 1497 3207     		.2byte	0x732
 4946 1499 4B050000 		.4byte	0x54b
 4947 149d 71100000 		.4byte	.LLST87
 4948 14a1 15       		.uleb128 0x15
 4949 14a2 37080000 		.4byte	.LASF71
 4950 14a6 01       		.byte	0x1
 4951 14a7 3407     		.2byte	0x734
 4952 14a9 05010000 		.4byte	0x105
 4953 14ad AB100000 		.4byte	.LLST88
 4954 14b1 23       		.uleb128 0x23
 4955 14b2 C4010000 		.4byte	.LASF107
 4956 14b6 01       		.byte	0x1
 4957 14b7 3507     		.2byte	0x735
 4958 14b9 10010000 		.4byte	0x110
 4959 14bd 15       		.uleb128 0x15
 4960 14be 78060000 		.4byte	.LASF116
 4961 14c2 01       		.byte	0x1
 4962 14c3 3607     		.2byte	0x736
 4963 14c5 63020000 		.4byte	0x263
 4964 14c9 CA100000 		.4byte	.LLST89
 4965 14cd 15       		.uleb128 0x15
 4966 14ce 2F080000 		.4byte	.LASF69
 4967 14d2 01       		.byte	0x1
 4968 14d3 3707     		.2byte	0x737
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 146


 4969 14d5 FA040000 		.4byte	0x4fa
 4970 14d9 DD100000 		.4byte	.LLST90
 4971 14dd 24       		.uleb128 0x24
 4972 14de 4E030000 		.4byte	0x34e
 4973 14e2 02000000 		.4byte	.LBB49
 4974 14e6 14000000 		.4byte	.LBE49-.LBB49
 4975 14ea 01       		.byte	0x1
 4976 14eb 4D07     		.2byte	0x74d
 4977 14ed 06150000 		.4byte	0x1506
 4978 14f1 25       		.uleb128 0x25
 4979 14f2 02000000 		.4byte	.LBB50
 4980 14f6 14000000 		.4byte	.LBE50-.LBB50
 4981 14fa 26       		.uleb128 0x26
 4982 14fb 5E030000 		.4byte	0x35e
 4983 14ff 26       		.uleb128 0x26
 4984 1500 69030000 		.4byte	0x369
 4985 1504 00       		.byte	0
 4986 1505 00       		.byte	0
 4987 1506 24       		.uleb128 0x24
 4988 1507 75030000 		.4byte	0x375
 4989 150b 2A000000 		.4byte	.LBB51
 4990 150f 04000000 		.4byte	.LBE51-.LBB51
 4991 1513 01       		.byte	0x1
 4992 1514 6207     		.2byte	0x762
 4993 1516 24150000 		.4byte	0x1524
 4994 151a 29       		.uleb128 0x29
 4995 151b 81030000 		.4byte	0x381
 4996 151f 14110000 		.4byte	.LLST91
 4997 1523 00       		.byte	0
 4998 1524 19       		.uleb128 0x19
 4999 1525 22000000 		.4byte	.LVL284
 5000 1529 04050000 		.4byte	0x504
 5001 152d 1A       		.uleb128 0x1a
 5002 152e 01       		.uleb128 0x1
 5003 152f 50       		.byte	0x50
 5004 1530 02       		.uleb128 0x2
 5005 1531 74       		.byte	0x74
 5006 1532 00       		.sleb128 0
 5007 1533 1A       		.uleb128 0x1a
 5008 1534 01       		.uleb128 0x1
 5009 1535 51       		.byte	0x51
 5010 1536 03       		.uleb128 0x3
 5011 1537 F3       		.byte	0xf3
 5012 1538 01       		.uleb128 0x1
 5013 1539 51       		.byte	0x51
 5014 153a 00       		.byte	0
 5015 153b 00       		.byte	0
 5016 153c 21       		.uleb128 0x21
 5017 153d 07080000 		.4byte	.LASF119
 5018 1541 01       		.byte	0x1
 5019 1542 6807     		.2byte	0x768
 5020 1544 10010000 		.4byte	0x110
 5021 1548 00000000 		.4byte	.LFB85
 5022 154c 12000000 		.4byte	.LFE85-.LFB85
 5023 1550 01       		.uleb128 0x1
 5024 1551 9C       		.byte	0x9c
 5025 1552 87150000 		.4byte	0x1587
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 147


 5026 1556 14       		.uleb128 0x14
 5027 1557 78020000 		.4byte	.LASF79
 5028 155b 01       		.byte	0x1
 5029 155c 6807     		.2byte	0x768
 5030 155e 87150000 		.4byte	0x1587
 5031 1562 27110000 		.4byte	.LLST92
 5032 1566 16       		.uleb128 0x16
 5033 1567 79010000 		.4byte	.LASF120
 5034 156b 01       		.byte	0x1
 5035 156c 6A07     		.2byte	0x76a
 5036 156e 10010000 		.4byte	0x110
 5037 1572 01       		.uleb128 0x1
 5038 1573 54       		.byte	0x54
 5039 1574 17       		.uleb128 0x17
 5040 1575 08000000 		.4byte	.LVL290
 5041 1579 DF170000 		.4byte	0x17df
 5042 157d 17       		.uleb128 0x17
 5043 157e 0E000000 		.4byte	.LVL292
 5044 1582 EA170000 		.4byte	0x17ea
 5045 1586 00       		.byte	0
 5046 1587 07       		.uleb128 0x7
 5047 1588 39020000 		.4byte	0x239
 5048 158c 21       		.uleb128 0x21
 5049 158d 0D010000 		.4byte	.LASF121
 5050 1591 01       		.byte	0x1
 5051 1592 7807     		.2byte	0x778
 5052 1594 10010000 		.4byte	0x110
 5053 1598 00000000 		.4byte	.LFB86
 5054 159c 16000000 		.4byte	.LFE86-.LFB86
 5055 15a0 01       		.uleb128 0x1
 5056 15a1 9C       		.byte	0x9c
 5057 15a2 E7150000 		.4byte	0x15e7
 5058 15a6 14       		.uleb128 0x14
 5059 15a7 78020000 		.4byte	.LASF79
 5060 15ab 01       		.byte	0x1
 5061 15ac 7807     		.2byte	0x778
 5062 15ae 87150000 		.4byte	0x1587
 5063 15b2 53110000 		.4byte	.LLST93
 5064 15b6 16       		.uleb128 0x16
 5065 15b7 79010000 		.4byte	.LASF120
 5066 15bb 01       		.byte	0x1
 5067 15bc 7A07     		.2byte	0x77a
 5068 15be 10010000 		.4byte	0x110
 5069 15c2 01       		.uleb128 0x1
 5070 15c3 54       		.byte	0x54
 5071 15c4 15       		.uleb128 0x15
 5072 15c5 2F080000 		.4byte	.LASF69
 5073 15c9 01       		.byte	0x1
 5074 15ca 7B07     		.2byte	0x77b
 5075 15cc F4040000 		.4byte	0x4f4
 5076 15d0 7F110000 		.4byte	.LLST94
 5077 15d4 17       		.uleb128 0x17
 5078 15d5 08000000 		.4byte	.LVL295
 5079 15d9 DF170000 		.4byte	0x17df
 5080 15dd 17       		.uleb128 0x17
 5081 15de 12000000 		.4byte	.LVL298
 5082 15e2 EA170000 		.4byte	0x17ea
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 148


 5083 15e6 00       		.byte	0
 5084 15e7 21       		.uleb128 0x21
 5085 15e8 4D050000 		.4byte	.LASF122
 5086 15ec 01       		.byte	0x1
 5087 15ed 8A07     		.2byte	0x78a
 5088 15ef 10010000 		.4byte	0x110
 5089 15f3 00000000 		.4byte	.LFB87
 5090 15f7 04000000 		.4byte	.LFE87-.LFB87
 5091 15fb 01       		.uleb128 0x1
 5092 15fc 9C       		.byte	0x9c
 5093 15fd 20160000 		.4byte	0x1620
 5094 1601 14       		.uleb128 0x14
 5095 1602 78020000 		.4byte	.LASF79
 5096 1606 01       		.byte	0x1
 5097 1607 8A07     		.2byte	0x78a
 5098 1609 87150000 		.4byte	0x1587
 5099 160d AB110000 		.4byte	.LLST95
 5100 1611 16       		.uleb128 0x16
 5101 1612 79010000 		.4byte	.LASF120
 5102 1616 01       		.byte	0x1
 5103 1617 8C07     		.2byte	0x78c
 5104 1619 10010000 		.4byte	0x110
 5105 161d 01       		.uleb128 0x1
 5106 161e 50       		.byte	0x50
 5107 161f 00       		.byte	0
 5108 1620 21       		.uleb128 0x21
 5109 1621 86090000 		.4byte	.LASF123
 5110 1625 01       		.byte	0x1
 5111 1626 E708     		.2byte	0x8e7
 5112 1628 05010000 		.4byte	0x105
 5113 162c 00000000 		.4byte	.LFB94
 5114 1630 0C000000 		.4byte	.LFE94-.LFB94
 5115 1634 01       		.uleb128 0x1
 5116 1635 9C       		.byte	0x9c
 5117 1636 59160000 		.4byte	0x1659
 5118 163a 14       		.uleb128 0x14
 5119 163b 78020000 		.4byte	.LASF79
 5120 163f 01       		.byte	0x1
 5121 1640 E708     		.2byte	0x8e7
 5122 1642 87150000 		.4byte	0x1587
 5123 1646 CC110000 		.4byte	.LLST96
 5124 164a 16       		.uleb128 0x16
 5125 164b 37080000 		.4byte	.LASF71
 5126 164f 01       		.byte	0x1
 5127 1650 E908     		.2byte	0x8e9
 5128 1652 05010000 		.4byte	0x105
 5129 1656 01       		.uleb128 0x1
 5130 1657 50       		.byte	0x50
 5131 1658 00       		.byte	0
 5132 1659 21       		.uleb128 0x21
 5133 165a EE070000 		.4byte	.LASF124
 5134 165e 01       		.byte	0x1
 5135 165f 0E09     		.2byte	0x90e
 5136 1661 05010000 		.4byte	0x105
 5137 1665 00000000 		.4byte	.LFB96
 5138 1669 10000000 		.4byte	.LFE96-.LFB96
 5139 166d 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 149


 5140 166e 9C       		.byte	0x9c
 5141 166f 92160000 		.4byte	0x1692
 5142 1673 14       		.uleb128 0x14
 5143 1674 78020000 		.4byte	.LASF79
 5144 1678 01       		.byte	0x1
 5145 1679 0E09     		.2byte	0x90e
 5146 167b 87150000 		.4byte	0x1587
 5147 167f 06120000 		.4byte	.LLST97
 5148 1683 16       		.uleb128 0x16
 5149 1684 37080000 		.4byte	.LASF71
 5150 1688 01       		.byte	0x1
 5151 1689 1009     		.2byte	0x910
 5152 168b 05010000 		.4byte	0x105
 5153 168f 01       		.uleb128 0x1
 5154 1690 50       		.byte	0x50
 5155 1691 00       		.byte	0
 5156 1692 2B       		.uleb128 0x2b
 5157 1693 21060000 		.4byte	.LASF127
 5158 1697 01       		.byte	0x1
 5159 1698 350A     		.2byte	0xa35
 5160 169a 00000000 		.4byte	.LFB97
 5161 169e 28000000 		.4byte	.LFE97-.LFB97
 5162 16a2 01       		.uleb128 0x1
 5163 16a3 9C       		.byte	0x9c
 5164 16a4 D4160000 		.4byte	0x16d4
 5165 16a8 20       		.uleb128 0x20
 5166 16a9 78020000 		.4byte	.LASF79
 5167 16ad 01       		.byte	0x1
 5168 16ae 350A     		.2byte	0xa35
 5169 16b0 39020000 		.4byte	0x239
 5170 16b4 01       		.uleb128 0x1
 5171 16b5 50       		.byte	0x50
 5172 16b6 20       		.uleb128 0x20
 5173 16b7 E3030000 		.4byte	.LASF61
 5174 16bb 01       		.byte	0x1
 5175 16bc 350A     		.2byte	0xa35
 5176 16be B9000000 		.4byte	0xb9
 5177 16c2 01       		.uleb128 0x1
 5178 16c3 51       		.byte	0x51
 5179 16c4 2C       		.uleb128 0x2c
 5180 16c5 757800   		.ascii	"ux\000"
 5181 16c8 01       		.byte	0x1
 5182 16c9 370A     		.2byte	0xa37
 5183 16cb 10010000 		.4byte	0x110
 5184 16cf 40120000 		.4byte	.LLST98
 5185 16d3 00       		.byte	0
 5186 16d4 21       		.uleb128 0x21
 5187 16d5 54070000 		.4byte	.LASF125
 5188 16d9 01       		.byte	0x1
 5189 16da 520A     		.2byte	0xa52
 5190 16dc B9000000 		.4byte	0xb9
 5191 16e0 00000000 		.4byte	.LFB98
 5192 16e4 28000000 		.4byte	.LFE98-.LFB98
 5193 16e8 01       		.uleb128 0x1
 5194 16e9 9C       		.byte	0x9c
 5195 16ea 1E170000 		.4byte	0x171e
 5196 16ee 14       		.uleb128 0x14
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 150


 5197 16ef 78020000 		.4byte	.LASF79
 5198 16f3 01       		.byte	0x1
 5199 16f4 520A     		.2byte	0xa52
 5200 16f6 39020000 		.4byte	0x239
 5201 16fa 6A120000 		.4byte	.LLST99
 5202 16fe 2C       		.uleb128 0x2c
 5203 16ff 757800   		.ascii	"ux\000"
 5204 1702 01       		.byte	0x1
 5205 1703 540A     		.2byte	0xa54
 5206 1705 10010000 		.4byte	0x110
 5207 1709 A4120000 		.4byte	.LLST100
 5208 170d 15       		.uleb128 0x15
 5209 170e 63070000 		.4byte	.LASF126
 5210 1712 01       		.byte	0x1
 5211 1713 550A     		.2byte	0xa55
 5212 1715 B9000000 		.4byte	0xb9
 5213 1719 C3120000 		.4byte	.LLST101
 5214 171d 00       		.byte	0
 5215 171e 2B       		.uleb128 0x2b
 5216 171f AE010000 		.4byte	.LASF128
 5217 1723 01       		.byte	0x1
 5218 1724 6E0A     		.2byte	0xa6e
 5219 1726 00000000 		.4byte	.LFB99
 5220 172a 2C000000 		.4byte	.LFE99-.LFB99
 5221 172e 01       		.uleb128 0x1
 5222 172f 9C       		.byte	0x9c
 5223 1730 52170000 		.4byte	0x1752
 5224 1734 20       		.uleb128 0x20
 5225 1735 78020000 		.4byte	.LASF79
 5226 1739 01       		.byte	0x1
 5227 173a 6E0A     		.2byte	0xa6e
 5228 173c 39020000 		.4byte	0x239
 5229 1740 01       		.uleb128 0x1
 5230 1741 50       		.byte	0x50
 5231 1742 2C       		.uleb128 0x2c
 5232 1743 757800   		.ascii	"ux\000"
 5233 1746 01       		.byte	0x1
 5234 1747 700A     		.2byte	0xa70
 5235 1749 10010000 		.4byte	0x110
 5236 174d F9120000 		.4byte	.LLST102
 5237 1751 00       		.byte	0
 5238 1752 2B       		.uleb128 0x2b
 5239 1753 96010000 		.4byte	.LASF129
 5240 1757 01       		.byte	0x1
 5241 1758 9607     		.2byte	0x796
 5242 175a 00000000 		.4byte	.LFB88
 5243 175e 10000000 		.4byte	.LFE88-.LFB88
 5244 1762 01       		.uleb128 0x1
 5245 1763 9C       		.byte	0x9c
 5246 1764 AD170000 		.4byte	0x17ad
 5247 1768 14       		.uleb128 0x14
 5248 1769 78020000 		.4byte	.LASF79
 5249 176d 01       		.byte	0x1
 5250 176e 9607     		.2byte	0x796
 5251 1770 39020000 		.4byte	0x239
 5252 1774 23130000 		.4byte	.LLST103
 5253 1778 15       		.uleb128 0x15
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 151


 5254 1779 2F080000 		.4byte	.LASF69
 5255 177d 01       		.byte	0x1
 5256 177e 9807     		.2byte	0x798
 5257 1780 FA040000 		.4byte	0x4fa
 5258 1784 41130000 		.4byte	.LLST104
 5259 1788 1C       		.uleb128 0x1c
 5260 1789 08000000 		.4byte	.LVL327
 5261 178d 1E170000 		.4byte	0x171e
 5262 1791 9C170000 		.4byte	0x179c
 5263 1795 1A       		.uleb128 0x1a
 5264 1796 01       		.uleb128 0x1
 5265 1797 50       		.byte	0x50
 5266 1798 02       		.uleb128 0x2
 5267 1799 74       		.byte	0x74
 5268 179a 00       		.sleb128 0
 5269 179b 00       		.byte	0
 5270 179c 19       		.uleb128 0x19
 5271 179d 0E000000 		.4byte	.LVL328
 5272 17a1 A5180000 		.4byte	0x18a5
 5273 17a5 1A       		.uleb128 0x1a
 5274 17a6 01       		.uleb128 0x1
 5275 17a7 50       		.byte	0x50
 5276 17a8 02       		.uleb128 0x2
 5277 17a9 74       		.byte	0x74
 5278 17aa 00       		.sleb128 0
 5279 17ab 00       		.byte	0
 5280 17ac 00       		.byte	0
 5281 17ad 2D       		.uleb128 0x2d
 5282 17ae 93070000 		.4byte	.LASF130
 5283 17b2 09       		.byte	0x9
 5284 17b3 1207     		.2byte	0x712
 5285 17b5 B9170000 		.4byte	0x17b9
 5286 17b9 0B       		.uleb128 0xb
 5287 17ba E1000000 		.4byte	0xe1
 5288 17be 2E       		.uleb128 0x2e
 5289 17bf 43030000 		.4byte	0x343
 5290 17c3 CE170000 		.4byte	0x17ce
 5291 17c7 2F       		.uleb128 0x2f
 5292 17c8 A9000000 		.4byte	0xa9
 5293 17cc 09       		.byte	0x9
 5294 17cd 00       		.byte	0
 5295 17ce 30       		.uleb128 0x30
 5296 17cf 27050000 		.4byte	.LASF131
 5297 17d3 01       		.byte	0x1
 5298 17d4 9B       		.byte	0x9b
 5299 17d5 BE170000 		.4byte	0x17be
 5300 17d9 05       		.uleb128 0x5
 5301 17da 03       		.byte	0x3
 5302 17db 00000000 		.4byte	xQueueRegistry
 5303 17df 31       		.uleb128 0x31
 5304 17e0 3B010000 		.4byte	.LASF132
 5305 17e4 3B010000 		.4byte	.LASF132
 5306 17e8 02       		.byte	0x2
 5307 17e9 6C       		.byte	0x6c
 5308 17ea 31       		.uleb128 0x31
 5309 17eb 10000000 		.4byte	.LASF133
 5310 17ef 10000000 		.4byte	.LASF133
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 152


 5311 17f3 02       		.byte	0x2
 5312 17f4 6D       		.byte	0x6d
 5313 17f5 32       		.uleb128 0x32
 5314 17f6 A1040000 		.4byte	.LASF134
 5315 17fa A1040000 		.4byte	.LASF134
 5316 17fe 07       		.byte	0x7
 5317 17ff E408     		.2byte	0x8e4
 5318 1801 33       		.uleb128 0x33
 5319 1802 BF090000 		.4byte	.LASF155
 5320 1806 BF090000 		.4byte	.LASF155
 5321 180a 32       		.uleb128 0x32
 5322 180b E6090000 		.4byte	.LASF135
 5323 180f E6090000 		.4byte	.LASF135
 5324 1813 07       		.byte	0x7
 5325 1814 AB08     		.2byte	0x8ab
 5326 1816 32       		.uleb128 0x32
 5327 1817 48080000 		.4byte	.LASF136
 5328 181b 48080000 		.4byte	.LASF136
 5329 181f 07       		.byte	0x7
 5330 1820 D208     		.2byte	0x8d2
 5331 1822 32       		.uleb128 0x32
 5332 1823 CC080000 		.4byte	.LASF137
 5333 1827 CC080000 		.4byte	.LASF137
 5334 182b 06       		.byte	0x6
 5335 182c 5901     		.2byte	0x159
 5336 182e 31       		.uleb128 0x31
 5337 182f 07030000 		.4byte	.LASF138
 5338 1833 07030000 		.4byte	.LASF138
 5339 1837 0A       		.byte	0xa
 5340 1838 82       		.byte	0x82
 5341 1839 32       		.uleb128 0x32
 5342 183a 5B060000 		.4byte	.LASF139
 5343 183e 5B060000 		.4byte	.LASF139
 5344 1842 07       		.byte	0x7
 5345 1843 1F09     		.2byte	0x91f
 5346 1845 32       		.uleb128 0x32
 5347 1846 14030000 		.4byte	.LASF140
 5348 184a 14030000 		.4byte	.LASF140
 5349 184e 07       		.byte	0x7
 5350 184f FF04     		.2byte	0x4ff
 5351 1851 32       		.uleb128 0x32
 5352 1852 CF070000 		.4byte	.LASF141
 5353 1856 CF070000 		.4byte	.LASF141
 5354 185a 07       		.byte	0x7
 5355 185b CC08     		.2byte	0x8cc
 5356 185d 32       		.uleb128 0x32
 5357 185e 53040000 		.4byte	.LASF142
 5358 1862 53040000 		.4byte	.LASF142
 5359 1866 07       		.byte	0x7
 5360 1867 8308     		.2byte	0x883
 5361 1869 32       		.uleb128 0x32
 5362 186a B2070000 		.4byte	.LASF143
 5363 186e B2070000 		.4byte	.LASF143
 5364 1872 07       		.byte	0x7
 5365 1873 3505     		.2byte	0x535
 5366 1875 32       		.uleb128 0x32
 5367 1876 2A090000 		.4byte	.LASF144
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 153


 5368 187a 2A090000 		.4byte	.LASF144
 5369 187e 07       		.byte	0x7
 5370 187f C108     		.2byte	0x8c1
 5371 1881 32       		.uleb128 0x32
 5372 1882 69040000 		.4byte	.LASF145
 5373 1886 69040000 		.4byte	.LASF145
 5374 188a 07       		.byte	0x7
 5375 188b 1909     		.2byte	0x919
 5376 188d 32       		.uleb128 0x32
 5377 188e F1080000 		.4byte	.LASF146
 5378 1892 F1080000 		.4byte	.LASF146
 5379 1896 07       		.byte	0x7
 5380 1897 EE08     		.2byte	0x8ee
 5381 1899 32       		.uleb128 0x32
 5382 189a 6B080000 		.4byte	.LASF147
 5383 189e 6B080000 		.4byte	.LASF147
 5384 18a2 07       		.byte	0x7
 5385 18a3 DE08     		.2byte	0x8de
 5386 18a5 31       		.uleb128 0x31
 5387 18a6 E4070000 		.4byte	.LASF148
 5388 18aa E4070000 		.4byte	.LASF148
 5389 18ae 0A       		.byte	0xa
 5390 18af 83       		.byte	0x83
 5391 18b0 00       		.byte	0
 5392              		.section	.debug_abbrev,"",%progbits
 5393              	.Ldebug_abbrev0:
 5394 0000 01       		.uleb128 0x1
 5395 0001 11       		.uleb128 0x11
 5396 0002 01       		.byte	0x1
 5397 0003 25       		.uleb128 0x25
 5398 0004 0E       		.uleb128 0xe
 5399 0005 13       		.uleb128 0x13
 5400 0006 0B       		.uleb128 0xb
 5401 0007 03       		.uleb128 0x3
 5402 0008 0E       		.uleb128 0xe
 5403 0009 1B       		.uleb128 0x1b
 5404 000a 0E       		.uleb128 0xe
 5405 000b 55       		.uleb128 0x55
 5406 000c 17       		.uleb128 0x17
 5407 000d 11       		.uleb128 0x11
 5408 000e 01       		.uleb128 0x1
 5409 000f 10       		.uleb128 0x10
 5410 0010 17       		.uleb128 0x17
 5411 0011 00       		.byte	0
 5412 0012 00       		.byte	0
 5413 0013 02       		.uleb128 0x2
 5414 0014 16       		.uleb128 0x16
 5415 0015 00       		.byte	0
 5416 0016 03       		.uleb128 0x3
 5417 0017 0E       		.uleb128 0xe
 5418 0018 3A       		.uleb128 0x3a
 5419 0019 0B       		.uleb128 0xb
 5420 001a 3B       		.uleb128 0x3b
 5421 001b 0B       		.uleb128 0xb
 5422 001c 49       		.uleb128 0x49
 5423 001d 13       		.uleb128 0x13
 5424 001e 00       		.byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 154


 5425 001f 00       		.byte	0
 5426 0020 03       		.uleb128 0x3
 5427 0021 24       		.uleb128 0x24
 5428 0022 00       		.byte	0
 5429 0023 0B       		.uleb128 0xb
 5430 0024 0B       		.uleb128 0xb
 5431 0025 3E       		.uleb128 0x3e
 5432 0026 0B       		.uleb128 0xb
 5433 0027 03       		.uleb128 0x3
 5434 0028 0E       		.uleb128 0xe
 5435 0029 00       		.byte	0
 5436 002a 00       		.byte	0
 5437 002b 04       		.uleb128 0x4
 5438 002c 24       		.uleb128 0x24
 5439 002d 00       		.byte	0
 5440 002e 0B       		.uleb128 0xb
 5441 002f 0B       		.uleb128 0xb
 5442 0030 3E       		.uleb128 0x3e
 5443 0031 0B       		.uleb128 0xb
 5444 0032 03       		.uleb128 0x3
 5445 0033 08       		.uleb128 0x8
 5446 0034 00       		.byte	0
 5447 0035 00       		.byte	0
 5448 0036 05       		.uleb128 0x5
 5449 0037 0F       		.uleb128 0xf
 5450 0038 00       		.byte	0
 5451 0039 0B       		.uleb128 0xb
 5452 003a 0B       		.uleb128 0xb
 5453 003b 00       		.byte	0
 5454 003c 00       		.byte	0
 5455 003d 06       		.uleb128 0x6
 5456 003e 0F       		.uleb128 0xf
 5457 003f 00       		.byte	0
 5458 0040 0B       		.uleb128 0xb
 5459 0041 0B       		.uleb128 0xb
 5460 0042 49       		.uleb128 0x49
 5461 0043 13       		.uleb128 0x13
 5462 0044 00       		.byte	0
 5463 0045 00       		.byte	0
 5464 0046 07       		.uleb128 0x7
 5465 0047 26       		.uleb128 0x26
 5466 0048 00       		.byte	0
 5467 0049 49       		.uleb128 0x49
 5468 004a 13       		.uleb128 0x13
 5469 004b 00       		.byte	0
 5470 004c 00       		.byte	0
 5471 004d 08       		.uleb128 0x8
 5472 004e 26       		.uleb128 0x26
 5473 004f 00       		.byte	0
 5474 0050 00       		.byte	0
 5475 0051 00       		.byte	0
 5476 0052 09       		.uleb128 0x9
 5477 0053 13       		.uleb128 0x13
 5478 0054 01       		.byte	0x1
 5479 0055 03       		.uleb128 0x3
 5480 0056 0E       		.uleb128 0xe
 5481 0057 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 155


 5482 0058 0B       		.uleb128 0xb
 5483 0059 3A       		.uleb128 0x3a
 5484 005a 0B       		.uleb128 0xb
 5485 005b 3B       		.uleb128 0x3b
 5486 005c 0B       		.uleb128 0xb
 5487 005d 01       		.uleb128 0x1
 5488 005e 13       		.uleb128 0x13
 5489 005f 00       		.byte	0
 5490 0060 00       		.byte	0
 5491 0061 0A       		.uleb128 0xa
 5492 0062 0D       		.uleb128 0xd
 5493 0063 00       		.byte	0
 5494 0064 03       		.uleb128 0x3
 5495 0065 0E       		.uleb128 0xe
 5496 0066 3A       		.uleb128 0x3a
 5497 0067 0B       		.uleb128 0xb
 5498 0068 3B       		.uleb128 0x3b
 5499 0069 0B       		.uleb128 0xb
 5500 006a 49       		.uleb128 0x49
 5501 006b 13       		.uleb128 0x13
 5502 006c 38       		.uleb128 0x38
 5503 006d 0B       		.uleb128 0xb
 5504 006e 00       		.byte	0
 5505 006f 00       		.byte	0
 5506 0070 0B       		.uleb128 0xb
 5507 0071 35       		.uleb128 0x35
 5508 0072 00       		.byte	0
 5509 0073 49       		.uleb128 0x49
 5510 0074 13       		.uleb128 0x13
 5511 0075 00       		.byte	0
 5512 0076 00       		.byte	0
 5513 0077 0C       		.uleb128 0xc
 5514 0078 17       		.uleb128 0x17
 5515 0079 01       		.byte	0x1
 5516 007a 0B       		.uleb128 0xb
 5517 007b 0B       		.uleb128 0xb
 5518 007c 3A       		.uleb128 0x3a
 5519 007d 0B       		.uleb128 0xb
 5520 007e 3B       		.uleb128 0x3b
 5521 007f 0B       		.uleb128 0xb
 5522 0080 01       		.uleb128 0x1
 5523 0081 13       		.uleb128 0x13
 5524 0082 00       		.byte	0
 5525 0083 00       		.byte	0
 5526 0084 0D       		.uleb128 0xd
 5527 0085 0D       		.uleb128 0xd
 5528 0086 00       		.byte	0
 5529 0087 03       		.uleb128 0x3
 5530 0088 0E       		.uleb128 0xe
 5531 0089 3A       		.uleb128 0x3a
 5532 008a 0B       		.uleb128 0xb
 5533 008b 3B       		.uleb128 0x3b
 5534 008c 0B       		.uleb128 0xb
 5535 008d 49       		.uleb128 0x49
 5536 008e 13       		.uleb128 0x13
 5537 008f 00       		.byte	0
 5538 0090 00       		.byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 156


 5539 0091 0E       		.uleb128 0xe
 5540 0092 0D       		.uleb128 0xd
 5541 0093 00       		.byte	0
 5542 0094 03       		.uleb128 0x3
 5543 0095 08       		.uleb128 0x8
 5544 0096 3A       		.uleb128 0x3a
 5545 0097 0B       		.uleb128 0xb
 5546 0098 3B       		.uleb128 0x3b
 5547 0099 0B       		.uleb128 0xb
 5548 009a 49       		.uleb128 0x49
 5549 009b 13       		.uleb128 0x13
 5550 009c 38       		.uleb128 0x38
 5551 009d 0B       		.uleb128 0xb
 5552 009e 00       		.byte	0
 5553 009f 00       		.byte	0
 5554 00a0 0F       		.uleb128 0xf
 5555 00a1 2E       		.uleb128 0x2e
 5556 00a2 01       		.byte	0x1
 5557 00a3 03       		.uleb128 0x3
 5558 00a4 0E       		.uleb128 0xe
 5559 00a5 3A       		.uleb128 0x3a
 5560 00a6 0B       		.uleb128 0xb
 5561 00a7 3B       		.uleb128 0x3b
 5562 00a8 0B       		.uleb128 0xb
 5563 00a9 27       		.uleb128 0x27
 5564 00aa 19       		.uleb128 0x19
 5565 00ab 49       		.uleb128 0x49
 5566 00ac 13       		.uleb128 0x13
 5567 00ad 20       		.uleb128 0x20
 5568 00ae 0B       		.uleb128 0xb
 5569 00af 01       		.uleb128 0x1
 5570 00b0 13       		.uleb128 0x13
 5571 00b1 00       		.byte	0
 5572 00b2 00       		.byte	0
 5573 00b3 10       		.uleb128 0x10
 5574 00b4 34       		.uleb128 0x34
 5575 00b5 00       		.byte	0
 5576 00b6 03       		.uleb128 0x3
 5577 00b7 0E       		.uleb128 0xe
 5578 00b8 3A       		.uleb128 0x3a
 5579 00b9 0B       		.uleb128 0xb
 5580 00ba 3B       		.uleb128 0x3b
 5581 00bb 0B       		.uleb128 0xb
 5582 00bc 49       		.uleb128 0x49
 5583 00bd 13       		.uleb128 0x13
 5584 00be 00       		.byte	0
 5585 00bf 00       		.byte	0
 5586 00c0 11       		.uleb128 0x11
 5587 00c1 2E       		.uleb128 0x2e
 5588 00c2 01       		.byte	0x1
 5589 00c3 03       		.uleb128 0x3
 5590 00c4 0E       		.uleb128 0xe
 5591 00c5 3A       		.uleb128 0x3a
 5592 00c6 0B       		.uleb128 0xb
 5593 00c7 3B       		.uleb128 0x3b
 5594 00c8 0B       		.uleb128 0xb
 5595 00c9 27       		.uleb128 0x27
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 157


 5596 00ca 19       		.uleb128 0x19
 5597 00cb 20       		.uleb128 0x20
 5598 00cc 0B       		.uleb128 0xb
 5599 00cd 01       		.uleb128 0x1
 5600 00ce 13       		.uleb128 0x13
 5601 00cf 00       		.byte	0
 5602 00d0 00       		.byte	0
 5603 00d1 12       		.uleb128 0x12
 5604 00d2 05       		.uleb128 0x5
 5605 00d3 00       		.byte	0
 5606 00d4 03       		.uleb128 0x3
 5607 00d5 0E       		.uleb128 0xe
 5608 00d6 3A       		.uleb128 0x3a
 5609 00d7 0B       		.uleb128 0xb
 5610 00d8 3B       		.uleb128 0x3b
 5611 00d9 0B       		.uleb128 0xb
 5612 00da 49       		.uleb128 0x49
 5613 00db 13       		.uleb128 0x13
 5614 00dc 00       		.byte	0
 5615 00dd 00       		.byte	0
 5616 00de 13       		.uleb128 0x13
 5617 00df 2E       		.uleb128 0x2e
 5618 00e0 01       		.byte	0x1
 5619 00e1 03       		.uleb128 0x3
 5620 00e2 0E       		.uleb128 0xe
 5621 00e3 3A       		.uleb128 0x3a
 5622 00e4 0B       		.uleb128 0xb
 5623 00e5 3B       		.uleb128 0x3b
 5624 00e6 05       		.uleb128 0x5
 5625 00e7 27       		.uleb128 0x27
 5626 00e8 19       		.uleb128 0x19
 5627 00e9 49       		.uleb128 0x49
 5628 00ea 13       		.uleb128 0x13
 5629 00eb 11       		.uleb128 0x11
 5630 00ec 01       		.uleb128 0x1
 5631 00ed 12       		.uleb128 0x12
 5632 00ee 06       		.uleb128 0x6
 5633 00ef 40       		.uleb128 0x40
 5634 00f0 18       		.uleb128 0x18
 5635 00f1 9742     		.uleb128 0x2117
 5636 00f3 19       		.uleb128 0x19
 5637 00f4 01       		.uleb128 0x1
 5638 00f5 13       		.uleb128 0x13
 5639 00f6 00       		.byte	0
 5640 00f7 00       		.byte	0
 5641 00f8 14       		.uleb128 0x14
 5642 00f9 05       		.uleb128 0x5
 5643 00fa 00       		.byte	0
 5644 00fb 03       		.uleb128 0x3
 5645 00fc 0E       		.uleb128 0xe
 5646 00fd 3A       		.uleb128 0x3a
 5647 00fe 0B       		.uleb128 0xb
 5648 00ff 3B       		.uleb128 0x3b
 5649 0100 05       		.uleb128 0x5
 5650 0101 49       		.uleb128 0x49
 5651 0102 13       		.uleb128 0x13
 5652 0103 02       		.uleb128 0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 158


 5653 0104 17       		.uleb128 0x17
 5654 0105 00       		.byte	0
 5655 0106 00       		.byte	0
 5656 0107 15       		.uleb128 0x15
 5657 0108 34       		.uleb128 0x34
 5658 0109 00       		.byte	0
 5659 010a 03       		.uleb128 0x3
 5660 010b 0E       		.uleb128 0xe
 5661 010c 3A       		.uleb128 0x3a
 5662 010d 0B       		.uleb128 0xb
 5663 010e 3B       		.uleb128 0x3b
 5664 010f 05       		.uleb128 0x5
 5665 0110 49       		.uleb128 0x49
 5666 0111 13       		.uleb128 0x13
 5667 0112 02       		.uleb128 0x2
 5668 0113 17       		.uleb128 0x17
 5669 0114 00       		.byte	0
 5670 0115 00       		.byte	0
 5671 0116 16       		.uleb128 0x16
 5672 0117 34       		.uleb128 0x34
 5673 0118 00       		.byte	0
 5674 0119 03       		.uleb128 0x3
 5675 011a 0E       		.uleb128 0xe
 5676 011b 3A       		.uleb128 0x3a
 5677 011c 0B       		.uleb128 0xb
 5678 011d 3B       		.uleb128 0x3b
 5679 011e 05       		.uleb128 0x5
 5680 011f 49       		.uleb128 0x49
 5681 0120 13       		.uleb128 0x13
 5682 0121 02       		.uleb128 0x2
 5683 0122 18       		.uleb128 0x18
 5684 0123 00       		.byte	0
 5685 0124 00       		.byte	0
 5686 0125 17       		.uleb128 0x17
 5687 0126 898201   		.uleb128 0x4109
 5688 0129 00       		.byte	0
 5689 012a 11       		.uleb128 0x11
 5690 012b 01       		.uleb128 0x1
 5691 012c 31       		.uleb128 0x31
 5692 012d 13       		.uleb128 0x13
 5693 012e 00       		.byte	0
 5694 012f 00       		.byte	0
 5695 0130 18       		.uleb128 0x18
 5696 0131 2E       		.uleb128 0x2e
 5697 0132 01       		.byte	0x1
 5698 0133 03       		.uleb128 0x3
 5699 0134 0E       		.uleb128 0xe
 5700 0135 3A       		.uleb128 0x3a
 5701 0136 0B       		.uleb128 0xb
 5702 0137 3B       		.uleb128 0x3b
 5703 0138 05       		.uleb128 0x5
 5704 0139 27       		.uleb128 0x27
 5705 013a 19       		.uleb128 0x19
 5706 013b 11       		.uleb128 0x11
 5707 013c 01       		.uleb128 0x1
 5708 013d 12       		.uleb128 0x12
 5709 013e 06       		.uleb128 0x6
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 159


 5710 013f 40       		.uleb128 0x40
 5711 0140 18       		.uleb128 0x18
 5712 0141 9742     		.uleb128 0x2117
 5713 0143 19       		.uleb128 0x19
 5714 0144 01       		.uleb128 0x1
 5715 0145 13       		.uleb128 0x13
 5716 0146 00       		.byte	0
 5717 0147 00       		.byte	0
 5718 0148 19       		.uleb128 0x19
 5719 0149 898201   		.uleb128 0x4109
 5720 014c 01       		.byte	0x1
 5721 014d 11       		.uleb128 0x11
 5722 014e 01       		.uleb128 0x1
 5723 014f 31       		.uleb128 0x31
 5724 0150 13       		.uleb128 0x13
 5725 0151 00       		.byte	0
 5726 0152 00       		.byte	0
 5727 0153 1A       		.uleb128 0x1a
 5728 0154 8A8201   		.uleb128 0x410a
 5729 0157 00       		.byte	0
 5730 0158 02       		.uleb128 0x2
 5731 0159 18       		.uleb128 0x18
 5732 015a 9142     		.uleb128 0x2111
 5733 015c 18       		.uleb128 0x18
 5734 015d 00       		.byte	0
 5735 015e 00       		.byte	0
 5736 015f 1B       		.uleb128 0x1b
 5737 0160 0B       		.uleb128 0xb
 5738 0161 01       		.byte	0x1
 5739 0162 11       		.uleb128 0x11
 5740 0163 01       		.uleb128 0x1
 5741 0164 12       		.uleb128 0x12
 5742 0165 06       		.uleb128 0x6
 5743 0166 01       		.uleb128 0x1
 5744 0167 13       		.uleb128 0x13
 5745 0168 00       		.byte	0
 5746 0169 00       		.byte	0
 5747 016a 1C       		.uleb128 0x1c
 5748 016b 898201   		.uleb128 0x4109
 5749 016e 01       		.byte	0x1
 5750 016f 11       		.uleb128 0x11
 5751 0170 01       		.uleb128 0x1
 5752 0171 31       		.uleb128 0x31
 5753 0172 13       		.uleb128 0x13
 5754 0173 01       		.uleb128 0x1
 5755 0174 13       		.uleb128 0x13
 5756 0175 00       		.byte	0
 5757 0176 00       		.byte	0
 5758 0177 1D       		.uleb128 0x1d
 5759 0178 2E       		.uleb128 0x2e
 5760 0179 01       		.byte	0x1
 5761 017a 3F       		.uleb128 0x3f
 5762 017b 19       		.uleb128 0x19
 5763 017c 03       		.uleb128 0x3
 5764 017d 0E       		.uleb128 0xe
 5765 017e 3A       		.uleb128 0x3a
 5766 017f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 160


 5767 0180 3B       		.uleb128 0x3b
 5768 0181 0B       		.uleb128 0xb
 5769 0182 27       		.uleb128 0x27
 5770 0183 19       		.uleb128 0x19
 5771 0184 49       		.uleb128 0x49
 5772 0185 13       		.uleb128 0x13
 5773 0186 11       		.uleb128 0x11
 5774 0187 01       		.uleb128 0x1
 5775 0188 12       		.uleb128 0x12
 5776 0189 06       		.uleb128 0x6
 5777 018a 40       		.uleb128 0x40
 5778 018b 18       		.uleb128 0x18
 5779 018c 9742     		.uleb128 0x2117
 5780 018e 19       		.uleb128 0x19
 5781 018f 01       		.uleb128 0x1
 5782 0190 13       		.uleb128 0x13
 5783 0191 00       		.byte	0
 5784 0192 00       		.byte	0
 5785 0193 1E       		.uleb128 0x1e
 5786 0194 05       		.uleb128 0x5
 5787 0195 00       		.byte	0
 5788 0196 03       		.uleb128 0x3
 5789 0197 0E       		.uleb128 0xe
 5790 0198 3A       		.uleb128 0x3a
 5791 0199 0B       		.uleb128 0xb
 5792 019a 3B       		.uleb128 0x3b
 5793 019b 0B       		.uleb128 0xb
 5794 019c 49       		.uleb128 0x49
 5795 019d 13       		.uleb128 0x13
 5796 019e 02       		.uleb128 0x2
 5797 019f 17       		.uleb128 0x17
 5798 01a0 00       		.byte	0
 5799 01a1 00       		.byte	0
 5800 01a2 1F       		.uleb128 0x1f
 5801 01a3 34       		.uleb128 0x34
 5802 01a4 00       		.byte	0
 5803 01a5 03       		.uleb128 0x3
 5804 01a6 0E       		.uleb128 0xe
 5805 01a7 3A       		.uleb128 0x3a
 5806 01a8 0B       		.uleb128 0xb
 5807 01a9 3B       		.uleb128 0x3b
 5808 01aa 0B       		.uleb128 0xb
 5809 01ab 49       		.uleb128 0x49
 5810 01ac 13       		.uleb128 0x13
 5811 01ad 02       		.uleb128 0x2
 5812 01ae 17       		.uleb128 0x17
 5813 01af 00       		.byte	0
 5814 01b0 00       		.byte	0
 5815 01b1 20       		.uleb128 0x20
 5816 01b2 05       		.uleb128 0x5
 5817 01b3 00       		.byte	0
 5818 01b4 03       		.uleb128 0x3
 5819 01b5 0E       		.uleb128 0xe
 5820 01b6 3A       		.uleb128 0x3a
 5821 01b7 0B       		.uleb128 0xb
 5822 01b8 3B       		.uleb128 0x3b
 5823 01b9 05       		.uleb128 0x5
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 161


 5824 01ba 49       		.uleb128 0x49
 5825 01bb 13       		.uleb128 0x13
 5826 01bc 02       		.uleb128 0x2
 5827 01bd 18       		.uleb128 0x18
 5828 01be 00       		.byte	0
 5829 01bf 00       		.byte	0
 5830 01c0 21       		.uleb128 0x21
 5831 01c1 2E       		.uleb128 0x2e
 5832 01c2 01       		.byte	0x1
 5833 01c3 3F       		.uleb128 0x3f
 5834 01c4 19       		.uleb128 0x19
 5835 01c5 03       		.uleb128 0x3
 5836 01c6 0E       		.uleb128 0xe
 5837 01c7 3A       		.uleb128 0x3a
 5838 01c8 0B       		.uleb128 0xb
 5839 01c9 3B       		.uleb128 0x3b
 5840 01ca 05       		.uleb128 0x5
 5841 01cb 27       		.uleb128 0x27
 5842 01cc 19       		.uleb128 0x19
 5843 01cd 49       		.uleb128 0x49
 5844 01ce 13       		.uleb128 0x13
 5845 01cf 11       		.uleb128 0x11
 5846 01d0 01       		.uleb128 0x1
 5847 01d1 12       		.uleb128 0x12
 5848 01d2 06       		.uleb128 0x6
 5849 01d3 40       		.uleb128 0x40
 5850 01d4 18       		.uleb128 0x18
 5851 01d5 9742     		.uleb128 0x2117
 5852 01d7 19       		.uleb128 0x19
 5853 01d8 01       		.uleb128 0x1
 5854 01d9 13       		.uleb128 0x13
 5855 01da 00       		.byte	0
 5856 01db 00       		.byte	0
 5857 01dc 22       		.uleb128 0x22
 5858 01dd 34       		.uleb128 0x34
 5859 01de 00       		.byte	0
 5860 01df 03       		.uleb128 0x3
 5861 01e0 0E       		.uleb128 0xe
 5862 01e1 3A       		.uleb128 0x3a
 5863 01e2 0B       		.uleb128 0xb
 5864 01e3 3B       		.uleb128 0x3b
 5865 01e4 05       		.uleb128 0x5
 5866 01e5 49       		.uleb128 0x49
 5867 01e6 13       		.uleb128 0x13
 5868 01e7 1C       		.uleb128 0x1c
 5869 01e8 0B       		.uleb128 0xb
 5870 01e9 00       		.byte	0
 5871 01ea 00       		.byte	0
 5872 01eb 23       		.uleb128 0x23
 5873 01ec 34       		.uleb128 0x34
 5874 01ed 00       		.byte	0
 5875 01ee 03       		.uleb128 0x3
 5876 01ef 0E       		.uleb128 0xe
 5877 01f0 3A       		.uleb128 0x3a
 5878 01f1 0B       		.uleb128 0xb
 5879 01f2 3B       		.uleb128 0x3b
 5880 01f3 05       		.uleb128 0x5
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 162


 5881 01f4 49       		.uleb128 0x49
 5882 01f5 13       		.uleb128 0x13
 5883 01f6 00       		.byte	0
 5884 01f7 00       		.byte	0
 5885 01f8 24       		.uleb128 0x24
 5886 01f9 1D       		.uleb128 0x1d
 5887 01fa 01       		.byte	0x1
 5888 01fb 31       		.uleb128 0x31
 5889 01fc 13       		.uleb128 0x13
 5890 01fd 11       		.uleb128 0x11
 5891 01fe 01       		.uleb128 0x1
 5892 01ff 12       		.uleb128 0x12
 5893 0200 06       		.uleb128 0x6
 5894 0201 58       		.uleb128 0x58
 5895 0202 0B       		.uleb128 0xb
 5896 0203 59       		.uleb128 0x59
 5897 0204 05       		.uleb128 0x5
 5898 0205 01       		.uleb128 0x1
 5899 0206 13       		.uleb128 0x13
 5900 0207 00       		.byte	0
 5901 0208 00       		.byte	0
 5902 0209 25       		.uleb128 0x25
 5903 020a 0B       		.uleb128 0xb
 5904 020b 01       		.byte	0x1
 5905 020c 11       		.uleb128 0x11
 5906 020d 01       		.uleb128 0x1
 5907 020e 12       		.uleb128 0x12
 5908 020f 06       		.uleb128 0x6
 5909 0210 00       		.byte	0
 5910 0211 00       		.byte	0
 5911 0212 26       		.uleb128 0x26
 5912 0213 34       		.uleb128 0x34
 5913 0214 00       		.byte	0
 5914 0215 31       		.uleb128 0x31
 5915 0216 13       		.uleb128 0x13
 5916 0217 00       		.byte	0
 5917 0218 00       		.byte	0
 5918 0219 27       		.uleb128 0x27
 5919 021a 0B       		.uleb128 0xb
 5920 021b 01       		.byte	0x1
 5921 021c 55       		.uleb128 0x55
 5922 021d 17       		.uleb128 0x17
 5923 021e 01       		.uleb128 0x1
 5924 021f 13       		.uleb128 0x13
 5925 0220 00       		.byte	0
 5926 0221 00       		.byte	0
 5927 0222 28       		.uleb128 0x28
 5928 0223 1D       		.uleb128 0x1d
 5929 0224 01       		.byte	0x1
 5930 0225 31       		.uleb128 0x31
 5931 0226 13       		.uleb128 0x13
 5932 0227 11       		.uleb128 0x11
 5933 0228 01       		.uleb128 0x1
 5934 0229 12       		.uleb128 0x12
 5935 022a 06       		.uleb128 0x6
 5936 022b 58       		.uleb128 0x58
 5937 022c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 163


 5938 022d 59       		.uleb128 0x59
 5939 022e 05       		.uleb128 0x5
 5940 022f 00       		.byte	0
 5941 0230 00       		.byte	0
 5942 0231 29       		.uleb128 0x29
 5943 0232 05       		.uleb128 0x5
 5944 0233 00       		.byte	0
 5945 0234 31       		.uleb128 0x31
 5946 0235 13       		.uleb128 0x13
 5947 0236 02       		.uleb128 0x2
 5948 0237 17       		.uleb128 0x17
 5949 0238 00       		.byte	0
 5950 0239 00       		.byte	0
 5951 023a 2A       		.uleb128 0x2a
 5952 023b 0B       		.uleb128 0xb
 5953 023c 01       		.byte	0x1
 5954 023d 55       		.uleb128 0x55
 5955 023e 17       		.uleb128 0x17
 5956 023f 00       		.byte	0
 5957 0240 00       		.byte	0
 5958 0241 2B       		.uleb128 0x2b
 5959 0242 2E       		.uleb128 0x2e
 5960 0243 01       		.byte	0x1
 5961 0244 3F       		.uleb128 0x3f
 5962 0245 19       		.uleb128 0x19
 5963 0246 03       		.uleb128 0x3
 5964 0247 0E       		.uleb128 0xe
 5965 0248 3A       		.uleb128 0x3a
 5966 0249 0B       		.uleb128 0xb
 5967 024a 3B       		.uleb128 0x3b
 5968 024b 05       		.uleb128 0x5
 5969 024c 27       		.uleb128 0x27
 5970 024d 19       		.uleb128 0x19
 5971 024e 11       		.uleb128 0x11
 5972 024f 01       		.uleb128 0x1
 5973 0250 12       		.uleb128 0x12
 5974 0251 06       		.uleb128 0x6
 5975 0252 40       		.uleb128 0x40
 5976 0253 18       		.uleb128 0x18
 5977 0254 9742     		.uleb128 0x2117
 5978 0256 19       		.uleb128 0x19
 5979 0257 01       		.uleb128 0x1
 5980 0258 13       		.uleb128 0x13
 5981 0259 00       		.byte	0
 5982 025a 00       		.byte	0
 5983 025b 2C       		.uleb128 0x2c
 5984 025c 34       		.uleb128 0x34
 5985 025d 00       		.byte	0
 5986 025e 03       		.uleb128 0x3
 5987 025f 08       		.uleb128 0x8
 5988 0260 3A       		.uleb128 0x3a
 5989 0261 0B       		.uleb128 0xb
 5990 0262 3B       		.uleb128 0x3b
 5991 0263 05       		.uleb128 0x5
 5992 0264 49       		.uleb128 0x49
 5993 0265 13       		.uleb128 0x13
 5994 0266 02       		.uleb128 0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 164


 5995 0267 17       		.uleb128 0x17
 5996 0268 00       		.byte	0
 5997 0269 00       		.byte	0
 5998 026a 2D       		.uleb128 0x2d
 5999 026b 34       		.uleb128 0x34
 6000 026c 00       		.byte	0
 6001 026d 03       		.uleb128 0x3
 6002 026e 0E       		.uleb128 0xe
 6003 026f 3A       		.uleb128 0x3a
 6004 0270 0B       		.uleb128 0xb
 6005 0271 3B       		.uleb128 0x3b
 6006 0272 05       		.uleb128 0x5
 6007 0273 49       		.uleb128 0x49
 6008 0274 13       		.uleb128 0x13
 6009 0275 3F       		.uleb128 0x3f
 6010 0276 19       		.uleb128 0x19
 6011 0277 3C       		.uleb128 0x3c
 6012 0278 19       		.uleb128 0x19
 6013 0279 00       		.byte	0
 6014 027a 00       		.byte	0
 6015 027b 2E       		.uleb128 0x2e
 6016 027c 01       		.uleb128 0x1
 6017 027d 01       		.byte	0x1
 6018 027e 49       		.uleb128 0x49
 6019 027f 13       		.uleb128 0x13
 6020 0280 01       		.uleb128 0x1
 6021 0281 13       		.uleb128 0x13
 6022 0282 00       		.byte	0
 6023 0283 00       		.byte	0
 6024 0284 2F       		.uleb128 0x2f
 6025 0285 21       		.uleb128 0x21
 6026 0286 00       		.byte	0
 6027 0287 49       		.uleb128 0x49
 6028 0288 13       		.uleb128 0x13
 6029 0289 2F       		.uleb128 0x2f
 6030 028a 0B       		.uleb128 0xb
 6031 028b 00       		.byte	0
 6032 028c 00       		.byte	0
 6033 028d 30       		.uleb128 0x30
 6034 028e 34       		.uleb128 0x34
 6035 028f 00       		.byte	0
 6036 0290 03       		.uleb128 0x3
 6037 0291 0E       		.uleb128 0xe
 6038 0292 3A       		.uleb128 0x3a
 6039 0293 0B       		.uleb128 0xb
 6040 0294 3B       		.uleb128 0x3b
 6041 0295 0B       		.uleb128 0xb
 6042 0296 49       		.uleb128 0x49
 6043 0297 13       		.uleb128 0x13
 6044 0298 3F       		.uleb128 0x3f
 6045 0299 19       		.uleb128 0x19
 6046 029a 02       		.uleb128 0x2
 6047 029b 18       		.uleb128 0x18
 6048 029c 00       		.byte	0
 6049 029d 00       		.byte	0
 6050 029e 31       		.uleb128 0x31
 6051 029f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 165


 6052 02a0 00       		.byte	0
 6053 02a1 3F       		.uleb128 0x3f
 6054 02a2 19       		.uleb128 0x19
 6055 02a3 3C       		.uleb128 0x3c
 6056 02a4 19       		.uleb128 0x19
 6057 02a5 6E       		.uleb128 0x6e
 6058 02a6 0E       		.uleb128 0xe
 6059 02a7 03       		.uleb128 0x3
 6060 02a8 0E       		.uleb128 0xe
 6061 02a9 3A       		.uleb128 0x3a
 6062 02aa 0B       		.uleb128 0xb
 6063 02ab 3B       		.uleb128 0x3b
 6064 02ac 0B       		.uleb128 0xb
 6065 02ad 00       		.byte	0
 6066 02ae 00       		.byte	0
 6067 02af 32       		.uleb128 0x32
 6068 02b0 2E       		.uleb128 0x2e
 6069 02b1 00       		.byte	0
 6070 02b2 3F       		.uleb128 0x3f
 6071 02b3 19       		.uleb128 0x19
 6072 02b4 3C       		.uleb128 0x3c
 6073 02b5 19       		.uleb128 0x19
 6074 02b6 6E       		.uleb128 0x6e
 6075 02b7 0E       		.uleb128 0xe
 6076 02b8 03       		.uleb128 0x3
 6077 02b9 0E       		.uleb128 0xe
 6078 02ba 3A       		.uleb128 0x3a
 6079 02bb 0B       		.uleb128 0xb
 6080 02bc 3B       		.uleb128 0x3b
 6081 02bd 05       		.uleb128 0x5
 6082 02be 00       		.byte	0
 6083 02bf 00       		.byte	0
 6084 02c0 33       		.uleb128 0x33
 6085 02c1 2E       		.uleb128 0x2e
 6086 02c2 00       		.byte	0
 6087 02c3 3F       		.uleb128 0x3f
 6088 02c4 19       		.uleb128 0x19
 6089 02c5 3C       		.uleb128 0x3c
 6090 02c6 19       		.uleb128 0x19
 6091 02c7 6E       		.uleb128 0x6e
 6092 02c8 0E       		.uleb128 0xe
 6093 02c9 03       		.uleb128 0x3
 6094 02ca 0E       		.uleb128 0xe
 6095 02cb 00       		.byte	0
 6096 02cc 00       		.byte	0
 6097 02cd 00       		.byte	0
 6098              		.section	.debug_loc,"",%progbits
 6099              	.Ldebug_loc0:
 6100              	.LLST0:
 6101 0000 00000000 		.4byte	.LVL0
 6102 0004 08000000 		.4byte	.LVL1
 6103 0008 0100     		.2byte	0x1
 6104 000a 50       		.byte	0x50
 6105 000b 08000000 		.4byte	.LVL1
 6106 000f 0E000000 		.4byte	.LVL3
 6107 0013 0400     		.2byte	0x4
 6108 0015 F3       		.byte	0xf3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 166


 6109 0016 01       		.uleb128 0x1
 6110 0017 50       		.byte	0x50
 6111 0018 9F       		.byte	0x9f
 6112 0019 0E000000 		.4byte	.LVL3
 6113 001d 10000000 		.4byte	.LVL4
 6114 0021 0100     		.2byte	0x1
 6115 0023 50       		.byte	0x50
 6116 0024 10000000 		.4byte	.LVL4
 6117 0028 12000000 		.4byte	.LFE89
 6118 002c 0400     		.2byte	0x4
 6119 002e F3       		.byte	0xf3
 6120 002f 01       		.uleb128 0x1
 6121 0030 50       		.byte	0x50
 6122 0031 9F       		.byte	0x9f
 6123 0032 00000000 		.4byte	0
 6124 0036 00000000 		.4byte	0
 6125              	.LLST1:
 6126 003a 0C000000 		.4byte	.LVL2
 6127 003e 0E000000 		.4byte	.LVL3
 6128 0042 0100     		.2byte	0x1
 6129 0044 50       		.byte	0x50
 6130 0045 10000000 		.4byte	.LVL4
 6131 0049 12000000 		.4byte	.LFE89
 6132 004d 0100     		.2byte	0x1
 6133 004f 50       		.byte	0x50
 6134 0050 00000000 		.4byte	0
 6135 0054 00000000 		.4byte	0
 6136              	.LLST2:
 6137 0058 00000000 		.4byte	.LVL5
 6138 005c 07000000 		.4byte	.LVL6-1
 6139 0060 0100     		.2byte	0x1
 6140 0062 50       		.byte	0x50
 6141 0063 07000000 		.4byte	.LVL6-1
 6142 0067 12000000 		.4byte	.LVL7
 6143 006b 0100     		.2byte	0x1
 6144 006d 54       		.byte	0x54
 6145 006e 12000000 		.4byte	.LVL7
 6146 0072 14000000 		.4byte	.LVL8
 6147 0076 0400     		.2byte	0x4
 6148 0078 F3       		.byte	0xf3
 6149 0079 01       		.uleb128 0x1
 6150 007a 50       		.byte	0x50
 6151 007b 9F       		.byte	0x9f
 6152 007c 14000000 		.4byte	.LVL8
 6153 0080 16000000 		.4byte	.LVL9
 6154 0084 0100     		.2byte	0x1
 6155 0086 54       		.byte	0x54
 6156 0087 16000000 		.4byte	.LVL9
 6157 008b 1E000000 		.4byte	.LFE95
 6158 008f 0400     		.2byte	0x4
 6159 0091 F3       		.byte	0xf3
 6160 0092 01       		.uleb128 0x1
 6161 0093 50       		.byte	0x50
 6162 0094 9F       		.byte	0x9f
 6163 0095 00000000 		.4byte	0
 6164 0099 00000000 		.4byte	0
 6165              	.LLST3:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 167


 6166 009d 00000000 		.4byte	.LVL11
 6167 00a1 07000000 		.4byte	.LVL12-1
 6168 00a5 0100     		.2byte	0x1
 6169 00a7 50       		.byte	0x50
 6170 00a8 07000000 		.4byte	.LVL12-1
 6171 00ac 0E000000 		.4byte	.LVL13
 6172 00b0 0100     		.2byte	0x1
 6173 00b2 54       		.byte	0x54
 6174 00b3 0E000000 		.4byte	.LVL13
 6175 00b7 10000000 		.4byte	.LVL14
 6176 00bb 0400     		.2byte	0x4
 6177 00bd F3       		.byte	0xf3
 6178 00be 01       		.uleb128 0x1
 6179 00bf 50       		.byte	0x50
 6180 00c0 9F       		.byte	0x9f
 6181 00c1 10000000 		.4byte	.LVL14
 6182 00c5 12000000 		.4byte	.LVL15
 6183 00c9 0100     		.2byte	0x1
 6184 00cb 54       		.byte	0x54
 6185 00cc 12000000 		.4byte	.LVL15
 6186 00d0 1A000000 		.4byte	.LFE93
 6187 00d4 0400     		.2byte	0x4
 6188 00d6 F3       		.byte	0xf3
 6189 00d7 01       		.uleb128 0x1
 6190 00d8 50       		.byte	0x50
 6191 00d9 9F       		.byte	0x9f
 6192 00da 00000000 		.4byte	0
 6193 00de 00000000 		.4byte	0
 6194              	.LLST4:
 6195 00e2 00000000 		.4byte	.LVL17
 6196 00e6 12000000 		.4byte	.LVL21
 6197 00ea 0100     		.2byte	0x1
 6198 00ec 50       		.byte	0x50
 6199 00ed 12000000 		.4byte	.LVL21
 6200 00f1 1C000000 		.4byte	.LVL23
 6201 00f5 0100     		.2byte	0x1
 6202 00f7 54       		.byte	0x54
 6203 00f8 1C000000 		.4byte	.LVL23
 6204 00fc 20000000 		.4byte	.LVL24
 6205 0100 0100     		.2byte	0x1
 6206 0102 50       		.byte	0x50
 6207 0103 20000000 		.4byte	.LVL24
 6208 0107 3A000000 		.4byte	.LVL26
 6209 010b 0100     		.2byte	0x1
 6210 010d 54       		.byte	0x54
 6211 010e 3A000000 		.4byte	.LVL26
 6212 0112 3C000000 		.4byte	.LVL27
 6213 0116 0100     		.2byte	0x1
 6214 0118 50       		.byte	0x50
 6215 0119 3C000000 		.4byte	.LVL27
 6216 011d 62000000 		.4byte	.LVL30
 6217 0121 0100     		.2byte	0x1
 6218 0123 54       		.byte	0x54
 6219 0124 62000000 		.4byte	.LVL30
 6220 0128 64000000 		.4byte	.LVL31
 6221 012c 0100     		.2byte	0x1
 6222 012e 50       		.byte	0x50
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 168


 6223 012f 64000000 		.4byte	.LVL31
 6224 0133 76000000 		.4byte	.LFE90
 6225 0137 0100     		.2byte	0x1
 6226 0139 54       		.byte	0x54
 6227 013a 00000000 		.4byte	0
 6228 013e 00000000 		.4byte	0
 6229              	.LLST5:
 6230 0142 00000000 		.4byte	.LVL17
 6231 0146 15000000 		.4byte	.LVL22-1
 6232 014a 0100     		.2byte	0x1
 6233 014c 51       		.byte	0x51
 6234 014d 15000000 		.4byte	.LVL22-1
 6235 0151 1C000000 		.4byte	.LVL23
 6236 0155 0400     		.2byte	0x4
 6237 0157 F3       		.byte	0xf3
 6238 0158 01       		.uleb128 0x1
 6239 0159 51       		.byte	0x51
 6240 015a 9F       		.byte	0x9f
 6241 015b 1C000000 		.4byte	.LVL23
 6242 015f 23000000 		.4byte	.LVL25-1
 6243 0163 0100     		.2byte	0x1
 6244 0165 51       		.byte	0x51
 6245 0166 23000000 		.4byte	.LVL25-1
 6246 016a 3A000000 		.4byte	.LVL26
 6247 016e 0400     		.2byte	0x4
 6248 0170 F3       		.byte	0xf3
 6249 0171 01       		.uleb128 0x1
 6250 0172 51       		.byte	0x51
 6251 0173 9F       		.byte	0x9f
 6252 0174 3A000000 		.4byte	.LVL26
 6253 0178 3F000000 		.4byte	.LVL28-1
 6254 017c 0100     		.2byte	0x1
 6255 017e 51       		.byte	0x51
 6256 017f 3F000000 		.4byte	.LVL28-1
 6257 0183 62000000 		.4byte	.LVL30
 6258 0187 0400     		.2byte	0x4
 6259 0189 F3       		.byte	0xf3
 6260 018a 01       		.uleb128 0x1
 6261 018b 51       		.byte	0x51
 6262 018c 9F       		.byte	0x9f
 6263 018d 62000000 		.4byte	.LVL30
 6264 0191 66000000 		.4byte	.LVL32
 6265 0195 0100     		.2byte	0x1
 6266 0197 51       		.byte	0x51
 6267 0198 66000000 		.4byte	.LVL32
 6268 019c 76000000 		.4byte	.LFE90
 6269 01a0 0400     		.2byte	0x4
 6270 01a2 F3       		.byte	0xf3
 6271 01a3 01       		.uleb128 0x1
 6272 01a4 51       		.byte	0x51
 6273 01a5 9F       		.byte	0x9f
 6274 01a6 00000000 		.4byte	0
 6275 01aa 00000000 		.4byte	0
 6276              	.LLST6:
 6277 01ae 00000000 		.4byte	.LVL17
 6278 01b2 0A000000 		.4byte	.LVL20
 6279 01b6 0100     		.2byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 169


 6280 01b8 52       		.byte	0x52
 6281 01b9 0A000000 		.4byte	.LVL20
 6282 01bd 76000000 		.4byte	.LFE90
 6283 01c1 0100     		.2byte	0x1
 6284 01c3 56       		.byte	0x56
 6285 01c4 00000000 		.4byte	0
 6286 01c8 00000000 		.4byte	0
 6287              	.LLST7:
 6288 01cc 06000000 		.4byte	.LVL18
 6289 01d0 16000000 		.4byte	.LVL22
 6290 01d4 0200     		.2byte	0x2
 6291 01d6 30       		.byte	0x30
 6292 01d7 9F       		.byte	0x9f
 6293 01d8 16000000 		.4byte	.LVL22
 6294 01dc 1C000000 		.4byte	.LVL23
 6295 01e0 0100     		.2byte	0x1
 6296 01e2 50       		.byte	0x50
 6297 01e3 1C000000 		.4byte	.LVL23
 6298 01e7 70000000 		.4byte	.LVL33
 6299 01eb 0200     		.2byte	0x2
 6300 01ed 30       		.byte	0x30
 6301 01ee 9F       		.byte	0x9f
 6302 01ef 70000000 		.4byte	.LVL33
 6303 01f3 76000000 		.4byte	.LFE90
 6304 01f7 0100     		.2byte	0x1
 6305 01f9 50       		.byte	0x50
 6306 01fa 00000000 		.4byte	0
 6307 01fe 00000000 		.4byte	0
 6308              	.LLST8:
 6309 0202 08000000 		.4byte	.LVL19
 6310 0206 72000000 		.4byte	.LVL34
 6311 020a 0100     		.2byte	0x1
 6312 020c 55       		.byte	0x55
 6313 020d 72000000 		.4byte	.LVL34
 6314 0211 76000000 		.4byte	.LFE90
 6315 0215 0300     		.2byte	0x3
 6316 0217 75       		.byte	0x75
 6317 0218 7F       		.sleb128 -1
 6318 0219 9F       		.byte	0x9f
 6319 021a 00000000 		.4byte	0
 6320 021e 00000000 		.4byte	0
 6321              	.LLST9:
 6322 0222 00000000 		.4byte	.LVL35
 6323 0226 1C000000 		.4byte	.LVL37
 6324 022a 0100     		.2byte	0x1
 6325 022c 50       		.byte	0x50
 6326 022d 1C000000 		.4byte	.LVL37
 6327 0231 22000000 		.4byte	.LVL39
 6328 0235 0400     		.2byte	0x4
 6329 0237 F3       		.byte	0xf3
 6330 0238 01       		.uleb128 0x1
 6331 0239 50       		.byte	0x50
 6332 023a 9F       		.byte	0x9f
 6333 023b 22000000 		.4byte	.LVL39
 6334 023f 24000000 		.4byte	.LFE91
 6335 0243 0100     		.2byte	0x1
 6336 0245 50       		.byte	0x50
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 170


 6337 0246 00000000 		.4byte	0
 6338 024a 00000000 		.4byte	0
 6339              	.LLST10:
 6340 024e 00000000 		.4byte	.LVL35
 6341 0252 1A000000 		.4byte	.LVL36
 6342 0256 0100     		.2byte	0x1
 6343 0258 51       		.byte	0x51
 6344 0259 1A000000 		.4byte	.LVL36
 6345 025d 22000000 		.4byte	.LVL39
 6346 0261 0100     		.2byte	0x1
 6347 0263 54       		.byte	0x54
 6348 0264 22000000 		.4byte	.LVL39
 6349 0268 24000000 		.4byte	.LFE91
 6350 026c 0100     		.2byte	0x1
 6351 026e 51       		.byte	0x51
 6352 026f 00000000 		.4byte	0
 6353 0273 00000000 		.4byte	0
 6354              	.LLST11:
 6355 0277 00000000 		.4byte	.LVL40
 6356 027b 07000000 		.4byte	.LVL41-1
 6357 027f 0100     		.2byte	0x1
 6358 0281 50       		.byte	0x50
 6359 0282 07000000 		.4byte	.LVL41-1
 6360 0286 66000000 		.4byte	.LFE92
 6361 028a 0100     		.2byte	0x1
 6362 028c 55       		.byte	0x55
 6363 028d 00000000 		.4byte	0
 6364 0291 00000000 		.4byte	0
 6365              	.LLST12:
 6366 0295 0E000000 		.4byte	.LVL42
 6367 0299 24000000 		.4byte	.LVL45
 6368 029d 0100     		.2byte	0x1
 6369 029f 54       		.byte	0x54
 6370 02a0 26000000 		.4byte	.LVL46
 6371 02a4 3C000000 		.4byte	.LVL49
 6372 02a8 0100     		.2byte	0x1
 6373 02aa 54       		.byte	0x54
 6374 02ab 00000000 		.4byte	0
 6375 02af 00000000 		.4byte	0
 6376              	.LLST13:
 6377 02b3 3E000000 		.4byte	.LVL50
 6378 02b7 54000000 		.4byte	.LVL53
 6379 02bb 0100     		.2byte	0x1
 6380 02bd 54       		.byte	0x54
 6381 02be 56000000 		.4byte	.LVL54
 6382 02c2 66000000 		.4byte	.LFE92
 6383 02c6 0100     		.2byte	0x1
 6384 02c8 54       		.byte	0x54
 6385 02c9 00000000 		.4byte	0
 6386 02cd 00000000 		.4byte	0
 6387              	.LLST14:
 6388 02d1 00000000 		.4byte	.LVL56
 6389 02d5 09000000 		.4byte	.LVL58-1
 6390 02d9 0100     		.2byte	0x1
 6391 02db 50       		.byte	0x50
 6392 02dc 09000000 		.4byte	.LVL58-1
 6393 02e0 68000000 		.4byte	.LVL63
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 171


 6394 02e4 0100     		.2byte	0x1
 6395 02e6 54       		.byte	0x54
 6396 02e7 68000000 		.4byte	.LVL63
 6397 02eb 6C000000 		.4byte	.LFE69
 6398 02ef 0400     		.2byte	0x4
 6399 02f1 F3       		.byte	0xf3
 6400 02f2 01       		.uleb128 0x1
 6401 02f3 50       		.byte	0x50
 6402 02f4 9F       		.byte	0x9f
 6403 02f5 00000000 		.4byte	0
 6404 02f9 00000000 		.4byte	0
 6405              	.LLST15:
 6406 02fd 00000000 		.4byte	.LVL56
 6407 0301 09000000 		.4byte	.LVL58-1
 6408 0305 0100     		.2byte	0x1
 6409 0307 51       		.byte	0x51
 6410 0308 09000000 		.4byte	.LVL58-1
 6411 030c 68000000 		.4byte	.LVL63
 6412 0310 0100     		.2byte	0x1
 6413 0312 55       		.byte	0x55
 6414 0313 68000000 		.4byte	.LVL63
 6415 0317 6C000000 		.4byte	.LFE69
 6416 031b 0400     		.2byte	0x4
 6417 031d F3       		.byte	0xf3
 6418 031e 01       		.uleb128 0x1
 6419 031f 51       		.byte	0x51
 6420 0320 9F       		.byte	0x9f
 6421 0321 00000000 		.4byte	0
 6422 0325 00000000 		.4byte	0
 6423              	.LLST16:
 6424 0329 06000000 		.4byte	.LVL57
 6425 032d 09000000 		.4byte	.LVL58-1
 6426 0331 0100     		.2byte	0x1
 6427 0333 50       		.byte	0x50
 6428 0334 09000000 		.4byte	.LVL58-1
 6429 0338 68000000 		.4byte	.LVL63
 6430 033c 0100     		.2byte	0x1
 6431 033e 54       		.byte	0x54
 6432 033f 68000000 		.4byte	.LVL63
 6433 0343 6C000000 		.4byte	.LFE69
 6434 0347 0400     		.2byte	0x4
 6435 0349 F3       		.byte	0xf3
 6436 034a 01       		.uleb128 0x1
 6437 034b 50       		.byte	0x50
 6438 034c 9F       		.byte	0x9f
 6439 034d 00000000 		.4byte	0
 6440 0351 00000000 		.4byte	0
 6441              	.LLST17:
 6442 0355 00000000 		.4byte	.LVL64
 6443 0359 16000000 		.4byte	.LVL67
 6444 035d 0100     		.2byte	0x1
 6445 035f 50       		.byte	0x50
 6446 0360 16000000 		.4byte	.LVL67
 6447 0364 19000000 		.4byte	.LVL68-1
 6448 0368 0200     		.2byte	0x2
 6449 036a 70       		.byte	0x70
 6450 036b 3C       		.sleb128 60
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 172


 6451 036c 19000000 		.4byte	.LVL68-1
 6452 0370 1C000000 		.4byte	.LFE71
 6453 0374 0400     		.2byte	0x4
 6454 0376 F3       		.byte	0xf3
 6455 0377 01       		.uleb128 0x1
 6456 0378 50       		.byte	0x50
 6457 0379 9F       		.byte	0x9f
 6458 037a 00000000 		.4byte	0
 6459 037e 00000000 		.4byte	0
 6460              	.LLST18:
 6461 0382 00000000 		.4byte	.LVL64
 6462 0386 14000000 		.4byte	.LVL66
 6463 038a 0100     		.2byte	0x1
 6464 038c 51       		.byte	0x51
 6465 038d 14000000 		.4byte	.LVL66
 6466 0391 1C000000 		.4byte	.LFE71
 6467 0395 0100     		.2byte	0x1
 6468 0397 54       		.byte	0x54
 6469 0398 00000000 		.4byte	0
 6470 039c 00000000 		.4byte	0
 6471              	.LLST19:
 6472 03a0 00000000 		.4byte	.LVL64
 6473 03a4 19000000 		.4byte	.LVL68-1
 6474 03a8 0100     		.2byte	0x1
 6475 03aa 52       		.byte	0x52
 6476 03ab 19000000 		.4byte	.LVL68-1
 6477 03af 1C000000 		.4byte	.LFE71
 6478 03b3 0400     		.2byte	0x4
 6479 03b5 F3       		.byte	0xf3
 6480 03b6 01       		.uleb128 0x1
 6481 03b7 52       		.byte	0x52
 6482 03b8 9F       		.byte	0x9f
 6483 03b9 00000000 		.4byte	0
 6484 03bd 00000000 		.4byte	0
 6485              	.LLST20:
 6486 03c1 00000000 		.4byte	.LVL64
 6487 03c5 04000000 		.4byte	.LVL65
 6488 03c9 0100     		.2byte	0x1
 6489 03cb 53       		.byte	0x53
 6490 03cc 04000000 		.4byte	.LVL65
 6491 03d0 1C000000 		.4byte	.LFE71
 6492 03d4 0400     		.2byte	0x4
 6493 03d6 F3       		.byte	0xf3
 6494 03d7 01       		.uleb128 0x1
 6495 03d8 53       		.byte	0x53
 6496 03d9 9F       		.byte	0x9f
 6497 03da 00000000 		.4byte	0
 6498 03de 00000000 		.4byte	0
 6499              	.LLST21:
 6500 03e2 00000000 		.4byte	.LVL69
 6501 03e6 10000000 		.4byte	.LVL70
 6502 03ea 0100     		.2byte	0x1
 6503 03ec 50       		.byte	0x50
 6504 03ed 10000000 		.4byte	.LVL70
 6505 03f1 12000000 		.4byte	.LVL71
 6506 03f5 0100     		.2byte	0x1
 6507 03f7 55       		.byte	0x55
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 173


 6508 03f8 12000000 		.4byte	.LVL71
 6509 03fc 14000000 		.4byte	.LVL72
 6510 0400 0100     		.2byte	0x1
 6511 0402 50       		.byte	0x50
 6512 0403 14000000 		.4byte	.LVL72
 6513 0407 34000000 		.4byte	.LFE70
 6514 040b 0100     		.2byte	0x1
 6515 040d 55       		.byte	0x55
 6516 040e 00000000 		.4byte	0
 6517 0412 00000000 		.4byte	0
 6518              	.LLST22:
 6519 0416 00000000 		.4byte	.LVL69
 6520 041a 19000000 		.4byte	.LVL74-1
 6521 041e 0100     		.2byte	0x1
 6522 0420 51       		.byte	0x51
 6523 0421 19000000 		.4byte	.LVL74-1
 6524 0425 34000000 		.4byte	.LFE70
 6525 0429 0100     		.2byte	0x1
 6526 042b 56       		.byte	0x56
 6527 042c 00000000 		.4byte	0
 6528 0430 00000000 		.4byte	0
 6529              	.LLST23:
 6530 0434 00000000 		.4byte	.LVL69
 6531 0438 19000000 		.4byte	.LVL74-1
 6532 043c 0100     		.2byte	0x1
 6533 043e 52       		.byte	0x52
 6534 043f 19000000 		.4byte	.LVL74-1
 6535 0443 34000000 		.4byte	.LFE70
 6536 0447 0400     		.2byte	0x4
 6537 0449 F3       		.byte	0xf3
 6538 044a 01       		.uleb128 0x1
 6539 044b 52       		.byte	0x52
 6540 044c 9F       		.byte	0x9f
 6541 044d 00000000 		.4byte	0
 6542 0451 00000000 		.4byte	0
 6543              	.LLST24:
 6544 0455 1A000000 		.4byte	.LVL74
 6545 0459 2A000000 		.4byte	.LVL77
 6546 045d 0100     		.2byte	0x1
 6547 045f 50       		.byte	0x50
 6548 0460 2A000000 		.4byte	.LVL77
 6549 0464 34000000 		.4byte	.LFE70
 6550 0468 0100     		.2byte	0x1
 6551 046a 54       		.byte	0x54
 6552 046b 00000000 		.4byte	0
 6553 046f 00000000 		.4byte	0
 6554              	.LLST25:
 6555 0473 10000000 		.4byte	.LVL70
 6556 0477 12000000 		.4byte	.LVL71
 6557 047b 0100     		.2byte	0x1
 6558 047d 50       		.byte	0x50
 6559 047e 14000000 		.4byte	.LVL72
 6560 0482 16000000 		.4byte	.LVL73
 6561 0486 0100     		.2byte	0x1
 6562 0488 50       		.byte	0x50
 6563 0489 16000000 		.4byte	.LVL73
 6564 048d 19000000 		.4byte	.LVL74-1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 174


 6565 0491 0400     		.2byte	0x4
 6566 0493 70       		.byte	0x70
 6567 0494 B87F     		.sleb128 -72
 6568 0496 9F       		.byte	0x9f
 6569 0497 00000000 		.4byte	0
 6570 049b 00000000 		.4byte	0
 6571              	.LLST26:
 6572 049f 1E000000 		.4byte	.LVL75
 6573 04a3 26000000 		.4byte	.LVL76
 6574 04a7 0400     		.2byte	0x4
 6575 04a9 70       		.byte	0x70
 6576 04aa C800     		.sleb128 72
 6577 04ac 9F       		.byte	0x9f
 6578 04ad 26000000 		.4byte	.LVL76
 6579 04b1 2D000000 		.4byte	.LVL78-1
 6580 04b5 0100     		.2byte	0x1
 6581 04b7 52       		.byte	0x52
 6582 04b8 2D000000 		.4byte	.LVL78-1
 6583 04bc 2E000000 		.4byte	.LVL78
 6584 04c0 0400     		.2byte	0x4
 6585 04c2 74       		.byte	0x74
 6586 04c3 C800     		.sleb128 72
 6587 04c5 9F       		.byte	0x9f
 6588 04c6 00000000 		.4byte	0
 6589 04ca 00000000 		.4byte	0
 6590              	.LLST27:
 6591 04ce 00000000 		.4byte	.LVL79
 6592 04d2 0B000000 		.4byte	.LVL81-1
 6593 04d6 0100     		.2byte	0x1
 6594 04d8 50       		.byte	0x50
 6595 04d9 0B000000 		.4byte	.LVL81-1
 6596 04dd 16000000 		.4byte	.LFE76
 6597 04e1 0400     		.2byte	0x4
 6598 04e3 F3       		.byte	0xf3
 6599 04e4 01       		.uleb128 0x1
 6600 04e5 50       		.byte	0x50
 6601 04e6 9F       		.byte	0x9f
 6602 04e7 00000000 		.4byte	0
 6603 04eb 00000000 		.4byte	0
 6604              	.LLST28:
 6605 04ef 00000000 		.4byte	.LVL79
 6606 04f3 08000000 		.4byte	.LVL80
 6607 04f7 0100     		.2byte	0x1
 6608 04f9 51       		.byte	0x51
 6609 04fa 08000000 		.4byte	.LVL80
 6610 04fe 16000000 		.4byte	.LFE76
 6611 0502 0100     		.2byte	0x1
 6612 0504 54       		.byte	0x54
 6613 0505 00000000 		.4byte	0
 6614 0509 00000000 		.4byte	0
 6615              	.LLST29:
 6616 050d 0C000000 		.4byte	.LVL81
 6617 0511 14000000 		.4byte	.LVL82
 6618 0515 0100     		.2byte	0x1
 6619 0517 50       		.byte	0x50
 6620 0518 14000000 		.4byte	.LVL82
 6621 051c 16000000 		.4byte	.LFE76
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 175


 6622 0520 0100     		.2byte	0x1
 6623 0522 53       		.byte	0x53
 6624 0523 00000000 		.4byte	0
 6625 0527 00000000 		.4byte	0
 6626              	.LLST30:
 6627 052b 00000000 		.4byte	.LVL83
 6628 052f 0E000000 		.4byte	.LVL85
 6629 0533 0100     		.2byte	0x1
 6630 0535 50       		.byte	0x50
 6631 0536 0E000000 		.4byte	.LVL85
 6632 053a 04010000 		.4byte	.LVL110
 6633 053e 0100     		.2byte	0x1
 6634 0540 54       		.byte	0x54
 6635 0541 04010000 		.4byte	.LVL110
 6636 0545 08010000 		.4byte	.LFE77
 6637 0549 0400     		.2byte	0x4
 6638 054b F3       		.byte	0xf3
 6639 054c 01       		.uleb128 0x1
 6640 054d 50       		.byte	0x50
 6641 054e 9F       		.byte	0x9f
 6642 054f 00000000 		.4byte	0
 6643 0553 00000000 		.4byte	0
 6644              	.LLST31:
 6645 0557 00000000 		.4byte	.LVL83
 6646 055b 0E000000 		.4byte	.LVL85
 6647 055f 0100     		.2byte	0x1
 6648 0561 51       		.byte	0x51
 6649 0562 0E000000 		.4byte	.LVL85
 6650 0566 04010000 		.4byte	.LVL110
 6651 056a 0100     		.2byte	0x1
 6652 056c 57       		.byte	0x57
 6653 056d 04010000 		.4byte	.LVL110
 6654 0571 08010000 		.4byte	.LFE77
 6655 0575 0400     		.2byte	0x4
 6656 0577 F3       		.byte	0xf3
 6657 0578 01       		.uleb128 0x1
 6658 0579 51       		.byte	0x51
 6659 057a 9F       		.byte	0x9f
 6660 057b 00000000 		.4byte	0
 6661 057f 00000000 		.4byte	0
 6662              	.LLST32:
 6663 0583 00000000 		.4byte	.LVL83
 6664 0587 0E000000 		.4byte	.LVL85
 6665 058b 0100     		.2byte	0x1
 6666 058d 52       		.byte	0x52
 6667 058e 0E000000 		.4byte	.LVL85
 6668 0592 AE000000 		.4byte	.LVL100
 6669 0596 0200     		.2byte	0x2
 6670 0598 91       		.byte	0x91
 6671 0599 5C       		.sleb128 -36
 6672 059a AE000000 		.4byte	.LVL100
 6673 059e B3000000 		.4byte	.LVL101-1
 6674 05a2 0200     		.2byte	0x2
 6675 05a4 71       		.byte	0x71
 6676 05a5 00       		.sleb128 0
 6677 05a6 B3000000 		.4byte	.LVL101-1
 6678 05aa 04010000 		.4byte	.LVL110
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 176


 6679 05ae 0200     		.2byte	0x2
 6680 05b0 91       		.byte	0x91
 6681 05b1 5C       		.sleb128 -36
 6682 05b2 04010000 		.4byte	.LVL110
 6683 05b6 08010000 		.4byte	.LFE77
 6684 05ba 0200     		.2byte	0x2
 6685 05bc 7D       		.byte	0x7d
 6686 05bd 5C       		.sleb128 -36
 6687 05be 00000000 		.4byte	0
 6688 05c2 00000000 		.4byte	0
 6689              	.LLST33:
 6690 05c6 00000000 		.4byte	.LVL83
 6691 05ca 0E000000 		.4byte	.LVL85
 6692 05ce 0100     		.2byte	0x1
 6693 05d0 53       		.byte	0x53
 6694 05d1 0E000000 		.4byte	.LVL85
 6695 05d5 04010000 		.4byte	.LVL110
 6696 05d9 0100     		.2byte	0x1
 6697 05db 56       		.byte	0x56
 6698 05dc 04010000 		.4byte	.LVL110
 6699 05e0 08010000 		.4byte	.LFE77
 6700 05e4 0400     		.2byte	0x4
 6701 05e6 F3       		.byte	0xf3
 6702 05e7 01       		.uleb128 0x1
 6703 05e8 53       		.byte	0x53
 6704 05e9 9F       		.byte	0x9f
 6705 05ea 00000000 		.4byte	0
 6706 05ee 00000000 		.4byte	0
 6707              	.LLST34:
 6708 05f2 0C000000 		.4byte	.LVL84
 6709 05f6 0E000000 		.4byte	.LVL85
 6710 05fa 0200     		.2byte	0x2
 6711 05fc 30       		.byte	0x30
 6712 05fd 9F       		.byte	0x9f
 6713 05fe 0E000000 		.4byte	.LVL85
 6714 0602 76000000 		.4byte	.LVL94
 6715 0606 0100     		.2byte	0x1
 6716 0608 55       		.byte	0x55
 6717 0609 76000000 		.4byte	.LVL94
 6718 060d 78000000 		.4byte	.LVL95
 6719 0611 0200     		.2byte	0x2
 6720 0613 31       		.byte	0x31
 6721 0614 9F       		.byte	0x9f
 6722 0615 78000000 		.4byte	.LVL95
 6723 0619 04010000 		.4byte	.LVL110
 6724 061d 0100     		.2byte	0x1
 6725 061f 55       		.byte	0x55
 6726 0620 00000000 		.4byte	0
 6727 0624 00000000 		.4byte	0
 6728              	.LLST35:
 6729 0628 28000000 		.4byte	.LVL87
 6730 062c 30000000 		.4byte	.LVL88
 6731 0630 0100     		.2byte	0x1
 6732 0632 50       		.byte	0x50
 6733 0633 48000000 		.4byte	.LVL90
 6734 0637 5A000000 		.4byte	.LVL91
 6735 063b 0100     		.2byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 177


 6736 063d 50       		.byte	0x50
 6737 063e 00000000 		.4byte	0
 6738 0642 00000000 		.4byte	0
 6739              	.LLST36:
 6740 0646 0C000000 		.4byte	.LVL84
 6741 064a 0E000000 		.4byte	.LVL85
 6742 064e 0100     		.2byte	0x1
 6743 0650 50       		.byte	0x50
 6744 0651 0E000000 		.4byte	.LVL85
 6745 0655 04010000 		.4byte	.LVL110
 6746 0659 0100     		.2byte	0x1
 6747 065b 54       		.byte	0x54
 6748 065c 04010000 		.4byte	.LVL110
 6749 0660 08010000 		.4byte	.LFE77
 6750 0664 0400     		.2byte	0x4
 6751 0666 F3       		.byte	0xf3
 6752 0667 01       		.uleb128 0x1
 6753 0668 50       		.byte	0x50
 6754 0669 9F       		.byte	0x9f
 6755 066a 00000000 		.4byte	0
 6756 066e 00000000 		.4byte	0
 6757              	.LLST37:
 6758 0672 00000000 		.4byte	.LVL111
 6759 0676 13000000 		.4byte	.LVL112-1
 6760 067a 0100     		.2byte	0x1
 6761 067c 50       		.byte	0x50
 6762 067d 13000000 		.4byte	.LVL112-1
 6763 0681 16000000 		.4byte	.LVL113
 6764 0685 0400     		.2byte	0x4
 6765 0687 F3       		.byte	0xf3
 6766 0688 01       		.uleb128 0x1
 6767 0689 50       		.byte	0x50
 6768 068a 9F       		.byte	0x9f
 6769 068b 16000000 		.4byte	.LVL113
 6770 068f 18000000 		.4byte	.LFE72
 6771 0693 0100     		.2byte	0x1
 6772 0695 50       		.byte	0x50
 6773 0696 00000000 		.4byte	0
 6774 069a 00000000 		.4byte	0
 6775              	.LLST38:
 6776 069e 00000000 		.4byte	.LVL114
 6777 06a2 08000000 		.4byte	.LVL116
 6778 06a6 0100     		.2byte	0x1
 6779 06a8 50       		.byte	0x50
 6780 06a9 08000000 		.4byte	.LVL116
 6781 06ad 16000000 		.4byte	.LFE73
 6782 06b1 0400     		.2byte	0x4
 6783 06b3 F3       		.byte	0xf3
 6784 06b4 01       		.uleb128 0x1
 6785 06b5 50       		.byte	0x50
 6786 06b6 9F       		.byte	0x9f
 6787 06b7 00000000 		.4byte	0
 6788 06bb 00000000 		.4byte	0
 6789              	.LLST39:
 6790 06bf 0E000000 		.4byte	.LVL118
 6791 06c3 11000000 		.4byte	.LVL119-1
 6792 06c7 0100     		.2byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 178


 6793 06c9 50       		.byte	0x50
 6794 06ca 11000000 		.4byte	.LVL119-1
 6795 06ce 16000000 		.4byte	.LFE73
 6796 06d2 0100     		.2byte	0x1
 6797 06d4 54       		.byte	0x54
 6798 06d5 00000000 		.4byte	0
 6799 06d9 00000000 		.4byte	0
 6800              	.LLST40:
 6801 06dd 00000000 		.4byte	.LVL120
 6802 06e1 09000000 		.4byte	.LVL122-1
 6803 06e5 0100     		.2byte	0x1
 6804 06e7 50       		.byte	0x50
 6805 06e8 09000000 		.4byte	.LVL122-1
 6806 06ec 2C000000 		.4byte	.LFE74
 6807 06f0 0100     		.2byte	0x1
 6808 06f2 54       		.byte	0x54
 6809 06f3 00000000 		.4byte	0
 6810 06f7 00000000 		.4byte	0
 6811              	.LLST41:
 6812 06fb 04000000 		.4byte	.LVL121
 6813 06ff 09000000 		.4byte	.LVL122-1
 6814 0703 0100     		.2byte	0x1
 6815 0705 50       		.byte	0x50
 6816 0706 09000000 		.4byte	.LVL122-1
 6817 070a 2C000000 		.4byte	.LFE74
 6818 070e 0100     		.2byte	0x1
 6819 0710 54       		.byte	0x54
 6820 0711 00000000 		.4byte	0
 6821 0715 00000000 		.4byte	0
 6822              	.LLST42:
 6823 0719 00000000 		.4byte	.LVL127
 6824 071d 31000000 		.4byte	.LVL131-1
 6825 0721 0100     		.2byte	0x1
 6826 0723 50       		.byte	0x50
 6827 0724 31000000 		.4byte	.LVL131-1
 6828 0728 5A000000 		.4byte	.LVL135
 6829 072c 0100     		.2byte	0x1
 6830 072e 55       		.byte	0x55
 6831 072f 5A000000 		.4byte	.LVL135
 6832 0733 5C000000 		.4byte	.LVL136
 6833 0737 0100     		.2byte	0x1
 6834 0739 50       		.byte	0x50
 6835 073a 5C000000 		.4byte	.LVL136
 6836 073e 5E000000 		.4byte	.LVL137
 6837 0742 0400     		.2byte	0x4
 6838 0744 F3       		.byte	0xf3
 6839 0745 01       		.uleb128 0x1
 6840 0746 50       		.byte	0x50
 6841 0747 9F       		.byte	0x9f
 6842 0748 5E000000 		.4byte	.LVL137
 6843 074c 68000000 		.4byte	.LVL138
 6844 0750 0100     		.2byte	0x1
 6845 0752 55       		.byte	0x55
 6846 0753 68000000 		.4byte	.LVL138
 6847 0757 6E000000 		.4byte	.LFE78
 6848 075b 0400     		.2byte	0x4
 6849 075d F3       		.byte	0xf3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 179


 6850 075e 01       		.uleb128 0x1
 6851 075f 50       		.byte	0x50
 6852 0760 9F       		.byte	0x9f
 6853 0761 00000000 		.4byte	0
 6854 0765 00000000 		.4byte	0
 6855              	.LLST43:
 6856 0769 00000000 		.4byte	.LVL127
 6857 076d 31000000 		.4byte	.LVL131-1
 6858 0771 0100     		.2byte	0x1
 6859 0773 51       		.byte	0x51
 6860 0774 31000000 		.4byte	.LVL131-1
 6861 0778 5A000000 		.4byte	.LVL135
 6862 077c 0400     		.2byte	0x4
 6863 077e F3       		.byte	0xf3
 6864 077f 01       		.uleb128 0x1
 6865 0780 51       		.byte	0x51
 6866 0781 9F       		.byte	0x9f
 6867 0782 5A000000 		.4byte	.LVL135
 6868 0786 5E000000 		.4byte	.LVL137
 6869 078a 0100     		.2byte	0x1
 6870 078c 51       		.byte	0x51
 6871 078d 5E000000 		.4byte	.LVL137
 6872 0791 6E000000 		.4byte	.LFE78
 6873 0795 0400     		.2byte	0x4
 6874 0797 F3       		.byte	0xf3
 6875 0798 01       		.uleb128 0x1
 6876 0799 51       		.byte	0x51
 6877 079a 9F       		.byte	0x9f
 6878 079b 00000000 		.4byte	0
 6879 079f 00000000 		.4byte	0
 6880              	.LLST44:
 6881 07a3 00000000 		.4byte	.LVL127
 6882 07a7 2E000000 		.4byte	.LVL130
 6883 07ab 0100     		.2byte	0x1
 6884 07ad 52       		.byte	0x52
 6885 07ae 2E000000 		.4byte	.LVL130
 6886 07b2 5A000000 		.4byte	.LVL135
 6887 07b6 0100     		.2byte	0x1
 6888 07b8 57       		.byte	0x57
 6889 07b9 5A000000 		.4byte	.LVL135
 6890 07bd 5E000000 		.4byte	.LVL137
 6891 07c1 0100     		.2byte	0x1
 6892 07c3 52       		.byte	0x52
 6893 07c4 5E000000 		.4byte	.LVL137
 6894 07c8 68000000 		.4byte	.LVL138
 6895 07cc 0100     		.2byte	0x1
 6896 07ce 57       		.byte	0x57
 6897 07cf 68000000 		.4byte	.LVL138
 6898 07d3 6E000000 		.4byte	.LFE78
 6899 07d7 0400     		.2byte	0x4
 6900 07d9 F3       		.byte	0xf3
 6901 07da 01       		.uleb128 0x1
 6902 07db 52       		.byte	0x52
 6903 07dc 9F       		.byte	0x9f
 6904 07dd 00000000 		.4byte	0
 6905 07e1 00000000 		.4byte	0
 6906              	.LLST45:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 180


 6907 07e5 00000000 		.4byte	.LVL127
 6908 07e9 31000000 		.4byte	.LVL131-1
 6909 07ed 0100     		.2byte	0x1
 6910 07ef 53       		.byte	0x53
 6911 07f0 31000000 		.4byte	.LVL131-1
 6912 07f4 5A000000 		.4byte	.LVL135
 6913 07f8 0400     		.2byte	0x4
 6914 07fa F3       		.byte	0xf3
 6915 07fb 01       		.uleb128 0x1
 6916 07fc 53       		.byte	0x53
 6917 07fd 9F       		.byte	0x9f
 6918 07fe 5A000000 		.4byte	.LVL135
 6919 0802 5E000000 		.4byte	.LVL137
 6920 0806 0100     		.2byte	0x1
 6921 0808 53       		.byte	0x53
 6922 0809 5E000000 		.4byte	.LVL137
 6923 080d 6E000000 		.4byte	.LFE78
 6924 0811 0400     		.2byte	0x4
 6925 0813 F3       		.byte	0xf3
 6926 0814 01       		.uleb128 0x1
 6927 0815 53       		.byte	0x53
 6928 0816 9F       		.byte	0x9f
 6929 0817 00000000 		.4byte	0
 6930 081b 00000000 		.4byte	0
 6931              	.LLST46:
 6932 081f 02000000 		.4byte	.LVL128
 6933 0823 31000000 		.4byte	.LVL131-1
 6934 0827 0100     		.2byte	0x1
 6935 0829 50       		.byte	0x50
 6936 082a 31000000 		.4byte	.LVL131-1
 6937 082e 5A000000 		.4byte	.LVL135
 6938 0832 0100     		.2byte	0x1
 6939 0834 55       		.byte	0x55
 6940 0835 5A000000 		.4byte	.LVL135
 6941 0839 5C000000 		.4byte	.LVL136
 6942 083d 0100     		.2byte	0x1
 6943 083f 50       		.byte	0x50
 6944 0840 5C000000 		.4byte	.LVL136
 6945 0844 5E000000 		.4byte	.LVL137
 6946 0848 0400     		.2byte	0x4
 6947 084a F3       		.byte	0xf3
 6948 084b 01       		.uleb128 0x1
 6949 084c 50       		.byte	0x50
 6950 084d 9F       		.byte	0x9f
 6951 084e 5E000000 		.4byte	.LVL137
 6952 0852 68000000 		.4byte	.LVL138
 6953 0856 0100     		.2byte	0x1
 6954 0858 55       		.byte	0x55
 6955 0859 68000000 		.4byte	.LVL138
 6956 085d 6E000000 		.4byte	.LFE78
 6957 0861 0400     		.2byte	0x4
 6958 0863 F3       		.byte	0xf3
 6959 0864 01       		.uleb128 0x1
 6960 0865 50       		.byte	0x50
 6961 0866 9F       		.byte	0x9f
 6962 0867 00000000 		.4byte	0
 6963 086b 00000000 		.4byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 181


 6964              	.LLST47:
 6965 086f 2C000000 		.4byte	.LVL129
 6966 0873 50000000 		.4byte	.LVL133
 6967 0877 0100     		.2byte	0x1
 6968 0879 54       		.byte	0x54
 6969 087a 50000000 		.4byte	.LVL133
 6970 087e 52000000 		.4byte	.LVL134
 6971 0882 0300     		.2byte	0x3
 6972 0884 74       		.byte	0x74
 6973 0885 7F       		.sleb128 -1
 6974 0886 9F       		.byte	0x9f
 6975 0887 5E000000 		.4byte	.LVL137
 6976 088b 68000000 		.4byte	.LVL138
 6977 088f 0100     		.2byte	0x1
 6978 0891 54       		.byte	0x54
 6979 0892 00000000 		.4byte	0
 6980 0896 00000000 		.4byte	0
 6981              	.LLST48:
 6982 089a 68000000 		.4byte	.LVL138
 6983 089e 6C000000 		.4byte	.LVL139
 6984 08a2 0100     		.2byte	0x1
 6985 08a4 56       		.byte	0x56
 6986 08a5 00000000 		.4byte	0
 6987 08a9 00000000 		.4byte	0
 6988              	.LLST49:
 6989 08ad 00000000 		.4byte	.LVL140
 6990 08b1 36000000 		.4byte	.LVL146
 6991 08b5 0100     		.2byte	0x1
 6992 08b7 50       		.byte	0x50
 6993 08b8 36000000 		.4byte	.LVL146
 6994 08bc 39000000 		.4byte	.LVL147-1
 6995 08c0 0300     		.2byte	0x3
 6996 08c2 70       		.byte	0x70
 6997 08c3 5C       		.sleb128 -36
 6998 08c4 9F       		.byte	0x9f
 6999 08c5 39000000 		.4byte	.LVL147-1
 7000 08c9 44000000 		.4byte	.LVL148
 7001 08cd 0400     		.2byte	0x4
 7002 08cf F3       		.byte	0xf3
 7003 08d0 01       		.uleb128 0x1
 7004 08d1 50       		.byte	0x50
 7005 08d2 9F       		.byte	0x9f
 7006 08d3 44000000 		.4byte	.LVL148
 7007 08d7 4E000000 		.4byte	.LVL151
 7008 08db 0100     		.2byte	0x1
 7009 08dd 50       		.byte	0x50
 7010 08de 4E000000 		.4byte	.LVL151
 7011 08e2 50000000 		.4byte	.LVL152
 7012 08e6 0400     		.2byte	0x4
 7013 08e8 F3       		.byte	0xf3
 7014 08e9 01       		.uleb128 0x1
 7015 08ea 50       		.byte	0x50
 7016 08eb 9F       		.byte	0x9f
 7017 08ec 50000000 		.4byte	.LVL152
 7018 08f0 52000000 		.4byte	.LVL153
 7019 08f4 0100     		.2byte	0x1
 7020 08f6 50       		.byte	0x50
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 182


 7021 08f7 52000000 		.4byte	.LVL153
 7022 08fb 54000000 		.4byte	.LVL154
 7023 08ff 0400     		.2byte	0x4
 7024 0901 F3       		.byte	0xf3
 7025 0902 01       		.uleb128 0x1
 7026 0903 50       		.byte	0x50
 7027 0904 9F       		.byte	0x9f
 7028 0905 54000000 		.4byte	.LVL154
 7029 0909 56000000 		.4byte	.LVL155
 7030 090d 0100     		.2byte	0x1
 7031 090f 50       		.byte	0x50
 7032 0910 56000000 		.4byte	.LVL155
 7033 0914 64000000 		.4byte	.LFE79
 7034 0918 0400     		.2byte	0x4
 7035 091a F3       		.byte	0xf3
 7036 091b 01       		.uleb128 0x1
 7037 091c 50       		.byte	0x50
 7038 091d 9F       		.byte	0x9f
 7039 091e 00000000 		.4byte	0
 7040 0922 00000000 		.4byte	0
 7041              	.LLST50:
 7042 0926 00000000 		.4byte	.LVL140
 7043 092a 39000000 		.4byte	.LVL147-1
 7044 092e 0100     		.2byte	0x1
 7045 0930 51       		.byte	0x51
 7046 0931 39000000 		.4byte	.LVL147-1
 7047 0935 44000000 		.4byte	.LVL148
 7048 0939 0100     		.2byte	0x1
 7049 093b 55       		.byte	0x55
 7050 093c 44000000 		.4byte	.LVL148
 7051 0940 58000000 		.4byte	.LVL156
 7052 0944 0100     		.2byte	0x1
 7053 0946 51       		.byte	0x51
 7054 0947 58000000 		.4byte	.LVL156
 7055 094b 5E000000 		.4byte	.LVL157
 7056 094f 0100     		.2byte	0x1
 7057 0951 55       		.byte	0x55
 7058 0952 5E000000 		.4byte	.LVL157
 7059 0956 64000000 		.4byte	.LFE79
 7060 095a 0400     		.2byte	0x4
 7061 095c F3       		.byte	0xf3
 7062 095d 01       		.uleb128 0x1
 7063 095e 51       		.byte	0x51
 7064 095f 9F       		.byte	0x9f
 7065 0960 00000000 		.4byte	0
 7066 0964 00000000 		.4byte	0
 7067              	.LLST51:
 7068 0968 02000000 		.4byte	.LVL141
 7069 096c 36000000 		.4byte	.LVL146
 7070 0970 0100     		.2byte	0x1
 7071 0972 50       		.byte	0x50
 7072 0973 36000000 		.4byte	.LVL146
 7073 0977 39000000 		.4byte	.LVL147-1
 7074 097b 0300     		.2byte	0x3
 7075 097d 70       		.byte	0x70
 7076 097e 5C       		.sleb128 -36
 7077 097f 9F       		.byte	0x9f
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 183


 7078 0980 39000000 		.4byte	.LVL147-1
 7079 0984 44000000 		.4byte	.LVL148
 7080 0988 0400     		.2byte	0x4
 7081 098a F3       		.byte	0xf3
 7082 098b 01       		.uleb128 0x1
 7083 098c 50       		.byte	0x50
 7084 098d 9F       		.byte	0x9f
 7085 098e 44000000 		.4byte	.LVL148
 7086 0992 4E000000 		.4byte	.LVL151
 7087 0996 0100     		.2byte	0x1
 7088 0998 50       		.byte	0x50
 7089 0999 4E000000 		.4byte	.LVL151
 7090 099d 50000000 		.4byte	.LVL152
 7091 09a1 0400     		.2byte	0x4
 7092 09a3 F3       		.byte	0xf3
 7093 09a4 01       		.uleb128 0x1
 7094 09a5 50       		.byte	0x50
 7095 09a6 9F       		.byte	0x9f
 7096 09a7 50000000 		.4byte	.LVL152
 7097 09ab 52000000 		.4byte	.LVL153
 7098 09af 0100     		.2byte	0x1
 7099 09b1 50       		.byte	0x50
 7100 09b2 52000000 		.4byte	.LVL153
 7101 09b6 54000000 		.4byte	.LVL154
 7102 09ba 0400     		.2byte	0x4
 7103 09bc F3       		.byte	0xf3
 7104 09bd 01       		.uleb128 0x1
 7105 09be 50       		.byte	0x50
 7106 09bf 9F       		.byte	0x9f
 7107 09c0 54000000 		.4byte	.LVL154
 7108 09c4 56000000 		.4byte	.LVL155
 7109 09c8 0100     		.2byte	0x1
 7110 09ca 50       		.byte	0x50
 7111 09cb 56000000 		.4byte	.LVL155
 7112 09cf 64000000 		.4byte	.LFE79
 7113 09d3 0400     		.2byte	0x4
 7114 09d5 F3       		.byte	0xf3
 7115 09d6 01       		.uleb128 0x1
 7116 09d7 50       		.byte	0x50
 7117 09d8 9F       		.byte	0x9f
 7118 09d9 00000000 		.4byte	0
 7119 09dd 00000000 		.4byte	0
 7120              	.LLST52:
 7121 09e1 18000000 		.4byte	.LVL142
 7122 09e5 26000000 		.4byte	.LVL144
 7123 09e9 0100     		.2byte	0x1
 7124 09eb 52       		.byte	0x52
 7125 09ec 26000000 		.4byte	.LVL144
 7126 09f0 39000000 		.4byte	.LVL147-1
 7127 09f4 0300     		.2byte	0x3
 7128 09f6 72       		.byte	0x72
 7129 09f7 7F       		.sleb128 -1
 7130 09f8 9F       		.byte	0x9f
 7131 09f9 44000000 		.4byte	.LVL148
 7132 09fd 50000000 		.4byte	.LVL152
 7133 0a01 0300     		.2byte	0x3
 7134 0a03 72       		.byte	0x72
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 184


 7135 0a04 7F       		.sleb128 -1
 7136 0a05 9F       		.byte	0x9f
 7137 0a06 50000000 		.4byte	.LVL152
 7138 0a0a 54000000 		.4byte	.LVL154
 7139 0a0e 0100     		.2byte	0x1
 7140 0a10 52       		.byte	0x52
 7141 0a11 54000000 		.4byte	.LVL154
 7142 0a15 58000000 		.4byte	.LVL156
 7143 0a19 0300     		.2byte	0x3
 7144 0a1b 72       		.byte	0x72
 7145 0a1c 7F       		.sleb128 -1
 7146 0a1d 9F       		.byte	0x9f
 7147 0a1e 00000000 		.4byte	0
 7148 0a22 00000000 		.4byte	0
 7149              	.LLST53:
 7150 0a26 24000000 		.4byte	.LVL143
 7151 0a2a 30000000 		.4byte	.LVL145
 7152 0a2e 0100     		.2byte	0x1
 7153 0a30 53       		.byte	0x53
 7154 0a31 44000000 		.4byte	.LVL148
 7155 0a35 46000000 		.4byte	.LVL149
 7156 0a39 0100     		.2byte	0x1
 7157 0a3b 53       		.byte	0x53
 7158 0a3c 46000000 		.4byte	.LVL149
 7159 0a40 48000000 		.4byte	.LVL150
 7160 0a44 0300     		.2byte	0x3
 7161 0a46 73       		.byte	0x73
 7162 0a47 7F       		.sleb128 -1
 7163 0a48 9F       		.byte	0x9f
 7164 0a49 00000000 		.4byte	0
 7165 0a4d 00000000 		.4byte	0
 7166              	.LLST54:
 7167 0a51 5E000000 		.4byte	.LVL157
 7168 0a55 62000000 		.4byte	.LVL158
 7169 0a59 0100     		.2byte	0x1
 7170 0a5b 54       		.byte	0x54
 7171 0a5c 00000000 		.4byte	0
 7172 0a60 00000000 		.4byte	0
 7173              	.LLST55:
 7174 0a64 00000000 		.4byte	.LVL159
 7175 0a68 0C000000 		.4byte	.LVL161
 7176 0a6c 0100     		.2byte	0x1
 7177 0a6e 50       		.byte	0x50
 7178 0a6f 0C000000 		.4byte	.LVL161
 7179 0a73 F2000000 		.4byte	.LVL188
 7180 0a77 0100     		.2byte	0x1
 7181 0a79 54       		.byte	0x54
 7182 0a7a F2000000 		.4byte	.LVL188
 7183 0a7e F8000000 		.4byte	.LFE80
 7184 0a82 0400     		.2byte	0x4
 7185 0a84 F3       		.byte	0xf3
 7186 0a85 01       		.uleb128 0x1
 7187 0a86 50       		.byte	0x50
 7188 0a87 9F       		.byte	0x9f
 7189 0a88 00000000 		.4byte	0
 7190 0a8c 00000000 		.4byte	0
 7191              	.LLST56:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 185


 7192 0a90 00000000 		.4byte	.LVL159
 7193 0a94 0C000000 		.4byte	.LVL161
 7194 0a98 0100     		.2byte	0x1
 7195 0a9a 51       		.byte	0x51
 7196 0a9b 0C000000 		.4byte	.LVL161
 7197 0a9f F2000000 		.4byte	.LVL188
 7198 0aa3 0100     		.2byte	0x1
 7199 0aa5 57       		.byte	0x57
 7200 0aa6 F2000000 		.4byte	.LVL188
 7201 0aaa F8000000 		.4byte	.LFE80
 7202 0aae 0400     		.2byte	0x4
 7203 0ab0 F3       		.byte	0xf3
 7204 0ab1 01       		.uleb128 0x1
 7205 0ab2 51       		.byte	0x51
 7206 0ab3 9F       		.byte	0x9f
 7207 0ab4 00000000 		.4byte	0
 7208 0ab8 00000000 		.4byte	0
 7209              	.LLST57:
 7210 0abc 00000000 		.4byte	.LVL159
 7211 0ac0 0C000000 		.4byte	.LVL161
 7212 0ac4 0100     		.2byte	0x1
 7213 0ac6 52       		.byte	0x52
 7214 0ac7 0C000000 		.4byte	.LVL161
 7215 0acb 92000000 		.4byte	.LVL176
 7216 0acf 0200     		.2byte	0x2
 7217 0ad1 91       		.byte	0x91
 7218 0ad2 5C       		.sleb128 -36
 7219 0ad3 92000000 		.4byte	.LVL176
 7220 0ad7 97000000 		.4byte	.LVL177-1
 7221 0adb 0200     		.2byte	0x2
 7222 0add 71       		.byte	0x71
 7223 0ade 00       		.sleb128 0
 7224 0adf 97000000 		.4byte	.LVL177-1
 7225 0ae3 F2000000 		.4byte	.LVL188
 7226 0ae7 0200     		.2byte	0x2
 7227 0ae9 91       		.byte	0x91
 7228 0aea 5C       		.sleb128 -36
 7229 0aeb F2000000 		.4byte	.LVL188
 7230 0aef F8000000 		.4byte	.LFE80
 7231 0af3 0200     		.2byte	0x2
 7232 0af5 7D       		.byte	0x7d
 7233 0af6 5C       		.sleb128 -36
 7234 0af7 00000000 		.4byte	0
 7235 0afb 00000000 		.4byte	0
 7236              	.LLST58:
 7237 0aff 0A000000 		.4byte	.LVL160
 7238 0b03 0C000000 		.4byte	.LVL161
 7239 0b07 0200     		.2byte	0x2
 7240 0b09 30       		.byte	0x30
 7241 0b0a 9F       		.byte	0x9f
 7242 0b0b 0C000000 		.4byte	.LVL161
 7243 0b0f 5A000000 		.4byte	.LVL170
 7244 0b13 0100     		.2byte	0x1
 7245 0b15 56       		.byte	0x56
 7246 0b16 5A000000 		.4byte	.LVL170
 7247 0b1a 5C000000 		.4byte	.LVL171
 7248 0b1e 0200     		.2byte	0x2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 186


 7249 0b20 31       		.byte	0x31
 7250 0b21 9F       		.byte	0x9f
 7251 0b22 5C000000 		.4byte	.LVL171
 7252 0b26 F2000000 		.4byte	.LVL188
 7253 0b2a 0100     		.2byte	0x1
 7254 0b2c 56       		.byte	0x56
 7255 0b2d 00000000 		.4byte	0
 7256 0b31 00000000 		.4byte	0
 7257              	.LLST59:
 7258 0b35 0A000000 		.4byte	.LVL160
 7259 0b39 0C000000 		.4byte	.LVL161
 7260 0b3d 0100     		.2byte	0x1
 7261 0b3f 50       		.byte	0x50
 7262 0b40 0C000000 		.4byte	.LVL161
 7263 0b44 F2000000 		.4byte	.LVL188
 7264 0b48 0100     		.2byte	0x1
 7265 0b4a 54       		.byte	0x54
 7266 0b4b F2000000 		.4byte	.LVL188
 7267 0b4f F8000000 		.4byte	.LFE80
 7268 0b53 0400     		.2byte	0x4
 7269 0b55 F3       		.byte	0xf3
 7270 0b56 01       		.uleb128 0x1
 7271 0b57 50       		.byte	0x50
 7272 0b58 9F       		.byte	0x9f
 7273 0b59 00000000 		.4byte	0
 7274 0b5d 00000000 		.4byte	0
 7275              	.LLST60:
 7276 0b61 12000000 		.4byte	.LVL163
 7277 0b65 1E000000 		.4byte	.LVL165
 7278 0b69 0100     		.2byte	0x1
 7279 0b6b 55       		.byte	0x55
 7280 0b6c 1E000000 		.4byte	.LVL165
 7281 0b70 46000000 		.4byte	.LVL168
 7282 0b74 0300     		.2byte	0x3
 7283 0b76 75       		.byte	0x75
 7284 0b77 01       		.sleb128 1
 7285 0b78 9F       		.byte	0x9f
 7286 0b79 46000000 		.4byte	.LVL168
 7287 0b7d EE000000 		.4byte	.LVL187
 7288 0b81 0100     		.2byte	0x1
 7289 0b83 55       		.byte	0x55
 7290 0b84 00000000 		.4byte	0
 7291 0b88 00000000 		.4byte	0
 7292              	.LLST61:
 7293 0b8c 00000000 		.4byte	.LVL189
 7294 0b90 0C000000 		.4byte	.LVL191
 7295 0b94 0100     		.2byte	0x1
 7296 0b96 50       		.byte	0x50
 7297 0b97 0C000000 		.4byte	.LVL191
 7298 0b9b 24010000 		.4byte	.LVL228
 7299 0b9f 0100     		.2byte	0x1
 7300 0ba1 54       		.byte	0x54
 7301 0ba2 24010000 		.4byte	.LVL228
 7302 0ba6 28010000 		.4byte	.LFE81
 7303 0baa 0400     		.2byte	0x4
 7304 0bac F3       		.byte	0xf3
 7305 0bad 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 187


 7306 0bae 50       		.byte	0x50
 7307 0baf 9F       		.byte	0x9f
 7308 0bb0 00000000 		.4byte	0
 7309 0bb4 00000000 		.4byte	0
 7310              	.LLST62:
 7311 0bb8 00000000 		.4byte	.LVL189
 7312 0bbc 0C000000 		.4byte	.LVL191
 7313 0bc0 0100     		.2byte	0x1
 7314 0bc2 51       		.byte	0x51
 7315 0bc3 0C000000 		.4byte	.LVL191
 7316 0bc7 94000000 		.4byte	.LVL208
 7317 0bcb 0200     		.2byte	0x2
 7318 0bcd 91       		.byte	0x91
 7319 0bce 64       		.sleb128 -28
 7320 0bcf 94000000 		.4byte	.LVL208
 7321 0bd3 99000000 		.4byte	.LVL209-1
 7322 0bd7 0200     		.2byte	0x2
 7323 0bd9 71       		.byte	0x71
 7324 0bda 00       		.sleb128 0
 7325 0bdb 99000000 		.4byte	.LVL209-1
 7326 0bdf 24010000 		.4byte	.LVL228
 7327 0be3 0200     		.2byte	0x2
 7328 0be5 91       		.byte	0x91
 7329 0be6 64       		.sleb128 -28
 7330 0be7 24010000 		.4byte	.LVL228
 7331 0beb 28010000 		.4byte	.LFE81
 7332 0bef 0200     		.2byte	0x2
 7333 0bf1 7D       		.byte	0x7d
 7334 0bf2 64       		.sleb128 -28
 7335 0bf3 00000000 		.4byte	0
 7336 0bf7 00000000 		.4byte	0
 7337              	.LLST63:
 7338 0bfb 08000000 		.4byte	.LVL190
 7339 0bff 0C000000 		.4byte	.LVL191
 7340 0c03 0200     		.2byte	0x2
 7341 0c05 30       		.byte	0x30
 7342 0c06 9F       		.byte	0x9f
 7343 0c07 0C000000 		.4byte	.LVL191
 7344 0c0b 5C000000 		.4byte	.LVL202
 7345 0c0f 0100     		.2byte	0x1
 7346 0c11 55       		.byte	0x55
 7347 0c12 5C000000 		.4byte	.LVL202
 7348 0c16 5E000000 		.4byte	.LVL203
 7349 0c1a 0200     		.2byte	0x2
 7350 0c1c 31       		.byte	0x31
 7351 0c1d 9F       		.byte	0x9f
 7352 0c1e 5E000000 		.4byte	.LVL203
 7353 0c22 24010000 		.4byte	.LVL228
 7354 0c26 0100     		.2byte	0x1
 7355 0c28 55       		.byte	0x55
 7356 0c29 00000000 		.4byte	0
 7357 0c2d 00000000 		.4byte	0
 7358              	.LLST64:
 7359 0c31 08000000 		.4byte	.LVL190
 7360 0c35 0C000000 		.4byte	.LVL191
 7361 0c39 0100     		.2byte	0x1
 7362 0c3b 50       		.byte	0x50
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 188


 7363 0c3c 0C000000 		.4byte	.LVL191
 7364 0c40 24010000 		.4byte	.LVL228
 7365 0c44 0100     		.2byte	0x1
 7366 0c46 54       		.byte	0x54
 7367 0c47 24010000 		.4byte	.LVL228
 7368 0c4b 28010000 		.4byte	.LFE81
 7369 0c4f 0400     		.2byte	0x4
 7370 0c51 F3       		.byte	0xf3
 7371 0c52 01       		.uleb128 0x1
 7372 0c53 50       		.byte	0x50
 7373 0c54 9F       		.byte	0x9f
 7374 0c55 00000000 		.4byte	0
 7375 0c59 00000000 		.4byte	0
 7376              	.LLST65:
 7377 0c5d 08000000 		.4byte	.LVL190
 7378 0c61 0C000000 		.4byte	.LVL191
 7379 0c65 0200     		.2byte	0x2
 7380 0c67 30       		.byte	0x30
 7381 0c68 9F       		.byte	0x9f
 7382 0c69 0C000000 		.4byte	.LVL191
 7383 0c6d B4000000 		.4byte	.LVL213
 7384 0c71 0100     		.2byte	0x1
 7385 0c73 56       		.byte	0x56
 7386 0c74 B4000000 		.4byte	.LVL213
 7387 0c78 B7000000 		.4byte	.LVL214-1
 7388 0c7c 0100     		.2byte	0x1
 7389 0c7e 50       		.byte	0x50
 7390 0c7f B7000000 		.4byte	.LVL214-1
 7391 0c83 24010000 		.4byte	.LVL228
 7392 0c87 0100     		.2byte	0x1
 7393 0c89 56       		.byte	0x56
 7394 0c8a 00000000 		.4byte	0
 7395 0c8e 00000000 		.4byte	0
 7396              	.LLST66:
 7397 0c92 12000000 		.4byte	.LVL193
 7398 0c96 16000000 		.4byte	.LVL194
 7399 0c9a 0100     		.2byte	0x1
 7400 0c9c 53       		.byte	0x53
 7401 0c9d 16000000 		.4byte	.LVL194
 7402 0ca1 1A000000 		.4byte	.LVL195
 7403 0ca5 0300     		.2byte	0x3
 7404 0ca7 73       		.byte	0x73
 7405 0ca8 01       		.sleb128 1
 7406 0ca9 9F       		.byte	0x9f
 7407 0caa 1A000000 		.4byte	.LVL195
 7408 0cae 1F000000 		.4byte	.LVL196-1
 7409 0cb2 0600     		.2byte	0x6
 7410 0cb4 74       		.byte	0x74
 7411 0cb5 38       		.sleb128 56
 7412 0cb6 06       		.byte	0x6
 7413 0cb7 23       		.byte	0x23
 7414 0cb8 01       		.uleb128 0x1
 7415 0cb9 9F       		.byte	0x9f
 7416 0cba 48000000 		.4byte	.LVL199
 7417 0cbe 4A000000 		.4byte	.LVL200
 7418 0cc2 0100     		.2byte	0x1
 7419 0cc4 53       		.byte	0x53
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 189


 7420 0cc5 00000000 		.4byte	0
 7421 0cc9 00000000 		.4byte	0
 7422              	.LLST67:
 7423 0ccd 0E010000 		.4byte	.LVL224
 7424 0cd1 12010000 		.4byte	.LVL225
 7425 0cd5 0100     		.2byte	0x1
 7426 0cd7 50       		.byte	0x50
 7427 0cd8 12010000 		.4byte	.LVL225
 7428 0cdc 15010000 		.4byte	.LVL226-1
 7429 0ce0 0100     		.2byte	0x1
 7430 0ce2 51       		.byte	0x51
 7431 0ce3 00000000 		.4byte	0
 7432 0ce7 00000000 		.4byte	0
 7433              	.LLST68:
 7434 0ceb 00000000 		.4byte	.LVL229
 7435 0cef 0B000000 		.4byte	.LVL231-1
 7436 0cf3 0100     		.2byte	0x1
 7437 0cf5 50       		.byte	0x50
 7438 0cf6 0B000000 		.4byte	.LVL231-1
 7439 0cfa 30000000 		.4byte	.LFE75
 7440 0cfe 0100     		.2byte	0x1
 7441 0d00 54       		.byte	0x54
 7442 0d01 00000000 		.4byte	0
 7443 0d05 00000000 		.4byte	0
 7444              	.LLST69:
 7445 0d09 00000000 		.4byte	.LVL229
 7446 0d0d 0B000000 		.4byte	.LVL231-1
 7447 0d11 0100     		.2byte	0x1
 7448 0d13 51       		.byte	0x51
 7449 0d14 0B000000 		.4byte	.LVL231-1
 7450 0d18 30000000 		.4byte	.LFE75
 7451 0d1c 0100     		.2byte	0x1
 7452 0d1e 56       		.byte	0x56
 7453 0d1f 00000000 		.4byte	0
 7454 0d23 00000000 		.4byte	0
 7455              	.LLST70:
 7456 0d27 16000000 		.4byte	.LVL232
 7457 0d2b 1A000000 		.4byte	.LVL233
 7458 0d2f 0200     		.2byte	0x2
 7459 0d31 31       		.byte	0x31
 7460 0d32 9F       		.byte	0x9f
 7461 0d33 22000000 		.4byte	.LVL234
 7462 0d37 2C000000 		.4byte	.LVL235
 7463 0d3b 0100     		.2byte	0x1
 7464 0d3d 50       		.byte	0x50
 7465 0d3e 2C000000 		.4byte	.LVL235
 7466 0d42 30000000 		.4byte	.LFE75
 7467 0d46 0100     		.2byte	0x1
 7468 0d48 53       		.byte	0x53
 7469 0d49 00000000 		.4byte	0
 7470 0d4d 00000000 		.4byte	0
 7471              	.LLST71:
 7472 0d51 06000000 		.4byte	.LVL230
 7473 0d55 0B000000 		.4byte	.LVL231-1
 7474 0d59 0100     		.2byte	0x1
 7475 0d5b 50       		.byte	0x50
 7476 0d5c 0B000000 		.4byte	.LVL231-1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 190


 7477 0d60 30000000 		.4byte	.LFE75
 7478 0d64 0100     		.2byte	0x1
 7479 0d66 54       		.byte	0x54
 7480 0d67 00000000 		.4byte	0
 7481 0d6b 00000000 		.4byte	0
 7482              	.LLST72:
 7483 0d6f 00000000 		.4byte	.LVL236
 7484 0d73 0C000000 		.4byte	.LVL238
 7485 0d77 0100     		.2byte	0x1
 7486 0d79 50       		.byte	0x50
 7487 0d7a 0C000000 		.4byte	.LVL238
 7488 0d7e F2000000 		.4byte	.LVL266
 7489 0d82 0100     		.2byte	0x1
 7490 0d84 54       		.byte	0x54
 7491 0d85 F2000000 		.4byte	.LVL266
 7492 0d89 F8000000 		.4byte	.LFE82
 7493 0d8d 0400     		.2byte	0x4
 7494 0d8f F3       		.byte	0xf3
 7495 0d90 01       		.uleb128 0x1
 7496 0d91 50       		.byte	0x50
 7497 0d92 9F       		.byte	0x9f
 7498 0d93 00000000 		.4byte	0
 7499 0d97 00000000 		.4byte	0
 7500              	.LLST73:
 7501 0d9b 00000000 		.4byte	.LVL236
 7502 0d9f 0C000000 		.4byte	.LVL238
 7503 0da3 0100     		.2byte	0x1
 7504 0da5 51       		.byte	0x51
 7505 0da6 0C000000 		.4byte	.LVL238
 7506 0daa F2000000 		.4byte	.LVL266
 7507 0dae 0100     		.2byte	0x1
 7508 0db0 56       		.byte	0x56
 7509 0db1 F2000000 		.4byte	.LVL266
 7510 0db5 F8000000 		.4byte	.LFE82
 7511 0db9 0400     		.2byte	0x4
 7512 0dbb F3       		.byte	0xf3
 7513 0dbc 01       		.uleb128 0x1
 7514 0dbd 51       		.byte	0x51
 7515 0dbe 9F       		.byte	0x9f
 7516 0dbf 00000000 		.4byte	0
 7517 0dc3 00000000 		.4byte	0
 7518              	.LLST74:
 7519 0dc7 00000000 		.4byte	.LVL236
 7520 0dcb 0C000000 		.4byte	.LVL238
 7521 0dcf 0100     		.2byte	0x1
 7522 0dd1 52       		.byte	0x52
 7523 0dd2 0C000000 		.4byte	.LVL238
 7524 0dd6 92000000 		.4byte	.LVL254
 7525 0dda 0200     		.2byte	0x2
 7526 0ddc 91       		.byte	0x91
 7527 0ddd 64       		.sleb128 -28
 7528 0dde 92000000 		.4byte	.LVL254
 7529 0de2 97000000 		.4byte	.LVL255-1
 7530 0de6 0200     		.2byte	0x2
 7531 0de8 71       		.byte	0x71
 7532 0de9 00       		.sleb128 0
 7533 0dea 97000000 		.4byte	.LVL255-1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 191


 7534 0dee F2000000 		.4byte	.LVL266
 7535 0df2 0200     		.2byte	0x2
 7536 0df4 91       		.byte	0x91
 7537 0df5 64       		.sleb128 -28
 7538 0df6 F2000000 		.4byte	.LVL266
 7539 0dfa F8000000 		.4byte	.LFE82
 7540 0dfe 0200     		.2byte	0x2
 7541 0e00 7D       		.byte	0x7d
 7542 0e01 64       		.sleb128 -28
 7543 0e02 00000000 		.4byte	0
 7544 0e06 00000000 		.4byte	0
 7545              	.LLST75:
 7546 0e0a 0A000000 		.4byte	.LVL237
 7547 0e0e 0C000000 		.4byte	.LVL238
 7548 0e12 0200     		.2byte	0x2
 7549 0e14 30       		.byte	0x30
 7550 0e15 9F       		.byte	0x9f
 7551 0e16 0C000000 		.4byte	.LVL238
 7552 0e1a 16000000 		.4byte	.LVL241
 7553 0e1e 0100     		.2byte	0x1
 7554 0e20 55       		.byte	0x55
 7555 0e21 46000000 		.4byte	.LVL245
 7556 0e25 5A000000 		.4byte	.LVL248
 7557 0e29 0100     		.2byte	0x1
 7558 0e2b 55       		.byte	0x55
 7559 0e2c 5A000000 		.4byte	.LVL248
 7560 0e30 5C000000 		.4byte	.LVL249
 7561 0e34 0200     		.2byte	0x2
 7562 0e36 31       		.byte	0x31
 7563 0e37 9F       		.byte	0x9f
 7564 0e38 5C000000 		.4byte	.LVL249
 7565 0e3c EE000000 		.4byte	.LVL265
 7566 0e40 0100     		.2byte	0x1
 7567 0e42 55       		.byte	0x55
 7568 0e43 00000000 		.4byte	0
 7569 0e47 00000000 		.4byte	0
 7570              	.LLST76:
 7571 0e4b 16000000 		.4byte	.LVL241
 7572 0e4f 46000000 		.4byte	.LVL245
 7573 0e53 0100     		.2byte	0x1
 7574 0e55 55       		.byte	0x55
 7575 0e56 00000000 		.4byte	0
 7576 0e5a 00000000 		.4byte	0
 7577              	.LLST77:
 7578 0e5e 0A000000 		.4byte	.LVL237
 7579 0e62 0C000000 		.4byte	.LVL238
 7580 0e66 0100     		.2byte	0x1
 7581 0e68 50       		.byte	0x50
 7582 0e69 0C000000 		.4byte	.LVL238
 7583 0e6d F2000000 		.4byte	.LVL266
 7584 0e71 0100     		.2byte	0x1
 7585 0e73 54       		.byte	0x54
 7586 0e74 F2000000 		.4byte	.LVL266
 7587 0e78 F8000000 		.4byte	.LFE82
 7588 0e7c 0400     		.2byte	0x4
 7589 0e7e F3       		.byte	0xf3
 7590 0e7f 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 192


 7591 0e80 50       		.byte	0x50
 7592 0e81 9F       		.byte	0x9f
 7593 0e82 00000000 		.4byte	0
 7594 0e86 00000000 		.4byte	0
 7595              	.LLST78:
 7596 0e8a 12000000 		.4byte	.LVL240
 7597 0e8e 1D000000 		.4byte	.LVL242-1
 7598 0e92 0100     		.2byte	0x1
 7599 0e94 53       		.byte	0x53
 7600 0e95 46000000 		.4byte	.LVL245
 7601 0e99 48000000 		.4byte	.LVL246
 7602 0e9d 0100     		.2byte	0x1
 7603 0e9f 53       		.byte	0x53
 7604 0ea0 00000000 		.4byte	0
 7605 0ea4 00000000 		.4byte	0
 7606              	.LLST79:
 7607 0ea8 00000000 		.4byte	.LVL267
 7608 0eac 29000000 		.4byte	.LVL271-1
 7609 0eb0 0100     		.2byte	0x1
 7610 0eb2 50       		.byte	0x50
 7611 0eb3 29000000 		.4byte	.LVL271-1
 7612 0eb7 5C000000 		.4byte	.LVL276
 7613 0ebb 0100     		.2byte	0x1
 7614 0ebd 57       		.byte	0x57
 7615 0ebe 5C000000 		.4byte	.LVL276
 7616 0ec2 5E000000 		.4byte	.LVL277
 7617 0ec6 0100     		.2byte	0x1
 7618 0ec8 50       		.byte	0x50
 7619 0ec9 5E000000 		.4byte	.LVL277
 7620 0ecd 60000000 		.4byte	.LVL278
 7621 0ed1 0400     		.2byte	0x4
 7622 0ed3 F3       		.byte	0xf3
 7623 0ed4 01       		.uleb128 0x1
 7624 0ed5 50       		.byte	0x50
 7625 0ed6 9F       		.byte	0x9f
 7626 0ed7 60000000 		.4byte	.LVL278
 7627 0edb 6A000000 		.4byte	.LVL279
 7628 0edf 0100     		.2byte	0x1
 7629 0ee1 57       		.byte	0x57
 7630 0ee2 6A000000 		.4byte	.LVL279
 7631 0ee6 72000000 		.4byte	.LFE83
 7632 0eea 0400     		.2byte	0x4
 7633 0eec F3       		.byte	0xf3
 7634 0eed 01       		.uleb128 0x1
 7635 0eee 50       		.byte	0x50
 7636 0eef 9F       		.byte	0x9f
 7637 0ef0 00000000 		.4byte	0
 7638 0ef4 00000000 		.4byte	0
 7639              	.LLST80:
 7640 0ef8 00000000 		.4byte	.LVL267
 7641 0efc 29000000 		.4byte	.LVL271-1
 7642 0f00 0100     		.2byte	0x1
 7643 0f02 51       		.byte	0x51
 7644 0f03 29000000 		.4byte	.LVL271-1
 7645 0f07 5C000000 		.4byte	.LVL276
 7646 0f0b 0400     		.2byte	0x4
 7647 0f0d F3       		.byte	0xf3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 193


 7648 0f0e 01       		.uleb128 0x1
 7649 0f0f 51       		.byte	0x51
 7650 0f10 9F       		.byte	0x9f
 7651 0f11 5C000000 		.4byte	.LVL276
 7652 0f15 60000000 		.4byte	.LVL278
 7653 0f19 0100     		.2byte	0x1
 7654 0f1b 51       		.byte	0x51
 7655 0f1c 60000000 		.4byte	.LVL278
 7656 0f20 72000000 		.4byte	.LFE83
 7657 0f24 0400     		.2byte	0x4
 7658 0f26 F3       		.byte	0xf3
 7659 0f27 01       		.uleb128 0x1
 7660 0f28 51       		.byte	0x51
 7661 0f29 9F       		.byte	0x9f
 7662 0f2a 00000000 		.4byte	0
 7663 0f2e 00000000 		.4byte	0
 7664              	.LLST81:
 7665 0f32 00000000 		.4byte	.LVL267
 7666 0f36 29000000 		.4byte	.LVL271-1
 7667 0f3a 0100     		.2byte	0x1
 7668 0f3c 52       		.byte	0x52
 7669 0f3d 29000000 		.4byte	.LVL271-1
 7670 0f41 5C000000 		.4byte	.LVL276
 7671 0f45 0100     		.2byte	0x1
 7672 0f47 58       		.byte	0x58
 7673 0f48 5C000000 		.4byte	.LVL276
 7674 0f4c 60000000 		.4byte	.LVL278
 7675 0f50 0100     		.2byte	0x1
 7676 0f52 52       		.byte	0x52
 7677 0f53 60000000 		.4byte	.LVL278
 7678 0f57 6A000000 		.4byte	.LVL279
 7679 0f5b 0100     		.2byte	0x1
 7680 0f5d 58       		.byte	0x58
 7681 0f5e 6A000000 		.4byte	.LVL279
 7682 0f62 72000000 		.4byte	.LFE83
 7683 0f66 0400     		.2byte	0x4
 7684 0f68 F3       		.byte	0xf3
 7685 0f69 01       		.uleb128 0x1
 7686 0f6a 52       		.byte	0x52
 7687 0f6b 9F       		.byte	0x9f
 7688 0f6c 00000000 		.4byte	0
 7689 0f70 00000000 		.4byte	0
 7690              	.LLST82:
 7691 0f74 04000000 		.4byte	.LVL268
 7692 0f78 29000000 		.4byte	.LVL271-1
 7693 0f7c 0100     		.2byte	0x1
 7694 0f7e 50       		.byte	0x50
 7695 0f7f 29000000 		.4byte	.LVL271-1
 7696 0f83 5C000000 		.4byte	.LVL276
 7697 0f87 0100     		.2byte	0x1
 7698 0f89 57       		.byte	0x57
 7699 0f8a 5C000000 		.4byte	.LVL276
 7700 0f8e 5E000000 		.4byte	.LVL277
 7701 0f92 0100     		.2byte	0x1
 7702 0f94 50       		.byte	0x50
 7703 0f95 5E000000 		.4byte	.LVL277
 7704 0f99 60000000 		.4byte	.LVL278
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 194


 7705 0f9d 0400     		.2byte	0x4
 7706 0f9f F3       		.byte	0xf3
 7707 0fa0 01       		.uleb128 0x1
 7708 0fa1 50       		.byte	0x50
 7709 0fa2 9F       		.byte	0x9f
 7710 0fa3 60000000 		.4byte	.LVL278
 7711 0fa7 6A000000 		.4byte	.LVL279
 7712 0fab 0100     		.2byte	0x1
 7713 0fad 57       		.byte	0x57
 7714 0fae 6A000000 		.4byte	.LVL279
 7715 0fb2 72000000 		.4byte	.LFE83
 7716 0fb6 0400     		.2byte	0x4
 7717 0fb8 F3       		.byte	0xf3
 7718 0fb9 01       		.uleb128 0x1
 7719 0fba 50       		.byte	0x50
 7720 0fbb 9F       		.byte	0x9f
 7721 0fbc 00000000 		.4byte	0
 7722 0fc0 00000000 		.4byte	0
 7723              	.LLST83:
 7724 0fc4 1A000000 		.4byte	.LVL269
 7725 0fc8 2C000000 		.4byte	.LVL272
 7726 0fcc 0100     		.2byte	0x1
 7727 0fce 54       		.byte	0x54
 7728 0fcf 2C000000 		.4byte	.LVL272
 7729 0fd3 5C000000 		.4byte	.LVL276
 7730 0fd7 0300     		.2byte	0x3
 7731 0fd9 74       		.byte	0x74
 7732 0fda 01       		.sleb128 1
 7733 0fdb 9F       		.byte	0x9f
 7734 0fdc 5C000000 		.4byte	.LVL276
 7735 0fe0 60000000 		.4byte	.LVL278
 7736 0fe4 0100     		.2byte	0x1
 7737 0fe6 54       		.byte	0x54
 7738 0fe7 60000000 		.4byte	.LVL278
 7739 0feb 6A000000 		.4byte	.LVL279
 7740 0fef 0300     		.2byte	0x3
 7741 0ff1 74       		.byte	0x74
 7742 0ff2 01       		.sleb128 1
 7743 0ff3 9F       		.byte	0x9f
 7744 0ff4 00000000 		.4byte	0
 7745 0ff8 00000000 		.4byte	0
 7746              	.LLST84:
 7747 0ffc 26000000 		.4byte	.LVL270
 7748 1000 52000000 		.4byte	.LVL274
 7749 1004 0100     		.2byte	0x1
 7750 1006 55       		.byte	0x55
 7751 1007 52000000 		.4byte	.LVL274
 7752 100b 54000000 		.4byte	.LVL275
 7753 100f 0300     		.2byte	0x3
 7754 1011 75       		.byte	0x75
 7755 1012 7F       		.sleb128 -1
 7756 1013 9F       		.byte	0x9f
 7757 1014 60000000 		.4byte	.LVL278
 7758 1018 6A000000 		.4byte	.LVL279
 7759 101c 0100     		.2byte	0x1
 7760 101e 55       		.byte	0x55
 7761 101f 00000000 		.4byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 195


 7762 1023 00000000 		.4byte	0
 7763              	.LLST85:
 7764 1027 6A000000 		.4byte	.LVL279
 7765 102b 6E000000 		.4byte	.LVL280
 7766 102f 0100     		.2byte	0x1
 7767 1031 56       		.byte	0x56
 7768 1032 00000000 		.4byte	0
 7769 1036 00000000 		.4byte	0
 7770              	.LLST86:
 7771 103a 00000000 		.4byte	.LVL281
 7772 103e 21000000 		.4byte	.LVL284-1
 7773 1042 0100     		.2byte	0x1
 7774 1044 50       		.byte	0x50
 7775 1045 21000000 		.4byte	.LVL284-1
 7776 1049 28000000 		.4byte	.LVL286
 7777 104d 0100     		.2byte	0x1
 7778 104f 54       		.byte	0x54
 7779 1050 28000000 		.4byte	.LVL286
 7780 1054 2A000000 		.4byte	.LVL287
 7781 1058 0100     		.2byte	0x1
 7782 105a 50       		.byte	0x50
 7783 105b 2A000000 		.4byte	.LVL287
 7784 105f 30000000 		.4byte	.LFE84
 7785 1063 0400     		.2byte	0x4
 7786 1065 F3       		.byte	0xf3
 7787 1066 01       		.uleb128 0x1
 7788 1067 50       		.byte	0x50
 7789 1068 9F       		.byte	0x9f
 7790 1069 00000000 		.4byte	0
 7791 106d 00000000 		.4byte	0
 7792              	.LLST87:
 7793 1071 00000000 		.4byte	.LVL281
 7794 1075 21000000 		.4byte	.LVL284-1
 7795 1079 0100     		.2byte	0x1
 7796 107b 51       		.byte	0x51
 7797 107c 21000000 		.4byte	.LVL284-1
 7798 1080 28000000 		.4byte	.LVL286
 7799 1084 0400     		.2byte	0x4
 7800 1086 F3       		.byte	0xf3
 7801 1087 01       		.uleb128 0x1
 7802 1088 51       		.byte	0x51
 7803 1089 9F       		.byte	0x9f
 7804 108a 28000000 		.4byte	.LVL286
 7805 108e 2A000000 		.4byte	.LVL287
 7806 1092 0100     		.2byte	0x1
 7807 1094 51       		.byte	0x51
 7808 1095 2A000000 		.4byte	.LVL287
 7809 1099 30000000 		.4byte	.LFE84
 7810 109d 0400     		.2byte	0x4
 7811 109f F3       		.byte	0xf3
 7812 10a0 01       		.uleb128 0x1
 7813 10a1 51       		.byte	0x51
 7814 10a2 9F       		.byte	0x9f
 7815 10a3 00000000 		.4byte	0
 7816 10a7 00000000 		.4byte	0
 7817              	.LLST88:
 7818 10ab 24000000 		.4byte	.LVL285
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 196


 7819 10af 28000000 		.4byte	.LVL286
 7820 10b3 0200     		.2byte	0x2
 7821 10b5 31       		.byte	0x31
 7822 10b6 9F       		.byte	0x9f
 7823 10b7 2A000000 		.4byte	.LVL287
 7824 10bb 30000000 		.4byte	.LFE84
 7825 10bf 0100     		.2byte	0x1
 7826 10c1 50       		.byte	0x50
 7827 10c2 00000000 		.4byte	0
 7828 10c6 00000000 		.4byte	0
 7829              	.LLST89:
 7830 10ca 1E000000 		.4byte	.LVL283
 7831 10ce 28000000 		.4byte	.LVL286
 7832 10d2 0100     		.2byte	0x1
 7833 10d4 56       		.byte	0x56
 7834 10d5 00000000 		.4byte	0
 7835 10d9 00000000 		.4byte	0
 7836              	.LLST90:
 7837 10dd 02000000 		.4byte	.LVL282
 7838 10e1 21000000 		.4byte	.LVL284-1
 7839 10e5 0100     		.2byte	0x1
 7840 10e7 50       		.byte	0x50
 7841 10e8 21000000 		.4byte	.LVL284-1
 7842 10ec 28000000 		.4byte	.LVL286
 7843 10f0 0100     		.2byte	0x1
 7844 10f2 54       		.byte	0x54
 7845 10f3 28000000 		.4byte	.LVL286
 7846 10f7 2A000000 		.4byte	.LVL287
 7847 10fb 0100     		.2byte	0x1
 7848 10fd 50       		.byte	0x50
 7849 10fe 2A000000 		.4byte	.LVL287
 7850 1102 30000000 		.4byte	.LFE84
 7851 1106 0400     		.2byte	0x4
 7852 1108 F3       		.byte	0xf3
 7853 1109 01       		.uleb128 0x1
 7854 110a 50       		.byte	0x50
 7855 110b 9F       		.byte	0x9f
 7856 110c 00000000 		.4byte	0
 7857 1110 00000000 		.4byte	0
 7858              	.LLST91:
 7859 1114 2A000000 		.4byte	.LVL287
 7860 1118 2E000000 		.4byte	.LVL288
 7861 111c 0100     		.2byte	0x1
 7862 111e 55       		.byte	0x55
 7863 111f 00000000 		.4byte	0
 7864 1123 00000000 		.4byte	0
 7865              	.LLST92:
 7866 1127 00000000 		.4byte	.LVL289
 7867 112b 07000000 		.4byte	.LVL290-1
 7868 112f 0100     		.2byte	0x1
 7869 1131 50       		.byte	0x50
 7870 1132 07000000 		.4byte	.LVL290-1
 7871 1136 0A000000 		.4byte	.LVL291
 7872 113a 0100     		.2byte	0x1
 7873 113c 54       		.byte	0x54
 7874 113d 0A000000 		.4byte	.LVL291
 7875 1141 12000000 		.4byte	.LFE85
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 197


 7876 1145 0400     		.2byte	0x4
 7877 1147 F3       		.byte	0xf3
 7878 1148 01       		.uleb128 0x1
 7879 1149 50       		.byte	0x50
 7880 114a 9F       		.byte	0x9f
 7881 114b 00000000 		.4byte	0
 7882 114f 00000000 		.4byte	0
 7883              	.LLST93:
 7884 1153 00000000 		.4byte	.LVL293
 7885 1157 07000000 		.4byte	.LVL295-1
 7886 115b 0100     		.2byte	0x1
 7887 115d 50       		.byte	0x50
 7888 115e 07000000 		.4byte	.LVL295-1
 7889 1162 0C000000 		.4byte	.LVL296
 7890 1166 0100     		.2byte	0x1
 7891 1168 54       		.byte	0x54
 7892 1169 0C000000 		.4byte	.LVL296
 7893 116d 16000000 		.4byte	.LFE86
 7894 1171 0400     		.2byte	0x4
 7895 1173 F3       		.byte	0xf3
 7896 1174 01       		.uleb128 0x1
 7897 1175 50       		.byte	0x50
 7898 1176 9F       		.byte	0x9f
 7899 1177 00000000 		.4byte	0
 7900 117b 00000000 		.4byte	0
 7901              	.LLST94:
 7902 117f 04000000 		.4byte	.LVL294
 7903 1183 07000000 		.4byte	.LVL295-1
 7904 1187 0100     		.2byte	0x1
 7905 1189 50       		.byte	0x50
 7906 118a 07000000 		.4byte	.LVL295-1
 7907 118e 0C000000 		.4byte	.LVL296
 7908 1192 0100     		.2byte	0x1
 7909 1194 54       		.byte	0x54
 7910 1195 0C000000 		.4byte	.LVL296
 7911 1199 16000000 		.4byte	.LFE86
 7912 119d 0400     		.2byte	0x4
 7913 119f F3       		.byte	0xf3
 7914 11a0 01       		.uleb128 0x1
 7915 11a1 50       		.byte	0x50
 7916 11a2 9F       		.byte	0x9f
 7917 11a3 00000000 		.4byte	0
 7918 11a7 00000000 		.4byte	0
 7919              	.LLST95:
 7920 11ab 00000000 		.4byte	.LVL299
 7921 11af 02000000 		.4byte	.LVL300
 7922 11b3 0100     		.2byte	0x1
 7923 11b5 50       		.byte	0x50
 7924 11b6 02000000 		.4byte	.LVL300
 7925 11ba 04000000 		.4byte	.LFE87
 7926 11be 0400     		.2byte	0x4
 7927 11c0 F3       		.byte	0xf3
 7928 11c1 01       		.uleb128 0x1
 7929 11c2 50       		.byte	0x50
 7930 11c3 9F       		.byte	0x9f
 7931 11c4 00000000 		.4byte	0
 7932 11c8 00000000 		.4byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 198


 7933              	.LLST96:
 7934 11cc 00000000 		.4byte	.LVL301
 7935 11d0 06000000 		.4byte	.LVL302
 7936 11d4 0100     		.2byte	0x1
 7937 11d6 50       		.byte	0x50
 7938 11d7 06000000 		.4byte	.LVL302
 7939 11db 08000000 		.4byte	.LVL303
 7940 11df 0400     		.2byte	0x4
 7941 11e1 F3       		.byte	0xf3
 7942 11e2 01       		.uleb128 0x1
 7943 11e3 50       		.byte	0x50
 7944 11e4 9F       		.byte	0x9f
 7945 11e5 08000000 		.4byte	.LVL303
 7946 11e9 0A000000 		.4byte	.LVL304
 7947 11ed 0100     		.2byte	0x1
 7948 11ef 50       		.byte	0x50
 7949 11f0 0A000000 		.4byte	.LVL304
 7950 11f4 0C000000 		.4byte	.LFE94
 7951 11f8 0400     		.2byte	0x4
 7952 11fa F3       		.byte	0xf3
 7953 11fb 01       		.uleb128 0x1
 7954 11fc 50       		.byte	0x50
 7955 11fd 9F       		.byte	0x9f
 7956 11fe 00000000 		.4byte	0
 7957 1202 00000000 		.4byte	0
 7958              	.LLST97:
 7959 1206 00000000 		.4byte	.LVL305
 7960 120a 0A000000 		.4byte	.LVL306
 7961 120e 0100     		.2byte	0x1
 7962 1210 50       		.byte	0x50
 7963 1211 0A000000 		.4byte	.LVL306
 7964 1215 0C000000 		.4byte	.LVL307
 7965 1219 0400     		.2byte	0x4
 7966 121b F3       		.byte	0xf3
 7967 121c 01       		.uleb128 0x1
 7968 121d 50       		.byte	0x50
 7969 121e 9F       		.byte	0x9f
 7970 121f 0C000000 		.4byte	.LVL307
 7971 1223 0E000000 		.4byte	.LVL308
 7972 1227 0100     		.2byte	0x1
 7973 1229 50       		.byte	0x50
 7974 122a 0E000000 		.4byte	.LVL308
 7975 122e 10000000 		.4byte	.LFE96
 7976 1232 0400     		.2byte	0x4
 7977 1234 F3       		.byte	0xf3
 7978 1235 01       		.uleb128 0x1
 7979 1236 50       		.byte	0x50
 7980 1237 9F       		.byte	0x9f
 7981 1238 00000000 		.4byte	0
 7982 123c 00000000 		.4byte	0
 7983              	.LLST98:
 7984 1240 00000000 		.4byte	.LVL309
 7985 1244 04000000 		.4byte	.LVL310
 7986 1248 0200     		.2byte	0x2
 7987 124a 30       		.byte	0x30
 7988 124b 9F       		.byte	0x9f
 7989 124c 04000000 		.4byte	.LVL310
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 199


 7990 1250 16000000 		.4byte	.LVL311
 7991 1254 0100     		.2byte	0x1
 7992 1256 53       		.byte	0x53
 7993 1257 1A000000 		.4byte	.LVL312
 7994 125b 28000000 		.4byte	.LFE97
 7995 125f 0100     		.2byte	0x1
 7996 1261 53       		.byte	0x53
 7997 1262 00000000 		.4byte	0
 7998 1266 00000000 		.4byte	0
 7999              	.LLST99:
 8000 126a 00000000 		.4byte	.LVL314
 8001 126e 16000000 		.4byte	.LVL316
 8002 1272 0100     		.2byte	0x1
 8003 1274 50       		.byte	0x50
 8004 1275 16000000 		.4byte	.LVL316
 8005 1279 18000000 		.4byte	.LVL317
 8006 127d 0400     		.2byte	0x4
 8007 127f F3       		.byte	0xf3
 8008 1280 01       		.uleb128 0x1
 8009 1281 50       		.byte	0x50
 8010 1282 9F       		.byte	0x9f
 8011 1283 18000000 		.4byte	.LVL317
 8012 1287 20000000 		.4byte	.LVL319
 8013 128b 0100     		.2byte	0x1
 8014 128d 50       		.byte	0x50
 8015 128e 20000000 		.4byte	.LVL319
 8016 1292 28000000 		.4byte	.LFE98
 8017 1296 0400     		.2byte	0x4
 8018 1298 F3       		.byte	0xf3
 8019 1299 01       		.uleb128 0x1
 8020 129a 50       		.byte	0x50
 8021 129b 9F       		.byte	0x9f
 8022 129c 00000000 		.4byte	0
 8023 12a0 00000000 		.4byte	0
 8024              	.LLST100:
 8025 12a4 00000000 		.4byte	.LVL314
 8026 12a8 04000000 		.4byte	.LVL315
 8027 12ac 0200     		.2byte	0x2
 8028 12ae 30       		.byte	0x30
 8029 12af 9F       		.byte	0x9f
 8030 12b0 04000000 		.4byte	.LVL315
 8031 12b4 28000000 		.4byte	.LFE98
 8032 12b8 0100     		.2byte	0x1
 8033 12ba 53       		.byte	0x53
 8034 12bb 00000000 		.4byte	0
 8035 12bf 00000000 		.4byte	0
 8036              	.LLST101:
 8037 12c3 00000000 		.4byte	.LVL314
 8038 12c7 16000000 		.4byte	.LVL316
 8039 12cb 0200     		.2byte	0x2
 8040 12cd 30       		.byte	0x30
 8041 12ce 9F       		.byte	0x9f
 8042 12cf 16000000 		.4byte	.LVL316
 8043 12d3 18000000 		.4byte	.LVL317
 8044 12d7 0100     		.2byte	0x1
 8045 12d9 50       		.byte	0x50
 8046 12da 18000000 		.4byte	.LVL317
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 200


 8047 12de 20000000 		.4byte	.LVL319
 8048 12e2 0200     		.2byte	0x2
 8049 12e4 30       		.byte	0x30
 8050 12e5 9F       		.byte	0x9f
 8051 12e6 20000000 		.4byte	.LVL319
 8052 12ea 28000000 		.4byte	.LFE98
 8053 12ee 0100     		.2byte	0x1
 8054 12f0 50       		.byte	0x50
 8055 12f1 00000000 		.4byte	0
 8056 12f5 00000000 		.4byte	0
 8057              	.LLST102:
 8058 12f9 00000000 		.4byte	.LVL320
 8059 12fd 04000000 		.4byte	.LVL321
 8060 1301 0200     		.2byte	0x2
 8061 1303 30       		.byte	0x30
 8062 1304 9F       		.byte	0x9f
 8063 1305 04000000 		.4byte	.LVL321
 8064 1309 1C000000 		.4byte	.LVL322
 8065 130d 0100     		.2byte	0x1
 8066 130f 53       		.byte	0x53
 8067 1310 20000000 		.4byte	.LVL323
 8068 1314 2C000000 		.4byte	.LFE99
 8069 1318 0100     		.2byte	0x1
 8070 131a 53       		.byte	0x53
 8071 131b 00000000 		.4byte	0
 8072 131f 00000000 		.4byte	0
 8073              	.LLST103:
 8074 1323 00000000 		.4byte	.LVL325
 8075 1327 07000000 		.4byte	.LVL327-1
 8076 132b 0100     		.2byte	0x1
 8077 132d 50       		.byte	0x50
 8078 132e 07000000 		.4byte	.LVL327-1
 8079 1332 10000000 		.4byte	.LFE88
 8080 1336 0100     		.2byte	0x1
 8081 1338 54       		.byte	0x54
 8082 1339 00000000 		.4byte	0
 8083 133d 00000000 		.4byte	0
 8084              	.LLST104:
 8085 1341 04000000 		.4byte	.LVL326
 8086 1345 07000000 		.4byte	.LVL327-1
 8087 1349 0100     		.2byte	0x1
 8088 134b 50       		.byte	0x50
 8089 134c 07000000 		.4byte	.LVL327-1
 8090 1350 10000000 		.4byte	.LFE88
 8091 1354 0100     		.2byte	0x1
 8092 1356 54       		.byte	0x54
 8093 1357 00000000 		.4byte	0
 8094 135b 00000000 		.4byte	0
 8095              		.section	.debug_aranges,"",%progbits
 8096 0000 0C010000 		.4byte	0x10c
 8097 0004 0200     		.2byte	0x2
 8098 0006 00000000 		.4byte	.Ldebug_info0
 8099 000a 04       		.byte	0x4
 8100 000b 00       		.byte	0
 8101 000c 0000     		.2byte	0
 8102 000e 0000     		.2byte	0
 8103 0010 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 201


 8104 0014 12000000 		.4byte	.LFE89-.LFB89
 8105 0018 00000000 		.4byte	.LFB95
 8106 001c 1E000000 		.4byte	.LFE95-.LFB95
 8107 0020 00000000 		.4byte	.LFB93
 8108 0024 1A000000 		.4byte	.LFE93-.LFB93
 8109 0028 00000000 		.4byte	.LFB90
 8110 002c 76000000 		.4byte	.LFE90-.LFB90
 8111 0030 00000000 		.4byte	.LFB91
 8112 0034 24000000 		.4byte	.LFE91-.LFB91
 8113 0038 00000000 		.4byte	.LFB92
 8114 003c 66000000 		.4byte	.LFE92-.LFB92
 8115 0040 00000000 		.4byte	.LFB69
 8116 0044 6C000000 		.4byte	.LFE69-.LFB69
 8117 0048 00000000 		.4byte	.LFB71
 8118 004c 1C000000 		.4byte	.LFE71-.LFB71
 8119 0050 00000000 		.4byte	.LFB70
 8120 0054 34000000 		.4byte	.LFE70-.LFB70
 8121 0058 00000000 		.4byte	.LFB76
 8122 005c 16000000 		.4byte	.LFE76-.LFB76
 8123 0060 00000000 		.4byte	.LFB77
 8124 0064 08010000 		.4byte	.LFE77-.LFB77
 8125 0068 00000000 		.4byte	.LFB72
 8126 006c 18000000 		.4byte	.LFE72-.LFB72
 8127 0070 00000000 		.4byte	.LFB73
 8128 0074 16000000 		.4byte	.LFE73-.LFB73
 8129 0078 00000000 		.4byte	.LFB74
 8130 007c 2C000000 		.4byte	.LFE74-.LFB74
 8131 0080 00000000 		.4byte	.LFB78
 8132 0084 6E000000 		.4byte	.LFE78-.LFB78
 8133 0088 00000000 		.4byte	.LFB79
 8134 008c 64000000 		.4byte	.LFE79-.LFB79
 8135 0090 00000000 		.4byte	.LFB80
 8136 0094 F8000000 		.4byte	.LFE80-.LFB80
 8137 0098 00000000 		.4byte	.LFB81
 8138 009c 28010000 		.4byte	.LFE81-.LFB81
 8139 00a0 00000000 		.4byte	.LFB75
 8140 00a4 30000000 		.4byte	.LFE75-.LFB75
 8141 00a8 00000000 		.4byte	.LFB82
 8142 00ac F8000000 		.4byte	.LFE82-.LFB82
 8143 00b0 00000000 		.4byte	.LFB83
 8144 00b4 72000000 		.4byte	.LFE83-.LFB83
 8145 00b8 00000000 		.4byte	.LFB84
 8146 00bc 30000000 		.4byte	.LFE84-.LFB84
 8147 00c0 00000000 		.4byte	.LFB85
 8148 00c4 12000000 		.4byte	.LFE85-.LFB85
 8149 00c8 00000000 		.4byte	.LFB86
 8150 00cc 16000000 		.4byte	.LFE86-.LFB86
 8151 00d0 00000000 		.4byte	.LFB87
 8152 00d4 04000000 		.4byte	.LFE87-.LFB87
 8153 00d8 00000000 		.4byte	.LFB94
 8154 00dc 0C000000 		.4byte	.LFE94-.LFB94
 8155 00e0 00000000 		.4byte	.LFB96
 8156 00e4 10000000 		.4byte	.LFE96-.LFB96
 8157 00e8 00000000 		.4byte	.LFB97
 8158 00ec 28000000 		.4byte	.LFE97-.LFB97
 8159 00f0 00000000 		.4byte	.LFB98
 8160 00f4 28000000 		.4byte	.LFE98-.LFB98
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 202


 8161 00f8 00000000 		.4byte	.LFB99
 8162 00fc 2C000000 		.4byte	.LFE99-.LFB99
 8163 0100 00000000 		.4byte	.LFB88
 8164 0104 10000000 		.4byte	.LFE88-.LFB88
 8165 0108 00000000 		.4byte	0
 8166 010c 00000000 		.4byte	0
 8167              		.section	.debug_ranges,"",%progbits
 8168              	.Ldebug_ranges0:
 8169 0000 26000000 		.4byte	.LBB27
 8170 0004 5A000000 		.4byte	.LBE27
 8171 0008 5E000000 		.4byte	.LBB28
 8172 000c 68000000 		.4byte	.LBE28
 8173 0010 00000000 		.4byte	0
 8174 0014 00000000 		.4byte	0
 8175 0018 1E000000 		.4byte	.LBB34
 8176 001c 50000000 		.4byte	.LBE34
 8177 0020 54000000 		.4byte	.LBB35
 8178 0024 5E000000 		.4byte	.LBE35
 8179 0028 00000000 		.4byte	0
 8180 002c 00000000 		.4byte	0
 8181 0030 20000000 		.4byte	.LBB45
 8182 0034 5C000000 		.4byte	.LBE45
 8183 0038 60000000 		.4byte	.LBB46
 8184 003c 6A000000 		.4byte	.LBE46
 8185 0040 00000000 		.4byte	0
 8186 0044 00000000 		.4byte	0
 8187 0048 00000000 		.4byte	.LFB89
 8188 004c 12000000 		.4byte	.LFE89
 8189 0050 00000000 		.4byte	.LFB95
 8190 0054 1E000000 		.4byte	.LFE95
 8191 0058 00000000 		.4byte	.LFB93
 8192 005c 1A000000 		.4byte	.LFE93
 8193 0060 00000000 		.4byte	.LFB90
 8194 0064 76000000 		.4byte	.LFE90
 8195 0068 00000000 		.4byte	.LFB91
 8196 006c 24000000 		.4byte	.LFE91
 8197 0070 00000000 		.4byte	.LFB92
 8198 0074 66000000 		.4byte	.LFE92
 8199 0078 00000000 		.4byte	.LFB69
 8200 007c 6C000000 		.4byte	.LFE69
 8201 0080 00000000 		.4byte	.LFB71
 8202 0084 1C000000 		.4byte	.LFE71
 8203 0088 00000000 		.4byte	.LFB70
 8204 008c 34000000 		.4byte	.LFE70
 8205 0090 00000000 		.4byte	.LFB76
 8206 0094 16000000 		.4byte	.LFE76
 8207 0098 00000000 		.4byte	.LFB77
 8208 009c 08010000 		.4byte	.LFE77
 8209 00a0 00000000 		.4byte	.LFB72
 8210 00a4 18000000 		.4byte	.LFE72
 8211 00a8 00000000 		.4byte	.LFB73
 8212 00ac 16000000 		.4byte	.LFE73
 8213 00b0 00000000 		.4byte	.LFB74
 8214 00b4 2C000000 		.4byte	.LFE74
 8215 00b8 00000000 		.4byte	.LFB78
 8216 00bc 6E000000 		.4byte	.LFE78
 8217 00c0 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 203


 8218 00c4 64000000 		.4byte	.LFE79
 8219 00c8 00000000 		.4byte	.LFB80
 8220 00cc F8000000 		.4byte	.LFE80
 8221 00d0 00000000 		.4byte	.LFB81
 8222 00d4 28010000 		.4byte	.LFE81
 8223 00d8 00000000 		.4byte	.LFB75
 8224 00dc 30000000 		.4byte	.LFE75
 8225 00e0 00000000 		.4byte	.LFB82
 8226 00e4 F8000000 		.4byte	.LFE82
 8227 00e8 00000000 		.4byte	.LFB83
 8228 00ec 72000000 		.4byte	.LFE83
 8229 00f0 00000000 		.4byte	.LFB84
 8230 00f4 30000000 		.4byte	.LFE84
 8231 00f8 00000000 		.4byte	.LFB85
 8232 00fc 12000000 		.4byte	.LFE85
 8233 0100 00000000 		.4byte	.LFB86
 8234 0104 16000000 		.4byte	.LFE86
 8235 0108 00000000 		.4byte	.LFB87
 8236 010c 04000000 		.4byte	.LFE87
 8237 0110 00000000 		.4byte	.LFB94
 8238 0114 0C000000 		.4byte	.LFE94
 8239 0118 00000000 		.4byte	.LFB96
 8240 011c 10000000 		.4byte	.LFE96
 8241 0120 00000000 		.4byte	.LFB97
 8242 0124 28000000 		.4byte	.LFE97
 8243 0128 00000000 		.4byte	.LFB98
 8244 012c 28000000 		.4byte	.LFE98
 8245 0130 00000000 		.4byte	.LFB99
 8246 0134 2C000000 		.4byte	.LFE99
 8247 0138 00000000 		.4byte	.LFB88
 8248 013c 10000000 		.4byte	.LFE88
 8249 0140 00000000 		.4byte	0
 8250 0144 00000000 		.4byte	0
 8251              		.section	.debug_line,"",%progbits
 8252              	.Ldebug_line0:
 8253 0000 EF060000 		.section	.debug_str,"MS",%progbits,1
 8253      02003F02 
 8253      00000201 
 8253      FB0E0D00 
 8253      01010101 
 8254              	.LASF36:
 8255 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 8255      6D626572 
 8255      4F664974 
 8255      656D7300 
 8256              	.LASF133:
 8257 0010 76506F72 		.ascii	"vPortExitCritical\000"
 8257      74457869 
 8257      74437269 
 8257      74696361 
 8257      6C00
 8258              	.LASF109:
 8259 0022 78517565 		.ascii	"xQueueReceive\000"
 8259      75655265 
 8259      63656976 
 8259      6500
 8260              	.LASF117:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 204


 8261 0030 78517565 		.ascii	"xQueueReceiveFromISR\000"
 8261      75655265 
 8261      63656976 
 8261      6546726F 
 8261      6D495352 
 8262              	.LASF52:
 8263 0045 78546173 		.ascii	"xTasksWaitingToReceive\000"
 8263      6B735761 
 8263      6974696E 
 8263      67546F52 
 8263      65636569 
 8264              	.LASF106:
 8265 005c 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 8265      67686572 
 8265      5072696F 
 8265      72697479 
 8265      5461736B 
 8266              	.LASF104:
 8267 0076 70784D75 		.ascii	"pxMutex\000"
 8267      74657800 
 8268              	.LASF110:
 8269 007e 78517565 		.ascii	"xQueueSemaphoreTake\000"
 8269      75655365 
 8269      6D617068 
 8269      6F726554 
 8269      616B6500 
 8270              	.LASF0:
 8271 0092 756E7369 		.ascii	"unsigned int\000"
 8271      676E6564 
 8271      20696E74 
 8271      00
 8272              	.LASF150:
 8273 009f 2E2E5C46 		.ascii	"..\\FreeRTOS\\queue.c\000"
 8273      72656552 
 8273      544F535C 
 8273      71756575 
 8273      652E6300 
 8274              	.LASF37:
 8275 00b3 7078496E 		.ascii	"pxIndex\000"
 8275      64657800 
 8276              	.LASF40:
 8277 00bb 7854494D 		.ascii	"xTIME_OUT\000"
 8277      455F4F55 
 8277      5400
 8278              	.LASF85:
 8279 00c5 70784E65 		.ascii	"pxNewQueue\000"
 8279      77517565 
 8279      756500
 8280              	.LASF10:
 8281 00d0 5F5F696E 		.ascii	"__int32_t\000"
 8281      7433325F 
 8281      7400
 8282              	.LASF32:
 8283 00da 784C4953 		.ascii	"xLIST_ITEM\000"
 8283      545F4954 
 8283      454D00
 8284              	.LASF60:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 205


 8285 00e5 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 8285      455F5245 
 8285      47495354 
 8285      52595F49 
 8285      54454D00 
 8286              	.LASF51:
 8287 00f9 78546173 		.ascii	"xTasksWaitingToSend\000"
 8287      6B735761 
 8287      6974696E 
 8287      67546F53 
 8287      656E6400 
 8288              	.LASF121:
 8289 010d 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 8289      65756553 
 8289      70616365 
 8289      73417661 
 8289      696C6162 
 8290              	.LASF57:
 8291 0124 6354784C 		.ascii	"cTxLock\000"
 8291      6F636B00 
 8292              	.LASF41:
 8293 012c 784F7665 		.ascii	"xOverflowCount\000"
 8293      72666C6F 
 8293      77436F75 
 8293      6E7400
 8294              	.LASF132:
 8295 013b 76506F72 		.ascii	"vPortEnterCritical\000"
 8295      74456E74 
 8295      65724372 
 8295      69746963 
 8295      616C00
 8296              	.LASF46:
 8297 014e 75785265 		.ascii	"uxRecursiveCallCount\000"
 8297      63757273 
 8297      69766543 
 8297      616C6C43 
 8297      6F756E74 
 8298              	.LASF59:
 8299 0163 51756575 		.ascii	"Queue_t\000"
 8299      655F7400 
 8300              	.LASF94:
 8301 016b 78436F70 		.ascii	"xCopyPosition\000"
 8301      79506F73 
 8301      6974696F 
 8301      6E00
 8302              	.LASF120:
 8303 0179 75785265 		.ascii	"uxReturn\000"
 8303      7475726E 
 8303      00
 8304              	.LASF64:
 8305 0182 51756575 		.ascii	"QueueRegistryItem_t\000"
 8305      65526567 
 8305      69737472 
 8305      79497465 
 8305      6D5F7400 
 8306              	.LASF129:
 8307 0196 76517565 		.ascii	"vQueueDelete\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 206


 8307      75654465 
 8307      6C657465 
 8307      00
 8308              	.LASF45:
 8309 01a3 70635265 		.ascii	"pcReadFrom\000"
 8309      61644672 
 8309      6F6D00
 8310              	.LASF128:
 8311 01ae 76517565 		.ascii	"vQueueUnregisterQueue\000"
 8311      7565556E 
 8311      72656769 
 8311      73746572 
 8311      51756575 
 8312              	.LASF107:
 8313 01c4 75785361 		.ascii	"uxSavedInterruptStatus\000"
 8313      76656449 
 8313      6E746572 
 8313      72757074 
 8313      53746174 
 8314              	.LASF151:
 8315 01db 433A5C55 		.ascii	"C:\\Users\\Tri94\\Documents\\PSoC Creator\\EE4450\\"
 8315      73657273 
 8315      5C547269 
 8315      39345C44 
 8315      6F63756D 
 8316 0208 45453434 		.ascii	"EE4450-Projects\\RTOS_UART_Project_Psoc2_TEST.cydsn"
 8316      35302D50 
 8316      726F6A65 
 8316      6374735C 
 8316      52544F53 
 8317 023a 00       		.ascii	"\000"
 8318              	.LASF20:
 8319 023b 75696E74 		.ascii	"uint32_t\000"
 8319      33325F74 
 8319      00
 8320              	.LASF17:
 8321 0244 696E7438 		.ascii	"int8_t\000"
 8321      5F7400
 8322              	.LASF101:
 8323 024b 75784D75 		.ascii	"uxMutexSize\000"
 8323      74657853 
 8323      697A6500 
 8324              	.LASF96:
 8325 0257 78596965 		.ascii	"xYieldRequired\000"
 8325      6C645265 
 8325      71756972 
 8325      656400
 8326              	.LASF65:
 8327 0266 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 8327      6967696E 
 8327      616C4241 
 8327      53455052 
 8327      4900
 8328              	.LASF79:
 8329 0278 78517565 		.ascii	"xQueue\000"
 8329      756500
 8330              	.LASF21:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 207


 8331 027f 666C6F61 		.ascii	"float\000"
 8331      7400
 8332              	.LASF47:
 8333 0285 51756575 		.ascii	"QueueDefinition\000"
 8333      65446566 
 8333      696E6974 
 8333      696F6E00 
 8334              	.LASF14:
 8335 0295 6C6F6E67 		.ascii	"long long unsigned int\000"
 8335      206C6F6E 
 8335      6720756E 
 8335      7369676E 
 8335      65642069 
 8336              	.LASF72:
 8337 02ac 70727649 		.ascii	"prvIsQueueEmpty\000"
 8337      73517565 
 8337      7565456D 
 8337      70747900 
 8338              	.LASF76:
 8339 02bc 70764275 		.ascii	"pvBuffer\000"
 8339      66666572 
 8339      00
 8340              	.LASF67:
 8341 02c5 70727647 		.ascii	"prvGetDisinheritPriorityAfterTimeout\000"
 8341      65744469 
 8341      73696E68 
 8341      65726974 
 8341      5072696F 
 8342              	.LASF28:
 8343 02ea 70785072 		.ascii	"pxPrevious\000"
 8343      6576696F 
 8343      757300
 8344              	.LASF53:
 8345 02f5 75784D65 		.ascii	"uxMessagesWaiting\000"
 8345      73736167 
 8345      65735761 
 8345      6974696E 
 8345      6700
 8346              	.LASF138:
 8347 0307 7076506F 		.ascii	"pvPortMalloc\000"
 8347      72744D61 
 8347      6C6C6F63 
 8347      00
 8348              	.LASF140:
 8349 0314 76546173 		.ascii	"vTaskSuspendAll\000"
 8349      6B537573 
 8349      70656E64 
 8349      416C6C00 
 8350              	.LASF115:
 8351 0324 78517565 		.ascii	"xQueuePeek\000"
 8351      75655065 
 8351      656B00
 8352              	.LASF149:
 8353 032f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8353      43313120 
 8353      352E342E 
 8353      31203230 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 208


 8353      31363036 
 8354 0362 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 8354      20726576 
 8354      6973696F 
 8354      6E203233 
 8354      37373135 
 8355 0395 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 8355      66756E63 
 8355      74696F6E 
 8355      2D736563 
 8355      74696F6E 
 8356              	.LASF95:
 8357 03bd 78456E74 		.ascii	"xEntryTimeSet\000"
 8357      72795469 
 8357      6D655365 
 8357      7400
 8358              	.LASF3:
 8359 03cb 73697A65 		.ascii	"size_t\000"
 8359      5F7400
 8360              	.LASF97:
 8361 03d2 7854696D 		.ascii	"xTimeOut\000"
 8361      654F7574 
 8361      00
 8362              	.LASF62:
 8363 03db 7848616E 		.ascii	"xHandle\000"
 8363      646C6500 
 8364              	.LASF61:
 8365 03e3 70635175 		.ascii	"pcQueueName\000"
 8365      6575654E 
 8365      616D6500 
 8366              	.LASF33:
 8367 03ef 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 8367      495F4C49 
 8367      53545F49 
 8367      54454D00 
 8368              	.LASF35:
 8369 03ff 784C4953 		.ascii	"xLIST\000"
 8369      5400
 8370              	.LASF105:
 8371 0405 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8371      75654765 
 8371      6E657269 
 8371      6353656E 
 8371      6446726F 
 8372              	.LASF153:
 8373 041e 76506F72 		.ascii	"vPortSetBASEPRI\000"
 8373      74536574 
 8373      42415345 
 8373      50524900 
 8374              	.LASF73:
 8375 042e 70727643 		.ascii	"prvCopyDataToQueue\000"
 8375      6F707944 
 8375      61746154 
 8375      6F517565 
 8375      756500
 8376              	.LASF92:
 8377 0441 78517565 		.ascii	"xQueueGenericSend\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 209


 8377      75654765 
 8377      6E657269 
 8377      6353656E 
 8377      6400
 8378              	.LASF142:
 8379 0453 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 8379      6B506C61 
 8379      63654F6E 
 8379      4576656E 
 8379      744C6973 
 8380              	.LASF145:
 8381 0469 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 8381      736B496E 
 8381      6372656D 
 8381      656E744D 
 8381      75746578 
 8382              	.LASF55:
 8383 0487 75784974 		.ascii	"uxItemSize\000"
 8383      656D5369 
 8383      7A6500
 8384              	.LASF91:
 8385 0492 7578496E 		.ascii	"uxInitialCount\000"
 8385      69746961 
 8385      6C436F75 
 8385      6E7400
 8386              	.LASF134:
 8387 04a1 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 8387      6B507269 
 8387      6F726974 
 8387      79446973 
 8387      696E6865 
 8388              	.LASF100:
 8389 04b9 75784D75 		.ascii	"uxMutexLength\000"
 8389      7465784C 
 8389      656E6774 
 8389      6800
 8390              	.LASF16:
 8391 04c7 63686172 		.ascii	"char\000"
 8391      00
 8392              	.LASF31:
 8393 04cc 4C697374 		.ascii	"ListItem_t\000"
 8393      4974656D 
 8393      5F7400
 8394              	.LASF68:
 8395 04d7 70727649 		.ascii	"prvIsQueueFull\000"
 8395      73517565 
 8395      75654675 
 8395      6C6C00
 8396              	.LASF66:
 8397 04e6 756C4E65 		.ascii	"ulNewBASEPRI\000"
 8397      77424153 
 8397      45505249 
 8397      00
 8398              	.LASF24:
 8399 04f3 55426173 		.ascii	"UBaseType_t\000"
 8399      65547970 
 8399      655F7400 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 210


 8400              	.LASF108:
 8401 04ff 78517565 		.ascii	"xQueueGiveFromISR\000"
 8401      75654769 
 8401      76654672 
 8401      6F6D4953 
 8401      5200
 8402              	.LASF81:
 8403 0511 70727649 		.ascii	"prvInitialiseNewQueue\000"
 8403      6E697469 
 8403      616C6973 
 8403      654E6577 
 8403      51756575 
 8404              	.LASF131:
 8405 0527 78517565 		.ascii	"xQueueRegistry\000"
 8405      75655265 
 8405      67697374 
 8405      727900
 8406              	.LASF44:
 8407 0536 51756575 		.ascii	"QueueHandle_t\000"
 8407      6548616E 
 8407      646C655F 
 8407      7400
 8408              	.LASF38:
 8409 0544 784C6973 		.ascii	"xListEnd\000"
 8409      74456E64 
 8409      00
 8410              	.LASF122:
 8411 054d 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 8411      6575654D 
 8411      65737361 
 8411      67657357 
 8411      61697469 
 8412              	.LASF34:
 8413 056b 4D696E69 		.ascii	"MiniListItem_t\000"
 8413      4C697374 
 8413      4974656D 
 8413      5F7400
 8414              	.LASF18:
 8415 057a 75696E74 		.ascii	"uint8_t\000"
 8415      385F7400 
 8416              	.LASF63:
 8417 0582 78517565 		.ascii	"xQueueRegistryItem\000"
 8417      75655265 
 8417      67697374 
 8417      72794974 
 8417      656D00
 8418              	.LASF87:
 8419 0595 78517565 		.ascii	"xQueueGenericCreate\000"
 8419      75654765 
 8419      6E657269 
 8419      63437265 
 8419      61746500 
 8420              	.LASF99:
 8421 05a9 78517565 		.ascii	"xQueueCreateMutex\000"
 8421      75654372 
 8421      65617465 
 8421      4D757465 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 211


 8421      7800
 8422              	.LASF152:
 8423 05bb 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 8423      72745261 
 8423      69736542 
 8423      41534550 
 8423      524900
 8424              	.LASF1:
 8425 05ce 6C6F6E67 		.ascii	"long long int\000"
 8425      206C6F6E 
 8425      6720696E 
 8425      7400
 8426              	.LASF98:
 8427 05dc 70727649 		.ascii	"prvInitialiseMutex\000"
 8427      6E697469 
 8427      616C6973 
 8427      654D7574 
 8427      657800
 8428              	.LASF23:
 8429 05ef 42617365 		.ascii	"BaseType_t\000"
 8429      54797065 
 8429      5F7400
 8430              	.LASF83:
 8431 05fa 70756351 		.ascii	"pucQueueStorage\000"
 8431      75657565 
 8431      53746F72 
 8431      61676500 
 8432              	.LASF103:
 8433 060a 784D7574 		.ascii	"xMutex\000"
 8433      657800
 8434              	.LASF42:
 8435 0611 7854696D 		.ascii	"xTimeOnEntering\000"
 8435      654F6E45 
 8435      6E746572 
 8435      696E6700 
 8436              	.LASF127:
 8437 0621 76517565 		.ascii	"vQueueAddToRegistry\000"
 8437      75654164 
 8437      64546F52 
 8437      65676973 
 8437      74727900 
 8438              	.LASF27:
 8439 0635 70784E65 		.ascii	"pxNext\000"
 8439      787400
 8440              	.LASF80:
 8441 063c 784E6577 		.ascii	"xNewQueue\000"
 8441      51756575 
 8441      6500
 8442              	.LASF90:
 8443 0646 75784D61 		.ascii	"uxMaxCount\000"
 8443      78436F75 
 8443      6E7400
 8444              	.LASF43:
 8445 0651 54696D65 		.ascii	"TimeOut_t\000"
 8445      4F75745F 
 8445      7400
 8446              	.LASF139:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 212


 8447 065b 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 8447      6B496E74 
 8447      65726E61 
 8447      6C536574 
 8447      54696D65 
 8448              	.LASF116:
 8449 0678 70634F72 		.ascii	"pcOriginalReadPosition\000"
 8449      6967696E 
 8449      616C5265 
 8449      6164506F 
 8449      73697469 
 8450              	.LASF70:
 8451 068f 75784869 		.ascii	"uxHighestPriorityOfWaitingTasks\000"
 8451      67686573 
 8451      74507269 
 8451      6F726974 
 8451      794F6657 
 8452              	.LASF154:
 8453 06af 756C4E65 		.ascii	"ulNewMaskValue\000"
 8453      774D6173 
 8453      6B56616C 
 8453      756500
 8454              	.LASF84:
 8455 06be 75635175 		.ascii	"ucQueueType\000"
 8455      65756554 
 8455      79706500 
 8456              	.LASF39:
 8457 06ca 4C697374 		.ascii	"List_t\000"
 8457      5F7400
 8458              	.LASF112:
 8459 06d1 75785365 		.ascii	"uxSemaphoreCount\000"
 8459      6D617068 
 8459      6F726543 
 8459      6F756E74 
 8459      00
 8460              	.LASF50:
 8461 06e2 70635772 		.ascii	"pcWriteTo\000"
 8461      69746554 
 8461      6F00
 8462              	.LASF25:
 8463 06ec 5469636B 		.ascii	"TickType_t\000"
 8463      54797065 
 8463      5F7400
 8464              	.LASF4:
 8465 06f7 5F5F696E 		.ascii	"__int8_t\000"
 8465      74385F74 
 8465      00
 8466              	.LASF82:
 8467 0700 75785175 		.ascii	"uxQueueLength\000"
 8467      6575654C 
 8467      656E6774 
 8467      6800
 8468              	.LASF2:
 8469 070e 6C6F6E67 		.ascii	"long double\000"
 8469      20646F75 
 8469      626C6500 
 8470              	.LASF111:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 213


 8471 071a 78496E68 		.ascii	"xInheritanceOccurred\000"
 8471      65726974 
 8471      616E6365 
 8471      4F636375 
 8471      72726564 
 8472              	.LASF114:
 8473 072f 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 8473      75655461 
 8473      6B654D75 
 8473      74657852 
 8473      65637572 
 8474              	.LASF30:
 8475 0748 7076436F 		.ascii	"pvContainer\000"
 8475      6E746169 
 8475      6E657200 
 8476              	.LASF125:
 8477 0754 70635175 		.ascii	"pcQueueGetName\000"
 8477      65756547 
 8477      65744E61 
 8477      6D6500
 8478              	.LASF126:
 8479 0763 70635265 		.ascii	"pcReturn\000"
 8479      7475726E 
 8479      00
 8480              	.LASF54:
 8481 076c 75784C65 		.ascii	"uxLength\000"
 8481      6E677468 
 8481      00
 8482              	.LASF8:
 8483 0775 73686F72 		.ascii	"short int\000"
 8483      7420696E 
 8483      7400
 8484              	.LASF26:
 8485 077f 78497465 		.ascii	"xItemValue\000"
 8485      6D56616C 
 8485      756500
 8486              	.LASF11:
 8487 078a 6C6F6E67 		.ascii	"long int\000"
 8487      20696E74 
 8487      00
 8488              	.LASF130:
 8489 0793 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8489      52784275 
 8489      66666572 
 8489      00
 8490              	.LASF88:
 8491 07a0 78517565 		.ascii	"xQueueSizeInBytes\000"
 8491      75655369 
 8491      7A65496E 
 8491      42797465 
 8491      7300
 8492              	.LASF143:
 8493 07b2 78546173 		.ascii	"xTaskResumeAll\000"
 8493      6B526573 
 8493      756D6541 
 8493      6C6C00
 8494              	.LASF74:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 214


 8495 07c1 70764974 		.ascii	"pvItemToQueue\000"
 8495      656D546F 
 8495      51756575 
 8495      6500
 8496              	.LASF141:
 8497 07cf 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 8497      6B436865 
 8497      636B466F 
 8497      7254696D 
 8497      654F7574 
 8498              	.LASF148:
 8499 07e4 76506F72 		.ascii	"vPortFree\000"
 8499      74467265 
 8499      6500
 8500              	.LASF124:
 8501 07ee 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8501      75654973 
 8501      51756575 
 8501      6546756C 
 8501      6C46726F 
 8502              	.LASF119:
 8503 0807 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 8503      6575654D 
 8503      65737361 
 8503      67657357 
 8503      61697469 
 8504              	.LASF49:
 8505 081e 70635461 		.ascii	"pcTail\000"
 8505      696C00
 8506              	.LASF6:
 8507 0825 5F5F7569 		.ascii	"__uint8_t\000"
 8507      6E74385F 
 8507      7400
 8508              	.LASF69:
 8509 082f 70785175 		.ascii	"pxQueue\000"
 8509      65756500 
 8510              	.LASF71:
 8511 0837 78526574 		.ascii	"xReturn\000"
 8511      75726E00 
 8512              	.LASF15:
 8513 083f 73697A65 		.ascii	"sizetype\000"
 8513      74797065 
 8513      00
 8514              	.LASF136:
 8515 0848 76546173 		.ascii	"vTaskMissedYield\000"
 8515      6B4D6973 
 8515      73656459 
 8515      69656C64 
 8515      00
 8516              	.LASF13:
 8517 0859 6C6F6E67 		.ascii	"long unsigned int\000"
 8517      20756E73 
 8517      69676E65 
 8517      6420696E 
 8517      7400
 8518              	.LASF147:
 8519 086b 78546173 		.ascii	"xTaskPriorityInherit\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 215


 8519      6B507269 
 8519      6F726974 
 8519      79496E68 
 8519      65726974 
 8520              	.LASF19:
 8521 0880 696E7433 		.ascii	"int32_t\000"
 8521      325F7400 
 8522              	.LASF118:
 8523 0888 78517565 		.ascii	"xQueuePeekFromISR\000"
 8523      75655065 
 8523      656B4672 
 8523      6F6D4953 
 8523      5200
 8524              	.LASF113:
 8525 089a 75784869 		.ascii	"uxHighestWaitingPriority\000"
 8525      67686573 
 8525      74576169 
 8525      74696E67 
 8525      5072696F 
 8526              	.LASF7:
 8527 08b3 756E7369 		.ascii	"unsigned char\000"
 8527      676E6564 
 8527      20636861 
 8527      7200
 8528              	.LASF12:
 8529 08c1 5F5F7569 		.ascii	"__uint32_t\000"
 8529      6E743332 
 8529      5F7400
 8530              	.LASF137:
 8531 08cc 764C6973 		.ascii	"vListInitialise\000"
 8531      74496E69 
 8531      7469616C 
 8531      69736500 
 8532              	.LASF77:
 8533 08dc 70727643 		.ascii	"prvCopyDataFromQueue\000"
 8533      6F707944 
 8533      61746146 
 8533      726F6D51 
 8533      75657565 
 8534              	.LASF146:
 8535 08f1 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 8535      6B507269 
 8535      6F726974 
 8535      79446973 
 8535      696E6865 
 8536              	.LASF93:
 8537 0915 78546963 		.ascii	"xTicksToWait\000"
 8537      6B73546F 
 8537      57616974 
 8537      00
 8538              	.LASF29:
 8539 0922 70764F77 		.ascii	"pvOwner\000"
 8539      6E657200 
 8540              	.LASF144:
 8541 092a 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 8541      6B476574 
 8541      43757272 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 216


 8541      656E7454 
 8541      61736B48 
 8542              	.LASF48:
 8543 0944 70634865 		.ascii	"pcHead\000"
 8543      616400
 8544              	.LASF102:
 8545 094b 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 8545      75654769 
 8545      76654D75 
 8545      74657852 
 8545      65637572 
 8546              	.LASF78:
 8547 0964 70727655 		.ascii	"prvUnlockQueue\000"
 8547      6E6C6F63 
 8547      6B517565 
 8547      756500
 8548              	.LASF86:
 8549 0973 78517565 		.ascii	"xQueueGenericReset\000"
 8549      75654765 
 8549      6E657269 
 8549      63526573 
 8549      657400
 8550              	.LASF123:
 8551 0986 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 8551      75654973 
 8551      51756575 
 8551      65456D70 
 8551      74794672 
 8552              	.LASF5:
 8553 09a0 7369676E 		.ascii	"signed char\000"
 8553      65642063 
 8553      68617200 
 8554              	.LASF9:
 8555 09ac 73686F72 		.ascii	"short unsigned int\000"
 8555      7420756E 
 8555      7369676E 
 8555      65642069 
 8555      6E7400
 8556              	.LASF155:
 8557 09bf 6D656D63 		.ascii	"memcpy\000"
 8557      707900
 8558              	.LASF58:
 8559 09c6 78515545 		.ascii	"xQUEUE\000"
 8559      554500
 8560              	.LASF22:
 8561 09cd 646F7562 		.ascii	"double\000"
 8561      6C6500
 8562              	.LASF75:
 8563 09d4 78506F73 		.ascii	"xPosition\000"
 8563      6974696F 
 8563      6E00
 8564              	.LASF56:
 8565 09de 6352784C 		.ascii	"cRxLock\000"
 8565      6F636B00 
 8566              	.LASF135:
 8567 09e6 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 8567      6B52656D 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccIq3WlK.s 			page 217


 8567      6F766546 
 8567      726F6D45 
 8567      76656E74 
 8568              	.LASF89:
 8569 09ff 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 8569      75654372 
 8569      65617465 
 8569      436F756E 
 8569      74696E67 
 8570              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
