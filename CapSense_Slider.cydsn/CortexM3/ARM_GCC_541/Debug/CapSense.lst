ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0x1Fu, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e0__LS__PC, 
  48:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e1__LS__PC, 
  49:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e2__LS__PC, 
  50:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e3__LS__PC, 
  51:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e4__LS__PC, 
  52:Generated_Source\PSoC5/CapSense.c **** };
  53:Generated_Source\PSoC5/CapSense.c **** 
  54:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  55:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__PORT, 
  56:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__PORT, 
  57:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__PORT, 
  58:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__PORT, 
  59:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__PORT, 
  60:Generated_Source\PSoC5/CapSense.c **** };
  61:Generated_Source\PSoC5/CapSense.c **** 
  62:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  63:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__MASK,
  64:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__MASK,
  65:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__MASK,
  66:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__MASK,
  67:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__MASK,
  68:Generated_Source\PSoC5/CapSense.c **** };
  69:Generated_Source\PSoC5/CapSense.c **** 
  70:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  71:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  72:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  73:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  74:Generated_Source\PSoC5/CapSense.c **** };
  75:Generated_Source\PSoC5/CapSense.c **** 
  76:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  77:Generated_Source\PSoC5/CapSense.c ****     200u,200u,200u,200u,200u,
  78:Generated_Source\PSoC5/CapSense.c **** };
  79:Generated_Source\PSoC5/CapSense.c **** 
  80:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  81:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  82:Generated_Source\PSoC5/CapSense.c **** };
  83:Generated_Source\PSoC5/CapSense.c **** 
  84:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  85:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  86:Generated_Source\PSoC5/CapSense.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
  87:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c **** };
  89:Generated_Source\PSoC5/CapSense.c **** 
  90:Generated_Source\PSoC5/CapSense.c **** 
  91:Generated_Source\PSoC5/CapSense.c **** 
  92:Generated_Source\PSoC5/CapSense.c **** 
  93:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
  94:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
  95:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  96:Generated_Source\PSoC5/CapSense.c **** *
  97:Generated_Source\PSoC5/CapSense.c **** * Summary:
  98:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
  99:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 100:Generated_Source\PSoC5/CapSense.c **** *
 101:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 102:Generated_Source\PSoC5/CapSense.c **** *  None
 103:Generated_Source\PSoC5/CapSense.c **** *
 104:Generated_Source\PSoC5/CapSense.c **** * Return:
 105:Generated_Source\PSoC5/CapSense.c **** *  None
 106:Generated_Source\PSoC5/CapSense.c **** *
 107:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 108:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 109:Generated_Source\PSoC5/CapSense.c **** {
 110:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 111:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 112:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 113:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 114:Generated_Source\PSoC5/CapSense.c ****         
 115:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 116:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 117:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 118:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 119:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 120:Generated_Source\PSoC5/CapSense.c ****            */
 121:Generated_Source\PSoC5/CapSense.c ****     
 122:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 123:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 124:Generated_Source\PSoC5/CapSense.c **** 
 125:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 126:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 127:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 128:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 129:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 130:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 131:Generated_Source\PSoC5/CapSense.c ****                                                
 132:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 133:Generated_Source\PSoC5/CapSense.c ****     #else
 134:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 135:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 136:Generated_Source\PSoC5/CapSense.c **** 
 137:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 138:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 139:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 140:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 141:Generated_Source\PSoC5/CapSense.c **** 
 142:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 143:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 144:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 146:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 147:Generated_Source\PSoC5/CapSense.c ****         
 148:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 149:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 150:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 151:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 152:Generated_Source\PSoC5/CapSense.c ****         
 153:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 154:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 155:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 156:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 157:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 158:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 159:Generated_Source\PSoC5/CapSense.c ****         
 160:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 161:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 162:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 163:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 164:Generated_Source\PSoC5/CapSense.c ****                 
 165:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 166:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 167:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 169:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 170:Generated_Source\PSoC5/CapSense.c ****         
 171:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 172:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 173:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 174:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 175:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 176:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 177:Generated_Source\PSoC5/CapSense.c ****         
 178:Generated_Source\PSoC5/CapSense.c ****     #else
 179:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 180:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 181:Generated_Source\PSoC5/CapSense.c ****     
 182:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 183:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 184:Generated_Source\PSoC5/CapSense.c ****     
 185:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 186:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 187:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 188:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 189:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 190:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 191:Generated_Source\PSoC5/CapSense.c ****         
 192:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 195:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 196:Generated_Source\PSoC5/CapSense.c ****     
 197:Generated_Source\PSoC5/CapSense.c ****     #else
 198:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 199:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 201:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 203:Generated_Source\PSoC5/CapSense.c ****         
 204:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 205:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 206:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 207:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 208:Generated_Source\PSoC5/CapSense.c ****         
 209:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 210:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 211:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 212:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 213:Generated_Source\PSoC5/CapSense.c ****         
 214:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 215:Generated_Source\PSoC5/CapSense.c ****     
 216:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 217:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 218:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 219:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 220:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 221:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 222:Generated_Source\PSoC5/CapSense.c ****             
 223:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 224:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 225:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 226:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 227:Generated_Source\PSoC5/CapSense.c ****            
 228:Generated_Source\PSoC5/CapSense.c ****         #else
 229:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 230:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 231:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 232:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 233:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 234:Generated_Source\PSoC5/CapSense.c ****             
 235:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 236:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 237:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 238:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 239:Generated_Source\PSoC5/CapSense.c ****             
 240:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 241:Generated_Source\PSoC5/CapSense.c ****             
 242:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 243:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 244:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 245:Generated_Source\PSoC5/CapSense.c ****             
 246:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 247:Generated_Source\PSoC5/CapSense.c ****     
 248:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 249:Generated_Source\PSoC5/CapSense.c ****     
 250:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 251:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 252:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 253:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 254:Generated_Source\PSoC5/CapSense.c ****     
 255:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 256:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 257:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 258:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 260:Generated_Source\PSoC5/CapSense.c ****     
 261:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 262:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 263:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 264:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 265:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 266:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 267:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 268:Generated_Source\PSoC5/CapSense.c ****     
 269:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 270:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 271:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 272:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 273:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 274:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 275:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 276:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 277:Generated_Source\PSoC5/CapSense.c ****     
 278:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 279:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 281:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 282:Generated_Source\PSoC5/CapSense.c ****     
 283:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 284:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 285:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 286:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 287:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 288:Generated_Source\PSoC5/CapSense.c ****     
 289:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 290:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 291:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 292:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 293:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 294:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 295:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 296:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 297:Generated_Source\PSoC5/CapSense.c ****     
 298:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 299:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 300:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 301:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 302:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 303:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 304:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 305:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 306:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 307:Generated_Source\PSoC5/CapSense.c ****     
 308:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 309:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 310:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 311:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 312:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 313:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 314:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 315:Generated_Source\PSoC5/CapSense.c **** }
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c **** 
 317:Generated_Source\PSoC5/CapSense.c **** 
 318:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 319:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 320:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 321:Generated_Source\PSoC5/CapSense.c **** *
 322:Generated_Source\PSoC5/CapSense.c **** * Summary:
 323:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 324:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 325:Generated_Source\PSoC5/CapSense.c **** *
 326:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 327:Generated_Source\PSoC5/CapSense.c **** *  None
 328:Generated_Source\PSoC5/CapSense.c **** *
 329:Generated_Source\PSoC5/CapSense.c **** * Return:
 330:Generated_Source\PSoC5/CapSense.c **** *  None
 331:Generated_Source\PSoC5/CapSense.c **** *
 332:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 334:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 334 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 335:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 336:Generated_Source\PSoC5/CapSense.c ****     
 337:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 337 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 338:Generated_Source\PSoC5/CapSense.c ****     
 339:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 340:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 341:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 342:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 343:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 344:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 345:Generated_Source\PSoC5/CapSense.c ****         
 346:Generated_Source\PSoC5/CapSense.c ****     #else
 347:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 348:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 349:Generated_Source\PSoC5/CapSense.c ****     
 350:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 351:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 351 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 352:Generated_Source\PSoC5/CapSense.c ****     
 353:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 354:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 8


 355:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 356:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 357:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 358:Generated_Source\PSoC5/CapSense.c ****         
 359:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 360:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 361:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 362:Generated_Source\PSoC5/CapSense.c ****         
 363:Generated_Source\PSoC5/CapSense.c ****     #else
 364:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 365:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 366:Generated_Source\PSoC5/CapSense.c ****         
 367:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 368:Generated_Source\PSoC5/CapSense.c ****     
 369:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 370:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 371:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 372:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 373:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 374:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 375:Generated_Source\PSoC5/CapSense.c ****             
 376:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 377:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 378:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 379:Generated_Source\PSoC5/CapSense.c ****            
 380:Generated_Source\PSoC5/CapSense.c ****         #else
 381:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 382:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 383:Generated_Source\PSoC5/CapSense.c ****         
 384:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 385:Generated_Source\PSoC5/CapSense.c ****     
 386:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 387:Generated_Source\PSoC5/CapSense.c ****     
 388:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 389:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 390:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  46              		.loc 1 390 0
  47 0012 FFF7FEFF 		bl	CapSense_IntClock_Start
  48              	.LVL2:
 391:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 392:Generated_Source\PSoC5/CapSense.c ****     
 393:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 394:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  49              		.loc 1 394 0
  50 0016 FFF7FEFF 		bl	CapSense_CompCH0_Enable
  51              	.LVL3:
 395:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 396:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  52              		.loc 1 396 0
  53 001a FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  54              	.LVL4:
 397:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 398:Generated_Source\PSoC5/CapSense.c ****     
 399:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 400:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 401:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 402:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 9


 403:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 404:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 405:Generated_Source\PSoC5/CapSense.c ****     
 406:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 407:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 408:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 409:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 410:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 411:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 412:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 413:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 414:Generated_Source\PSoC5/CapSense.c ****     #else
 415:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 416:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  55              		.loc 1 416 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F01003 		orr	r3, r3, #16
  59 0026 1370     		strb	r3, [r2]
 417:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  60              		.loc 1 417 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F01003 		orr	r3, r3, #16
  64 0030 1370     		strb	r3, [r2]
 418:Generated_Source\PSoC5/CapSense.c ****         
 419:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 420:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 421:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 422:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 423:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 424:Generated_Source\PSoC5/CapSense.c ****     
 425:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 426:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 427:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 428:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 429:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 430:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 431:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 432:Generated_Source\PSoC5/CapSense.c ****         
 433:Generated_Source\PSoC5/CapSense.c ****     #else
 434:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 435:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  65              		.loc 1 435 0
  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0532     		adds	r2, r2, #5
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 436:Generated_Source\PSoC5/CapSense.c ****         
 437:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 438:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 439:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 440:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 441:Generated_Source\PSoC5/CapSense.c ****     
 442:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 442 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 10


  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 443:Generated_Source\PSoC5/CapSense.c ****     
 444:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 445:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  75              		.loc 1 445 0
  76 0046 0122     		movs	r2, #1
  77 0048 054B     		ldr	r3, .L3+8
  78 004a 1A60     		str	r2, [r3]
 446:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 447:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 448:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 449:Generated_Source\PSoC5/CapSense.c ****     
 450:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 451:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  79              		.loc 1 451 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 9D640040 		.word	1073767581
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 7A640040 		.word	1073767546
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	CapSense_Enable, .-CapSense_Enable
  96              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_FindNextSensor, %function
 102              	CapSense_FindNextSensor:
 103              	.LFB4:
 452:Generated_Source\PSoC5/CapSense.c **** }
 453:Generated_Source\PSoC5/CapSense.c **** 
 454:Generated_Source\PSoC5/CapSense.c **** 
 455:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 456:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 457:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 458:Generated_Source\PSoC5/CapSense.c **** *
 459:Generated_Source\PSoC5/CapSense.c **** * Summary:
 460:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 461:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 462:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 463:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 464:Generated_Source\PSoC5/CapSense.c **** *
 465:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 466:Generated_Source\PSoC5/CapSense.c **** *  None
 467:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 11


 468:Generated_Source\PSoC5/CapSense.c **** * Return:
 469:Generated_Source\PSoC5/CapSense.c **** *  None
 470:Generated_Source\PSoC5/CapSense.c **** *
 471:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 472:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 473:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 474:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 475:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 476:Generated_Source\PSoC5/CapSense.c **** *
 477:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 478:Generated_Source\PSoC5/CapSense.c **** *  No
 479:Generated_Source\PSoC5/CapSense.c **** *
 480:Generated_Source\PSoC5/CapSense.c **** * Note:
 481:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 482:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 483:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 484:Generated_Source\PSoC5/CapSense.c **** *
 485:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 486:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 487:Generated_Source\PSoC5/CapSense.c **** {
 488:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 489:Generated_Source\PSoC5/CapSense.c ****     {
 490:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 491:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 492:Generated_Source\PSoC5/CapSense.c ****     }
 493:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 494:Generated_Source\PSoC5/CapSense.c ****     
 495:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 496:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 497:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 498:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 499:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 500:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 501:Generated_Source\PSoC5/CapSense.c **** }
 502:Generated_Source\PSoC5/CapSense.c **** 
 503:Generated_Source\PSoC5/CapSense.c **** 
 504:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 505:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 506:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 507:Generated_Source\PSoC5/CapSense.c **** *
 508:Generated_Source\PSoC5/CapSense.c **** * Summary:
 509:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 510:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 511:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 512:Generated_Source\PSoC5/CapSense.c **** *
 513:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 514:Generated_Source\PSoC5/CapSense.c **** *  None
 515:Generated_Source\PSoC5/CapSense.c **** *
 516:Generated_Source\PSoC5/CapSense.c **** * Return:
 517:Generated_Source\PSoC5/CapSense.c **** *  None
 518:Generated_Source\PSoC5/CapSense.c **** *
 519:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 520:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 521:Generated_Source\PSoC5/CapSense.c **** *
 522:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 523:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 524:Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 12


 525:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 526:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 527:Generated_Source\PSoC5/CapSense.c ****     
 528:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 529:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 530:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 531:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 532:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 533:Generated_Source\PSoC5/CapSense.c ****     
 534:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 535:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 536:Generated_Source\PSoC5/CapSense.c ****     
 537:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 538:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 539:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 540:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 541:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 542:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 543:Generated_Source\PSoC5/CapSense.c ****         
 544:Generated_Source\PSoC5/CapSense.c ****     #else
 545:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 546:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 547:Generated_Source\PSoC5/CapSense.c ****     
 548:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 549:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 550:Generated_Source\PSoC5/CapSense.c ****     
 551:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 552:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 553:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 554:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 555:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 556:Generated_Source\PSoC5/CapSense.c **** 
 557:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 558:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 559:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 560:Generated_Source\PSoC5/CapSense.c **** 
 561:Generated_Source\PSoC5/CapSense.c ****     #else
 562:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 563:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 564:Generated_Source\PSoC5/CapSense.c ****         
 565:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 566:Generated_Source\PSoC5/CapSense.c ****     
 567:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 568:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 569:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 570:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 571:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 572:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 573:Generated_Source\PSoC5/CapSense.c ****     
 574:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 575:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 576:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 577:Generated_Source\PSoC5/CapSense.c ****            
 578:Generated_Source\PSoC5/CapSense.c ****         #else
 579:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 580:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 581:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 13


 582:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 583:Generated_Source\PSoC5/CapSense.c ****     
 584:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 585:Generated_Source\PSoC5/CapSense.c ****     
 586:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 587:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 588:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 589:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 590:Generated_Source\PSoC5/CapSense.c ****     
 591:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 592:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 593:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 594:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 595:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 596:Generated_Source\PSoC5/CapSense.c ****     
 597:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 598:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 599:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 600:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 601:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 602:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 603:Generated_Source\PSoC5/CapSense.c ****     
 604:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 605:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 606:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 607:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 608:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 609:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 610:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 611:Generated_Source\PSoC5/CapSense.c **** 
 612:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 613:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 614:Generated_Source\PSoC5/CapSense.c ****     #else
 615:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 616:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 617:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 618:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 619:Generated_Source\PSoC5/CapSense.c ****         
 620:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 621:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 622:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 623:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 624:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 625:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 626:Generated_Source\PSoC5/CapSense.c ****     
 627:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 628:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 629:Generated_Source\PSoC5/CapSense.c **** }
 630:Generated_Source\PSoC5/CapSense.c **** 
 631:Generated_Source\PSoC5/CapSense.c **** 
 632:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 633:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 634:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 635:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 636:Generated_Source\PSoC5/CapSense.c ****     *
 637:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 638:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 14


 639:Generated_Source\PSoC5/CapSense.c ****     *
 640:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 641:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 642:Generated_Source\PSoC5/CapSense.c ****     *
 643:Generated_Source\PSoC5/CapSense.c ****     * Return:
 644:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 645:Generated_Source\PSoC5/CapSense.c ****     *
 646:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 647:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 648:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 649:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 650:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 651:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 652:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 653:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 654:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 655:Generated_Source\PSoC5/CapSense.c ****     *
 656:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 657:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 658:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 659:Generated_Source\PSoC5/CapSense.c ****     *
 660:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 661:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 662:Generated_Source\PSoC5/CapSense.c ****     {
 104              		.loc 1 662 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 663:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 664:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 665:Generated_Source\PSoC5/CapSense.c ****         
 666:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 667:Generated_Source\PSoC5/CapSense.c ****         do
 668:Generated_Source\PSoC5/CapSense.c ****         {
 669:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 670:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 111              		.loc 1 670 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 671:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 115              		.loc 1 671 0
 116 0004 0528     		cmp	r0, #5
 117 0006 08D0     		beq	.L6
 672:Generated_Source\PSoC5/CapSense.c ****             {
 673:Generated_Source\PSoC5/CapSense.c ****                 break;
 674:Generated_Source\PSoC5/CapSense.c ****             }
 675:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 675 0
 119 0008 C208     		lsrs	r2, r0, #3
 676:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 676 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 15


 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 677:Generated_Source\PSoC5/CapSense.c ****         }    
 678:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 678 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
 130              	.LVL10:
 131              	.L6:
 679:Generated_Source\PSoC5/CapSense.c ****         
 680:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 681:Generated_Source\PSoC5/CapSense.c ****     }
 132              		.loc 1 681 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 141              		.section	.text.CapSense_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	CapSense_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	CapSense_IsBusy, %function
 147              	CapSense_IsBusy:
 148              	.LFB8:
 682:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 683:Generated_Source\PSoC5/CapSense.c ****  
 684:Generated_Source\PSoC5/CapSense.c ****  
 685:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 686:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 687:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 688:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 689:Generated_Source\PSoC5/CapSense.c ****     *
 690:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 691:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 692:Generated_Source\PSoC5/CapSense.c ****     *  
 693:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 694:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 695:Generated_Source\PSoC5/CapSense.c ****     *
 696:Generated_Source\PSoC5/CapSense.c ****     * Return:
 697:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 698:Generated_Source\PSoC5/CapSense.c ****     *
 699:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 700:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 701:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 702:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 703:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 704:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 705:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 706:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 707:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 16


 708:Generated_Source\PSoC5/CapSense.c ****     *
 709:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 710:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 711:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 712:Generated_Source\PSoC5/CapSense.c ****     *
 713:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 714:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 715:Generated_Source\PSoC5/CapSense.c ****     {
 716:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 717:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 718:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 719:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 720:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 721:Generated_Source\PSoC5/CapSense.c ****         
 722:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 723:Generated_Source\PSoC5/CapSense.c ****         do
 724:Generated_Source\PSoC5/CapSense.c ****         {
 725:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 726:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 727:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 728:Generated_Source\PSoC5/CapSense.c ****             {
 729:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 730:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 731:Generated_Source\PSoC5/CapSense.c ****                 break;
 732:Generated_Source\PSoC5/CapSense.c ****             }
 733:Generated_Source\PSoC5/CapSense.c ****             
 734:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 735:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 736:Generated_Source\PSoC5/CapSense.c ****         }
 737:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 738:Generated_Source\PSoC5/CapSense.c ****         
 739:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 740:Generated_Source\PSoC5/CapSense.c ****         do
 741:Generated_Source\PSoC5/CapSense.c ****         {
 742:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 743:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 744:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 745:Generated_Source\PSoC5/CapSense.c ****             {
 746:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 747:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 748:Generated_Source\PSoC5/CapSense.c ****                 break;
 749:Generated_Source\PSoC5/CapSense.c ****             }
 750:Generated_Source\PSoC5/CapSense.c ****             
 751:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 752:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 753:Generated_Source\PSoC5/CapSense.c ****         } 
 754:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 755:Generated_Source\PSoC5/CapSense.c ****         
 756:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 757:Generated_Source\PSoC5/CapSense.c ****         
 758:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 759:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 760:Generated_Source\PSoC5/CapSense.c ****         {
 761:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 762:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 763:Generated_Source\PSoC5/CapSense.c ****             
 764:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 17


 765:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 766:Generated_Source\PSoC5/CapSense.c ****         }
 767:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 768:Generated_Source\PSoC5/CapSense.c ****         {
 769:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 770:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 771:Generated_Source\PSoC5/CapSense.c ****            
 772:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 773:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 774:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 775:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 776:Generated_Source\PSoC5/CapSense.c ****         }
 777:Generated_Source\PSoC5/CapSense.c ****         else
 778:Generated_Source\PSoC5/CapSense.c ****         {
 779:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 780:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 781:Generated_Source\PSoC5/CapSense.c ****             
 782:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 783:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 784:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 785:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 786:Generated_Source\PSoC5/CapSense.c ****         }
 787:Generated_Source\PSoC5/CapSense.c ****         
 788:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 789:Generated_Source\PSoC5/CapSense.c ****     }
 790:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 791:Generated_Source\PSoC5/CapSense.c **** 
 792:Generated_Source\PSoC5/CapSense.c **** 
 793:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 794:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 795:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 796:Generated_Source\PSoC5/CapSense.c **** *
 797:Generated_Source\PSoC5/CapSense.c **** * Summary:
 798:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 799:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 800:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 801:Generated_Source\PSoC5/CapSense.c **** *  widget.
 802:Generated_Source\PSoC5/CapSense.c **** *
 803:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 804:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 805:Generated_Source\PSoC5/CapSense.c **** *
 806:Generated_Source\PSoC5/CapSense.c **** * Return:
 807:Generated_Source\PSoC5/CapSense.c **** *  None
 808:Generated_Source\PSoC5/CapSense.c **** *
 809:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 810:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 811:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 812:Generated_Source\PSoC5/CapSense.c **** *  widget.
 813:Generated_Source\PSoC5/CapSense.c **** *
 814:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 815:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 816:Generated_Source\PSoC5/CapSense.c **** {
 817:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 818:Generated_Source\PSoC5/CapSense.c ****     
 819:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 820:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 821:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 18


 822:Generated_Source\PSoC5/CapSense.c ****         
 823:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 824:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 825:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 826:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 827:Generated_Source\PSoC5/CapSense.c ****         
 828:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 829:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 830:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 831:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 832:Generated_Source\PSoC5/CapSense.c ****         #else
 833:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 834:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 835:Generated_Source\PSoC5/CapSense.c **** 
 836:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 837:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 838:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 839:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 840:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 841:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 842:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 843:Generated_Source\PSoC5/CapSense.c ****                */
 844:Generated_Source\PSoC5/CapSense.c **** 
 845:Generated_Source\PSoC5/CapSense.c ****     #else
 846:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 847:Generated_Source\PSoC5/CapSense.c ****         {
 848:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 849:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 850:Generated_Source\PSoC5/CapSense.c ****             
 851:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 852:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 853:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 854:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 855:Generated_Source\PSoC5/CapSense.c ****             
 856:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 857:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 858:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 859:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 860:Generated_Source\PSoC5/CapSense.c ****             #else
 861:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 862:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 863:Generated_Source\PSoC5/CapSense.c ****         }
 864:Generated_Source\PSoC5/CapSense.c ****         
 865:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 866:Generated_Source\PSoC5/CapSense.c ****         {
 867:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 868:Generated_Source\PSoC5/CapSense.c ****         
 869:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 870:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 871:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 872:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 873:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 874:Generated_Source\PSoC5/CapSense.c ****             
 875:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 876:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 877:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 878:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 19


 879:Generated_Source\PSoC5/CapSense.c ****             #else
 880:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 881:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 882:Generated_Source\PSoC5/CapSense.c ****         }
 883:Generated_Source\PSoC5/CapSense.c **** 
 884:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 885:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 886:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 887:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 888:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 889:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 890:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 891:Generated_Source\PSoC5/CapSense.c ****                */
 892:Generated_Source\PSoC5/CapSense.c **** 
 893:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 894:Generated_Source\PSoC5/CapSense.c **** }
 895:Generated_Source\PSoC5/CapSense.c **** 
 896:Generated_Source\PSoC5/CapSense.c **** 
 897:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 898:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 899:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 900:Generated_Source\PSoC5/CapSense.c **** *
 901:Generated_Source\PSoC5/CapSense.c **** * Summary:
 902:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 903:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 904:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 905:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 906:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 907:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 908:Generated_Source\PSoC5/CapSense.c **** *
 909:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 910:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 911:Generated_Source\PSoC5/CapSense.c **** *
 912:Generated_Source\PSoC5/CapSense.c **** * Return:
 913:Generated_Source\PSoC5/CapSense.c **** *  None
 914:Generated_Source\PSoC5/CapSense.c **** *
 915:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 916:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 917:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 918:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 919:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 920:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 921:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 922:Generated_Source\PSoC5/CapSense.c **** *
 923:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 924:Generated_Source\PSoC5/CapSense.c **** *  No
 925:Generated_Source\PSoC5/CapSense.c **** *
 926:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 928:Generated_Source\PSoC5/CapSense.c **** {
 929:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 930:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 931:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 932:Generated_Source\PSoC5/CapSense.c ****     
 933:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 934:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 935:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 20


 936:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 937:Generated_Source\PSoC5/CapSense.c ****         
 938:Generated_Source\PSoC5/CapSense.c ****     #else
 939:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 940:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 941:Generated_Source\PSoC5/CapSense.c ****         {
 942:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 943:Generated_Source\PSoC5/CapSense.c ****         }
 944:Generated_Source\PSoC5/CapSense.c ****         else
 945:Generated_Source\PSoC5/CapSense.c ****         {
 946:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 947:Generated_Source\PSoC5/CapSense.c ****         }
 948:Generated_Source\PSoC5/CapSense.c ****         
 949:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 950:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 951:Generated_Source\PSoC5/CapSense.c ****         {
 952:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 953:Generated_Source\PSoC5/CapSense.c ****         }
 954:Generated_Source\PSoC5/CapSense.c ****         else
 955:Generated_Source\PSoC5/CapSense.c ****         {
 956:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 957:Generated_Source\PSoC5/CapSense.c ****         }
 958:Generated_Source\PSoC5/CapSense.c ****         
 959:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 960:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 961:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 962:Generated_Source\PSoC5/CapSense.c ****         {
 963:Generated_Source\PSoC5/CapSense.c ****         
 964:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 965:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 966:Generated_Source\PSoC5/CapSense.c ****         }
 967:Generated_Source\PSoC5/CapSense.c ****         
 968:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 969:Generated_Source\PSoC5/CapSense.c **** }
 970:Generated_Source\PSoC5/CapSense.c **** 
 971:Generated_Source\PSoC5/CapSense.c **** 
 972:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 973:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 974:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 975:Generated_Source\PSoC5/CapSense.c **** *
 976:Generated_Source\PSoC5/CapSense.c **** * Summary:
 977:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 978:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 979:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 980:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 981:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 982:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 983:Generated_Source\PSoC5/CapSense.c **** *
 984:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 985:Generated_Source\PSoC5/CapSense.c **** *  None
 986:Generated_Source\PSoC5/CapSense.c **** *
 987:Generated_Source\PSoC5/CapSense.c **** * Return:
 988:Generated_Source\PSoC5/CapSense.c **** *  None
 989:Generated_Source\PSoC5/CapSense.c **** *
 990:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 991:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 992:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 21


 993:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 994:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
 995:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 996:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 997:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
 998:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
 999:Generated_Source\PSoC5/CapSense.c **** *
1000:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1001:Generated_Source\PSoC5/CapSense.c **** *  No
1002:Generated_Source\PSoC5/CapSense.c **** *
1003:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1004:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1005:Generated_Source\PSoC5/CapSense.c **** {
1006:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1007:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
1008:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
1009:Generated_Source\PSoC5/CapSense.c ****     
1010:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1011:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1012:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1013:Generated_Source\PSoC5/CapSense.c **** 
1014:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1015:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1016:Generated_Source\PSoC5/CapSense.c ****         {
1017:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1018:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1019:Generated_Source\PSoC5/CapSense.c ****         }
1020:Generated_Source\PSoC5/CapSense.c ****         
1021:Generated_Source\PSoC5/CapSense.c ****     #else
1022:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1023:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1024:Generated_Source\PSoC5/CapSense.c ****         
1025:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1026:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1027:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1028:Generated_Source\PSoC5/CapSense.c ****         {
1029:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1030:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1031:Generated_Source\PSoC5/CapSense.c ****         }
1032:Generated_Source\PSoC5/CapSense.c ****         
1033:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1034:Generated_Source\PSoC5/CapSense.c **** }
1035:Generated_Source\PSoC5/CapSense.c **** 
1036:Generated_Source\PSoC5/CapSense.c **** 
1037:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1038:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1039:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1040:Generated_Source\PSoC5/CapSense.c **** *
1041:Generated_Source\PSoC5/CapSense.c **** * Summary:
1042:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1043:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1044:Generated_Source\PSoC5/CapSense.c **** *
1045:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1046:Generated_Source\PSoC5/CapSense.c **** *  None
1047:Generated_Source\PSoC5/CapSense.c **** *
1048:Generated_Source\PSoC5/CapSense.c **** * Return:
1049:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 22


1050:Generated_Source\PSoC5/CapSense.c **** *  completed.
1051:Generated_Source\PSoC5/CapSense.c **** *
1052:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1053:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1054:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1055:Generated_Source\PSoC5/CapSense.c **** *
1056:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1057:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1058:Generated_Source\PSoC5/CapSense.c **** {
 149              		.loc 1 1058 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1059:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1059 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1060:Generated_Source\PSoC5/CapSense.c **** }
 157              		.loc 1 1060 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	CapSense_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 167              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_ReadSensorRaw, %function
 173              	CapSense_ReadSensorRaw:
 174              	.LFB9:
1061:Generated_Source\PSoC5/CapSense.c **** 
1062:Generated_Source\PSoC5/CapSense.c **** 
1063:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1064:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1065:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1066:Generated_Source\PSoC5/CapSense.c **** *
1067:Generated_Source\PSoC5/CapSense.c **** * Summary:
1068:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1069:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1070:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1071:Generated_Source\PSoC5/CapSense.c **** *
1072:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1073:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1074:Generated_Source\PSoC5/CapSense.c **** *
1075:Generated_Source\PSoC5/CapSense.c **** * Return:
1076:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1077:Generated_Source\PSoC5/CapSense.c **** *
1078:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1079:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1080:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 23


1081:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1082:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1083:Generated_Source\PSoC5/CapSense.c **** {
 175              		.loc 1 1083 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
1084:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1085:Generated_Source\PSoC5/CapSense.c **** }
 181              		.loc 1 1085 0
 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	CapSense_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 193              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	CapSense_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	CapSense_EnableSensor, %function
 199              	CapSense_EnableSensor:
 200              	.LFB11:
1086:Generated_Source\PSoC5/CapSense.c **** 
1087:Generated_Source\PSoC5/CapSense.c **** 
1088:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1089:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1090:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1091:Generated_Source\PSoC5/CapSense.c **** *
1092:Generated_Source\PSoC5/CapSense.c **** * Summary:
1093:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1094:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1095:Generated_Source\PSoC5/CapSense.c **** *
1096:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1097:Generated_Source\PSoC5/CapSense.c **** *  None
1098:Generated_Source\PSoC5/CapSense.c **** *
1099:Generated_Source\PSoC5/CapSense.c **** * Return:
1100:Generated_Source\PSoC5/CapSense.c **** *  None
1101:Generated_Source\PSoC5/CapSense.c **** *
1102:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1103:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1104:Generated_Source\PSoC5/CapSense.c **** {
1105:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1106:Generated_Source\PSoC5/CapSense.c ****    
1107:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1108:Generated_Source\PSoC5/CapSense.c ****     {
1109:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1110:Generated_Source\PSoC5/CapSense.c ****     }
1111:Generated_Source\PSoC5/CapSense.c **** }
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 24


1112:Generated_Source\PSoC5/CapSense.c **** 
1113:Generated_Source\PSoC5/CapSense.c **** 
1114:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1115:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1116:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1117:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1118:Generated_Source\PSoC5/CapSense.c ****     *
1119:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1120:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1121:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1122:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1123:Generated_Source\PSoC5/CapSense.c ****     *
1124:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1125:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1126:Generated_Source\PSoC5/CapSense.c ****     *
1127:Generated_Source\PSoC5/CapSense.c ****     * Return:
1128:Generated_Source\PSoC5/CapSense.c ****     *  None
1129:Generated_Source\PSoC5/CapSense.c ****     *
1130:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1131:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1132:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1133:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1134:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1135:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1136:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1137:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1138:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1139:Generated_Source\PSoC5/CapSense.c ****     *
1140:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1141:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1142:Generated_Source\PSoC5/CapSense.c ****     {
1143:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1144:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1145:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1146:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1147:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1148:Generated_Source\PSoC5/CapSense.c ****         
1149:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1150:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1151:Generated_Source\PSoC5/CapSense.c ****         {
1152:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1153:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1154:Generated_Source\PSoC5/CapSense.c ****         }
1155:Generated_Source\PSoC5/CapSense.c ****         else
1156:Generated_Source\PSoC5/CapSense.c ****         {
1157:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1158:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1159:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1160:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1161:Generated_Source\PSoC5/CapSense.c ****                         
1162:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1163:Generated_Source\PSoC5/CapSense.c ****             {
1164:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1165:Generated_Source\PSoC5/CapSense.c ****             }
1166:Generated_Source\PSoC5/CapSense.c ****         } 
1167:Generated_Source\PSoC5/CapSense.c ****     }
1168:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 25


1169:Generated_Source\PSoC5/CapSense.c ****     
1170:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1171:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1172:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1173:Generated_Source\PSoC5/CapSense.c ****     *
1174:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1175:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1176:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1177:Generated_Source\PSoC5/CapSense.c ****     *
1178:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1179:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1180:Generated_Source\PSoC5/CapSense.c ****     *
1181:Generated_Source\PSoC5/CapSense.c ****     * Return:
1182:Generated_Source\PSoC5/CapSense.c ****     *  None
1183:Generated_Source\PSoC5/CapSense.c ****     *
1184:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1185:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1186:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1187:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1188:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1189:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1190:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1191:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1192:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1193:Generated_Source\PSoC5/CapSense.c ****     *
1194:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1195:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1196:Generated_Source\PSoC5/CapSense.c ****     {
1197:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1198:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1199:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1200:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1201:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1202:Generated_Source\PSoC5/CapSense.c ****         
1203:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1204:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1205:Generated_Source\PSoC5/CapSense.c ****         {
1206:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1207:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1208:Generated_Source\PSoC5/CapSense.c ****         }
1209:Generated_Source\PSoC5/CapSense.c ****         else
1210:Generated_Source\PSoC5/CapSense.c ****         {
1211:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1212:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1213:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1214:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1215:Generated_Source\PSoC5/CapSense.c ****                         
1216:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1217:Generated_Source\PSoC5/CapSense.c ****             {
1218:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1219:Generated_Source\PSoC5/CapSense.c ****             }
1220:Generated_Source\PSoC5/CapSense.c ****         } 
1221:Generated_Source\PSoC5/CapSense.c ****     }
1222:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1223:Generated_Source\PSoC5/CapSense.c **** 
1224:Generated_Source\PSoC5/CapSense.c **** 
1225:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 26


1226:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1227:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1228:Generated_Source\PSoC5/CapSense.c **** *
1229:Generated_Source\PSoC5/CapSense.c **** * Summary:
1230:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1231:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1232:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1233:Generated_Source\PSoC5/CapSense.c **** *
1234:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1235:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1236:Generated_Source\PSoC5/CapSense.c **** *
1237:Generated_Source\PSoC5/CapSense.c **** * Return:
1238:Generated_Source\PSoC5/CapSense.c **** *  None
1239:Generated_Source\PSoC5/CapSense.c **** *
1240:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1241:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1242:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1243:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1244:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1245:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1246:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1247:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1248:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1249:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1250:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1251:Generated_Source\PSoC5/CapSense.c **** *
1252:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1253:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1254:Generated_Source\PSoC5/CapSense.c **** {
 201              		.loc 1 1254 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 10B5     		push	{r4, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
1255:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 210              		.loc 1 1255 0
 211 0002 0B4B     		ldr	r3, .L20
 212 0004 195C     		ldrb	r1, [r3, r0]	@ zero_extendqisi2
 213              	.LVL14:
1256:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 214              		.loc 1 1256 0
 215 0006 1A18     		adds	r2, r3, r0
 216 0008 147A     		ldrb	r4, [r2, #8]	@ zero_extendqisi2
 217              	.LVL15:
1257:Generated_Source\PSoC5/CapSense.c ****     
1258:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1259:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1260:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1261:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1262:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1263:Generated_Source\PSoC5/CapSense.c ****             */
1264:Generated_Source\PSoC5/CapSense.c ****     
1265:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 27


1266:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 218              		.loc 1 1266 0
 219 000a 03EB8003 		add	r3, r3, r0, lsl #2
 220 000e 1B69     		ldr	r3, [r3, #16]
 221 0010 0922     		movs	r2, #9
 222 0012 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/CapSense.c ****     
1268:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1269:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 223              		.loc 1 1269 0
 224 0014 0F29     		cmp	r1, #15
 225 0016 00D1     		bne	.L17
1270:Generated_Source\PSoC5/CapSense.c **** 	{
1271:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 226              		.loc 1 1271 0
 227 0018 0721     		movs	r1, #7
 228              	.LVL16:
 229              	.L17:
1272:Generated_Source\PSoC5/CapSense.c **** 	}
1273:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 230              		.loc 1 1273 0
 231 001a 054A     		ldr	r2, .L20
 232 001c 02EB8102 		add	r2, r2, r1, lsl #2
 233 0020 526A     		ldr	r2, [r2, #36]
 234 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 235 0024 2343     		orrs	r3, r3, r4
 236 0026 1370     		strb	r3, [r2]
1274:Generated_Source\PSoC5/CapSense.c ****     
1275:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1276:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1277:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1278:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1279:Generated_Source\PSoC5/CapSense.c ****         #else
1280:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 237              		.loc 1 1280 0
 238 0028 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 239              	.LVL17:
 240 002c 10BD     		pop	{r4, pc}
 241              	.LVL18:
 242              	.L21:
 243 002e 00BF     		.align	2
 244              	.L20:
 245 0030 00000000 		.word	.LANCHOR1
 246              		.cfi_endproc
 247              	.LFE11:
 248              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 249              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 250              		.align	2
 251              		.global	CapSense_DisableSensor
 252              		.thumb
 253              		.thumb_func
 254              		.type	CapSense_DisableSensor, %function
 255              	CapSense_DisableSensor:
 256              	.LFB12:
1281:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1282:Generated_Source\PSoC5/CapSense.c ****                 
1283:Generated_Source\PSoC5/CapSense.c ****     #else
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 28


1284:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1285:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1286:Generated_Source\PSoC5/CapSense.c ****             {
1287:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1288:Generated_Source\PSoC5/CapSense.c ****             } 
1289:Generated_Source\PSoC5/CapSense.c ****             else
1290:Generated_Source\PSoC5/CapSense.c ****             {
1291:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1292:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1293:Generated_Source\PSoC5/CapSense.c ****             }
1294:Generated_Source\PSoC5/CapSense.c ****             
1295:Generated_Source\PSoC5/CapSense.c ****         #else
1296:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1297:Generated_Source\PSoC5/CapSense.c ****             {
1298:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1299:Generated_Source\PSoC5/CapSense.c ****             } 
1300:Generated_Source\PSoC5/CapSense.c ****             else
1301:Generated_Source\PSoC5/CapSense.c ****             {
1302:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1303:Generated_Source\PSoC5/CapSense.c ****             }
1304:Generated_Source\PSoC5/CapSense.c ****             
1305:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1306:Generated_Source\PSoC5/CapSense.c ****         
1307:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1308:Generated_Source\PSoC5/CapSense.c **** }
1309:Generated_Source\PSoC5/CapSense.c **** 
1310:Generated_Source\PSoC5/CapSense.c **** 
1311:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1312:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1313:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1314:Generated_Source\PSoC5/CapSense.c **** *
1315:Generated_Source\PSoC5/CapSense.c **** * Summary:
1316:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1317:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1318:Generated_Source\PSoC5/CapSense.c **** *
1319:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1320:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1321:Generated_Source\PSoC5/CapSense.c **** *
1322:Generated_Source\PSoC5/CapSense.c **** * Return:
1323:Generated_Source\PSoC5/CapSense.c **** *  None
1324:Generated_Source\PSoC5/CapSense.c **** *
1325:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1326:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1327:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1328:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1329:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1330:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1331:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1332:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1333:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1334:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1335:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1336:Generated_Source\PSoC5/CapSense.c **** *
1337:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1338:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1339:Generated_Source\PSoC5/CapSense.c **** {
 257              		.loc 1 1339 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 29


 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL19:
 262 0000 70B5     		push	{r4, r5, r6, lr}
 263              		.cfi_def_cfa_offset 16
 264              		.cfi_offset 4, -16
 265              		.cfi_offset 5, -12
 266              		.cfi_offset 6, -8
 267              		.cfi_offset 14, -4
 268 0002 0546     		mov	r5, r0
1340:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 269              		.loc 1 1340 0
 270 0004 0B4B     		ldr	r3, .L26
 271 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 272              	.LVL20:
1341:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 273              		.loc 1 1341 0
 274 0008 0344     		add	r3, r3, r0
 275 000a 1E7A     		ldrb	r6, [r3, #8]	@ zero_extendqisi2
 276              	.LVL21:
1342:Generated_Source\PSoC5/CapSense.c ****     
1343:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1344:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1345:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1346:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1347:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1348:Generated_Source\PSoC5/CapSense.c ****             */
1349:Generated_Source\PSoC5/CapSense.c ****     
1350:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1351:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1352:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1353:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1354:Generated_Source\PSoC5/CapSense.c ****         #else
1355:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 277              		.loc 1 1355 0
 278 000c FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 279              	.LVL22:
1356:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1357:Generated_Source\PSoC5/CapSense.c ****                 
1358:Generated_Source\PSoC5/CapSense.c ****     #else
1359:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1360:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1361:Generated_Source\PSoC5/CapSense.c ****             {
1362:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1363:Generated_Source\PSoC5/CapSense.c ****             } 
1364:Generated_Source\PSoC5/CapSense.c ****             else
1365:Generated_Source\PSoC5/CapSense.c ****             {
1366:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1367:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1368:Generated_Source\PSoC5/CapSense.c ****             }
1369:Generated_Source\PSoC5/CapSense.c ****             
1370:Generated_Source\PSoC5/CapSense.c ****         #else
1371:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1372:Generated_Source\PSoC5/CapSense.c ****             {
1373:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1374:Generated_Source\PSoC5/CapSense.c ****             } 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 30


1375:Generated_Source\PSoC5/CapSense.c ****             else
1376:Generated_Source\PSoC5/CapSense.c ****             {
1377:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1378:Generated_Source\PSoC5/CapSense.c ****             }
1379:Generated_Source\PSoC5/CapSense.c ****             
1380:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1381:Generated_Source\PSoC5/CapSense.c ****         
1382:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1383:Generated_Source\PSoC5/CapSense.c ****     
1384:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1385:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 280              		.loc 1 1385 0
 281 0010 0F2C     		cmp	r4, #15
 282 0012 00D1     		bne	.L23
1386:Generated_Source\PSoC5/CapSense.c **** 	{
1387:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 283              		.loc 1 1387 0
 284 0014 0724     		movs	r4, #7
 285              	.LVL23:
 286              	.L23:
1388:Generated_Source\PSoC5/CapSense.c **** 	}
1389:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 287              		.loc 1 1389 0
 288 0016 0748     		ldr	r0, .L26
 289 0018 00EB8404 		add	r4, r0, r4, lsl #2
 290              	.LVL24:
 291 001c 626A     		ldr	r2, [r4, #36]
 292 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 293 0020 23EA0603 		bic	r3, r3, r6
 294 0024 1370     		strb	r3, [r2]
1390:Generated_Source\PSoC5/CapSense.c ****     
1391:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1392:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1393:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 295              		.loc 1 1393 0
 296 0026 00EB8500 		add	r0, r0, r5, lsl #2
 297 002a 0369     		ldr	r3, [r0, #16]
 298 002c 0822     		movs	r2, #8
 299 002e 1A70     		strb	r2, [r3]
 300 0030 70BD     		pop	{r4, r5, r6, pc}
 301              	.LVL25:
 302              	.L27:
 303 0032 00BF     		.align	2
 304              	.L26:
 305 0034 00000000 		.word	.LANCHOR1
 306              		.cfi_endproc
 307              	.LFE12:
 308              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 309              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 310              		.align	2
 311              		.global	CapSense_ClearSensors
 312              		.thumb
 313              		.thumb_func
 314              		.type	CapSense_ClearSensors, %function
 315              	CapSense_ClearSensors:
 316              	.LFB10:
1104:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 31


 317              		.loc 1 1104 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 10B5     		push	{r4, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 325              	.LVL26:
1107:Generated_Source\PSoC5/CapSense.c ****     {
 326              		.loc 1 1107 0
 327 0002 0024     		movs	r4, #0
 328 0004 04E0     		b	.L29
 329              	.LVL27:
 330              	.L30:
1109:Generated_Source\PSoC5/CapSense.c ****     }
 331              		.loc 1 1109 0 discriminator 3
 332 0006 2046     		mov	r0, r4
 333 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 334              	.LVL28:
1107:Generated_Source\PSoC5/CapSense.c ****     {
 335              		.loc 1 1107 0 discriminator 3
 336 000c 0134     		adds	r4, r4, #1
 337              	.LVL29:
 338 000e E4B2     		uxtb	r4, r4
 339              	.LVL30:
 340              	.L29:
1107:Generated_Source\PSoC5/CapSense.c ****     {
 341              		.loc 1 1107 0 is_stmt 0 discriminator 1
 342 0010 042C     		cmp	r4, #4
 343 0012 F8D9     		bls	.L30
1111:Generated_Source\PSoC5/CapSense.c **** 
 344              		.loc 1 1111 0 is_stmt 1
 345 0014 10BD     		pop	{r4, pc}
 346              		.cfi_endproc
 347              	.LFE10:
 348              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 349 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 350              		.align	2
 351              		.global	CapSense_Stop
 352              		.thumb
 353              		.thumb_func
 354              		.type	CapSense_Stop, %function
 355              	CapSense_Stop:
 356              	.LFB3:
 524:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 357              		.loc 1 524 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 526:Generated_Source\PSoC5/CapSense.c ****     
 365              		.loc 1 526 0
 366 0002 154C     		ldr	r4, .L34
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 32


 367 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 368 0006 03F0FD03 		and	r3, r3, #253
 369 000a 2370     		strb	r3, [r4]
 529:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 370              		.loc 1 529 0
 371 000c 0122     		movs	r2, #1
 372 000e 134B     		ldr	r3, .L34+4
 373 0010 1A60     		str	r2, [r3]
 535:Generated_Source\PSoC5/CapSense.c ****     
 374              		.loc 1 535 0
 375 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 376              	.LVL31:
 549:Generated_Source\PSoC5/CapSense.c ****     
 377              		.loc 1 549 0
 378 0016 124A     		ldr	r2, .L34+8
 379 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 380 001a 03F0DF03 		and	r3, r3, #223
 381 001e 1370     		strb	r3, [r2]
 588:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 382              		.loc 1 588 0
 383 0020 FFF7FEFF 		bl	CapSense_IntClock_Stop
 384              	.LVL32:
 592:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 385              		.loc 1 592 0
 386 0024 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 387              	.LVL33:
 594:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 388              		.loc 1 594 0
 389 0028 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 390              	.LVL34:
 616:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 391              		.loc 1 616 0
 392 002c 0D4A     		ldr	r2, .L34+12
 393 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 0030 03F0FE03 		and	r3, r3, #254
 395 0034 1370     		strb	r3, [r2]
 617:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 396              		.loc 1 617 0
 397 0036 A2F5A652 		sub	r2, r2, #5312
 398 003a 053A     		subs	r2, r2, #5
 399 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 400 003e 03F0EF03 		and	r3, r3, #239
 401 0042 1370     		strb	r3, [r2]
 618:Generated_Source\PSoC5/CapSense.c ****         
 402              		.loc 1 618 0
 403 0044 1032     		adds	r2, r2, #16
 404 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 405 0048 03F0EF03 		and	r3, r3, #239
 406 004c 1370     		strb	r3, [r2]
 628:Generated_Source\PSoC5/CapSense.c **** }
 407              		.loc 1 628 0
 408 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 409 0050 03F07F03 		and	r3, r3, #127
 410 0054 2370     		strb	r3, [r4]
 411 0056 10BD     		pop	{r4, pc}
 412              	.L35:
 413              		.align	2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 33


 414              	.L34:
 415 0058 7A640040 		.word	1073767546
 416 005c 80E100E0 		.word	-536813184
 417 0060 9D640040 		.word	1073767581
 418 0064 70580040 		.word	1073764464
 419              		.cfi_endproc
 420              	.LFE3:
 421              		.size	CapSense_Stop, .-CapSense_Stop
 422              		.section	.text.CapSense_PostScan,"ax",%progbits
 423              		.align	2
 424              		.global	CapSense_PostScan
 425              		.thumb
 426              		.thumb_func
 427              		.type	CapSense_PostScan, %function
 428              	CapSense_PostScan:
 429              	.LFB14:
1394:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1395:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1396:Generated_Source\PSoC5/CapSense.c ****     #else
1397:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1398:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1399:Generated_Source\PSoC5/CapSense.c **** }
1400:Generated_Source\PSoC5/CapSense.c **** 
1401:Generated_Source\PSoC5/CapSense.c **** 
1402:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1403:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1404:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1405:Generated_Source\PSoC5/CapSense.c **** *
1406:Generated_Source\PSoC5/CapSense.c **** * Summary:
1407:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1408:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1409:Generated_Source\PSoC5/CapSense.c **** *
1410:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1411:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1412:Generated_Source\PSoC5/CapSense.c **** *
1413:Generated_Source\PSoC5/CapSense.c **** * Return:
1414:Generated_Source\PSoC5/CapSense.c **** *  None
1415:Generated_Source\PSoC5/CapSense.c **** *
1416:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1417:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1418:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1419:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1420:Generated_Source\PSoC5/CapSense.c **** *
1421:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1422:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1423:Generated_Source\PSoC5/CapSense.c **** {
1424:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1425:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1426:Generated_Source\PSoC5/CapSense.c ****     
1427:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1428:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1429:Generated_Source\PSoC5/CapSense.c **** 
1430:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1431:Generated_Source\PSoC5/CapSense.c ****     
1432:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1433:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1434:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 34


1435:Generated_Source\PSoC5/CapSense.c **** 
1436:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1437:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1438:Generated_Source\PSoC5/CapSense.c ****         
1439:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1440:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1441:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1442:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1443:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1444:Generated_Source\PSoC5/CapSense.c ****             #else
1445:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1446:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1447:Generated_Source\PSoC5/CapSense.c **** 
1448:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1449:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1450:Generated_Source\PSoC5/CapSense.c ****             
1451:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1452:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1453:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1454:Generated_Source\PSoC5/CapSense.c ****             
1455:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1456:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1457:Generated_Source\PSoC5/CapSense.c ****                 
1458:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1459:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1460:Generated_Source\PSoC5/CapSense.c ****             
1461:Generated_Source\PSoC5/CapSense.c ****         #else
1462:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1463:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1464:Generated_Source\PSoC5/CapSense.c ****             
1465:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1466:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1467:Generated_Source\PSoC5/CapSense.c ****              
1468:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1469:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1470:Generated_Source\PSoC5/CapSense.c ****         
1471:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1472:Generated_Source\PSoC5/CapSense.c ****         
1473:Generated_Source\PSoC5/CapSense.c ****     #else
1474:Generated_Source\PSoC5/CapSense.c **** 
1475:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1476:Generated_Source\PSoC5/CapSense.c ****         {
1477:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1478:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1479:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1480:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1481:Generated_Source\PSoC5/CapSense.c ****                 #else
1482:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1483:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1484:Generated_Source\PSoC5/CapSense.c ****                 
1485:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1486:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1487:Generated_Source\PSoC5/CapSense.c ****                 
1488:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1489:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1490:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1491:Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 35


1492:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1493:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1494:Generated_Source\PSoC5/CapSense.c ****                     
1495:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1496:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1497:Generated_Source\PSoC5/CapSense.c ****                 
1498:Generated_Source\PSoC5/CapSense.c ****             #else
1499:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1500:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1501:Generated_Source\PSoC5/CapSense.c ****                 
1502:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1503:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1504:Generated_Source\PSoC5/CapSense.c ****                     
1505:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1506:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1507:Generated_Source\PSoC5/CapSense.c ****             
1508:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1509:Generated_Source\PSoC5/CapSense.c ****             
1510:Generated_Source\PSoC5/CapSense.c ****         }
1511:Generated_Source\PSoC5/CapSense.c ****         
1512:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1513:Generated_Source\PSoC5/CapSense.c ****         {
1514:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1515:Generated_Source\PSoC5/CapSense.c ****             
1516:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1517:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1518:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1519:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1520:Generated_Source\PSoC5/CapSense.c ****                 #else 
1521:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1522:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1523:Generated_Source\PSoC5/CapSense.c ****                 
1524:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1525:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1526:Generated_Source\PSoC5/CapSense.c ****                 
1527:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1528:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1529:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1530:Generated_Source\PSoC5/CapSense.c ****                 
1531:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1532:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1533:Generated_Source\PSoC5/CapSense.c ****                     
1534:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1535:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1536:Generated_Source\PSoC5/CapSense.c ****                 
1537:Generated_Source\PSoC5/CapSense.c ****             #else
1538:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1539:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1540:Generated_Source\PSoC5/CapSense.c ****                 
1541:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1542:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1543:Generated_Source\PSoC5/CapSense.c ****                 
1544:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1545:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1546:Generated_Source\PSoC5/CapSense.c ****             
1547:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1548:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 36


1549:Generated_Source\PSoC5/CapSense.c ****     
1550:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1551:Generated_Source\PSoC5/CapSense.c ****     
1552:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1553:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1554:Generated_Source\PSoC5/CapSense.c ****     
1555:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1556:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1557:Generated_Source\PSoC5/CapSense.c **** 
1558:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1559:Generated_Source\PSoC5/CapSense.c **** 
1560:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1561:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1562:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1563:Generated_Source\PSoC5/CapSense.c **** }
1564:Generated_Source\PSoC5/CapSense.c **** 
1565:Generated_Source\PSoC5/CapSense.c **** 
1566:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1567:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1568:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1569:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1570:Generated_Source\PSoC5/CapSense.c ****     *
1571:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1572:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1573:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1574:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1575:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1576:Generated_Source\PSoC5/CapSense.c ****     *
1577:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1578:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1579:Generated_Source\PSoC5/CapSense.c ****     *
1580:Generated_Source\PSoC5/CapSense.c ****     * Return:
1581:Generated_Source\PSoC5/CapSense.c ****     *  None
1582:Generated_Source\PSoC5/CapSense.c ****     *
1583:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1584:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1585:Generated_Source\PSoC5/CapSense.c ****     *
1586:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1587:Generated_Source\PSoC5/CapSense.c ****     *  No
1588:Generated_Source\PSoC5/CapSense.c ****     *
1589:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1590:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1591:Generated_Source\PSoC5/CapSense.c ****     {
 430              		.loc 1 1591 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL35:
 435 0000 10B5     		push	{r4, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 4, -8
 438              		.cfi_offset 14, -4
1592:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1593:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 439              		.loc 1 1593 0
 440 0002 0E4A     		ldr	r2, .L38
 441 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 37


 442 0006 03F0FC03 		and	r3, r3, #252
 443 000a 1370     		strb	r3, [r2]
1594:Generated_Source\PSoC5/CapSense.c ****         
1595:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1596:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1597:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1598:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1599:Generated_Source\PSoC5/CapSense.c ****         #else
1600:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 444              		.loc 1 1600 0
 445 000c 0C4B     		ldr	r3, .L38+4
 446 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 447 0010 1B02     		lsls	r3, r3, #8
 448 0012 0C49     		ldr	r1, .L38+8
 449 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1601:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 450              		.loc 1 1601 0
 451 0018 6B3A     		subs	r2, r2, #107
 452 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 453 001c 1343     		orrs	r3, r3, r2
1602:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 454              		.loc 1 1602 0
 455 001e DB43     		mvns	r3, r3
 456 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1603:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1604:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1605:Generated_Source\PSoC5/CapSense.c ****         
1606:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1607:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 457              		.loc 1 1607 0
 458 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 459              	.LVL36:
1608:Generated_Source\PSoC5/CapSense.c ****         
1609:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1610:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1611:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 460              		.loc 1 1611 0
 461 0028 0020     		movs	r0, #0
 462 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 463              	.LVL37:
1612:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1613:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1614:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1615:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1616:Generated_Source\PSoC5/CapSense.c ****         #else
1617:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1618:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1619:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1620:Generated_Source\PSoC5/CapSense.c ****             
1621:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1622:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1623:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1624:Generated_Source\PSoC5/CapSense.c ****         #else
1625:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 464              		.loc 1 1625 0
 465 002e 064A     		ldr	r2, .L38+12
 466 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 38


 467 0032 43F00103 		orr	r3, r3, #1
 468 0036 1370     		strb	r3, [r2]
 469 0038 10BD     		pop	{r4, pc}
 470              	.L39:
 471 003a 00BF     		.align	2
 472              	.L38:
 473 003c 7A640040 		.word	1073767546
 474 0040 1F640040 		.word	1073767455
 475 0044 00000000 		.word	CapSense_sensorRaw
 476 0048 70580040 		.word	1073764464
 477              		.cfi_endproc
 478              	.LFE14:
 479              		.size	CapSense_PostScan, .-CapSense_PostScan
 480              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 481              		.align	2
 482              		.global	CapSense_SetPrescaler
 483              		.thumb
 484              		.thumb_func
 485              		.type	CapSense_SetPrescaler, %function
 486              	CapSense_SetPrescaler:
 487              	.LFB15:
1626:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1627:Generated_Source\PSoC5/CapSense.c ****     }
1628:Generated_Source\PSoC5/CapSense.c ****     
1629:Generated_Source\PSoC5/CapSense.c **** #else
1630:Generated_Source\PSoC5/CapSense.c **** 
1631:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1632:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1633:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1634:Generated_Source\PSoC5/CapSense.c ****     *
1635:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1636:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1637:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1638:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1639:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1640:Generated_Source\PSoC5/CapSense.c ****     *
1641:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1642:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1643:Generated_Source\PSoC5/CapSense.c ****     *
1644:Generated_Source\PSoC5/CapSense.c ****     * Return:
1645:Generated_Source\PSoC5/CapSense.c ****     *  None
1646:Generated_Source\PSoC5/CapSense.c ****     *
1647:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1648:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1649:Generated_Source\PSoC5/CapSense.c ****     *
1650:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1651:Generated_Source\PSoC5/CapSense.c ****     *  No
1652:Generated_Source\PSoC5/CapSense.c ****     *
1653:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1654:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1655:Generated_Source\PSoC5/CapSense.c ****     {
1656:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1657:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1658:Generated_Source\PSoC5/CapSense.c ****         {
1659:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1660:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1661:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 39


1662:Generated_Source\PSoC5/CapSense.c ****         
1663:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1664:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1665:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1666:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1667:Generated_Source\PSoC5/CapSense.c ****         #else
1668:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1669:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1670:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1671:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1672:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1673:Generated_Source\PSoC5/CapSense.c ****         
1674:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1675:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1676:Generated_Source\PSoC5/CapSense.c ****         
1677:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1678:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1679:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1680:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1681:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1682:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1683:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1684:Generated_Source\PSoC5/CapSense.c ****         #else
1685:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1686:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1687:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1688:Generated_Source\PSoC5/CapSense.c ****         
1689:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1690:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1691:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1692:Generated_Source\PSoC5/CapSense.c ****         #else
1693:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1694:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1695:Generated_Source\PSoC5/CapSense.c ****     }
1696:Generated_Source\PSoC5/CapSense.c ****     
1697:Generated_Source\PSoC5/CapSense.c ****     
1698:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1699:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1700:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1701:Generated_Source\PSoC5/CapSense.c ****     *
1702:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1703:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1704:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1705:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1706:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1707:Generated_Source\PSoC5/CapSense.c ****     *
1708:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1709:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1710:Generated_Source\PSoC5/CapSense.c ****     *
1711:Generated_Source\PSoC5/CapSense.c ****     * Return:
1712:Generated_Source\PSoC5/CapSense.c ****     *  None
1713:Generated_Source\PSoC5/CapSense.c ****     *
1714:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1715:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1716:Generated_Source\PSoC5/CapSense.c ****     *
1717:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1718:Generated_Source\PSoC5/CapSense.c ****     *  No
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 40


1719:Generated_Source\PSoC5/CapSense.c ****     *
1720:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1721:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1722:Generated_Source\PSoC5/CapSense.c ****     {
1723:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1724:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1725:Generated_Source\PSoC5/CapSense.c ****         {
1726:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1727:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1728:Generated_Source\PSoC5/CapSense.c ****         }
1729:Generated_Source\PSoC5/CapSense.c ****         
1730:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1731:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1732:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1733:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1734:Generated_Source\PSoC5/CapSense.c ****         #else
1735:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1736:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1737:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1738:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1739:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1740:Generated_Source\PSoC5/CapSense.c ****         
1741:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1742:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1743:Generated_Source\PSoC5/CapSense.c ****         
1744:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1745:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1746:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1747:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1748:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1749:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1750:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1751:Generated_Source\PSoC5/CapSense.c ****         #else
1752:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1753:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1754:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1755:Generated_Source\PSoC5/CapSense.c **** 
1756:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1757:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1758:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1759:Generated_Source\PSoC5/CapSense.c ****         #else
1760:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1761:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1762:Generated_Source\PSoC5/CapSense.c ****     }
1763:Generated_Source\PSoC5/CapSense.c ****     
1764:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1765:Generated_Source\PSoC5/CapSense.c **** 
1766:Generated_Source\PSoC5/CapSense.c **** 
1767:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1768:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1769:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1770:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1771:Generated_Source\PSoC5/CapSense.c ****     *
1772:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1773:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1774:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1775:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 41


1776:Generated_Source\PSoC5/CapSense.c ****     *
1777:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1778:Generated_Source\PSoC5/CapSense.c ****     *  None
1779:Generated_Source\PSoC5/CapSense.c ****     *
1780:Generated_Source\PSoC5/CapSense.c ****     * Return:
1781:Generated_Source\PSoC5/CapSense.c ****     *  None
1782:Generated_Source\PSoC5/CapSense.c ****     *
1783:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1784:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1785:Generated_Source\PSoC5/CapSense.c ****     {
1786:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1787:Generated_Source\PSoC5/CapSense.c ****         
1788:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1789:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1790:Generated_Source\PSoC5/CapSense.c ****         {
1791:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1792:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1793:Generated_Source\PSoC5/CapSense.c ****         }
1794:Generated_Source\PSoC5/CapSense.c ****     }
1795:Generated_Source\PSoC5/CapSense.c ****     
1796:Generated_Source\PSoC5/CapSense.c ****     
1797:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1798:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1799:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1800:Generated_Source\PSoC5/CapSense.c ****     *
1801:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1802:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1803:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1804:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1805:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1806:Generated_Source\PSoC5/CapSense.c ****     * 
1807:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1808:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1809:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1810:Generated_Source\PSoC5/CapSense.c ****     *
1811:Generated_Source\PSoC5/CapSense.c ****     * Return:
1812:Generated_Source\PSoC5/CapSense.c ****     *  None
1813:Generated_Source\PSoC5/CapSense.c ****     *
1814:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1815:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1816:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1817:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1818:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1819:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1820:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1821:Generated_Source\PSoC5/CapSense.c ****     *
1822:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1823:Generated_Source\PSoC5/CapSense.c ****     *  No
1824:Generated_Source\PSoC5/CapSense.c ****     *
1825:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1826:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1827:Generated_Source\PSoC5/CapSense.c ****     {
1828:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1829:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1830:Generated_Source\PSoC5/CapSense.c ****             
1831:Generated_Source\PSoC5/CapSense.c ****         #else
1832:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 42


1833:Generated_Source\PSoC5/CapSense.c ****             {
1834:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1835:Generated_Source\PSoC5/CapSense.c ****             }
1836:Generated_Source\PSoC5/CapSense.c ****             else
1837:Generated_Source\PSoC5/CapSense.c ****             {
1838:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1839:Generated_Source\PSoC5/CapSense.c ****             }
1840:Generated_Source\PSoC5/CapSense.c ****     
1841:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1842:Generated_Source\PSoC5/CapSense.c ****     }
1843:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1844:Generated_Source\PSoC5/CapSense.c **** 
1845:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1846:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1847:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1848:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1849:Generated_Source\PSoC5/CapSense.c ****     *
1850:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1851:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1852:Generated_Source\PSoC5/CapSense.c ****     *
1853:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1854:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1855:Generated_Source\PSoC5/CapSense.c ****     *
1856:Generated_Source\PSoC5/CapSense.c ****     * Return:
1857:Generated_Source\PSoC5/CapSense.c ****     *  None
1858:Generated_Source\PSoC5/CapSense.c ****     *
1859:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1860:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1861:Generated_Source\PSoC5/CapSense.c ****     {
 488              		.loc 1 1861 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL38:
1862:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1863:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1864:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 494              		.loc 1 1864 0
 495 0000 024B     		ldr	r3, .L41
 496 0002 1870     		strb	r0, [r3]
1865:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 497              		.loc 1 1865 0
 498 0004 4008     		lsrs	r0, r0, #1
 499              	.LVL39:
 500 0006 1033     		adds	r3, r3, #16
 501              	.LVL40:
 502 0008 1870     		strb	r0, [r3]
 503              	.LVL41:
 504 000a 7047     		bx	lr
 505              	.L42:
 506              		.align	2
 507              	.L41:
 508 000c 2A640040 		.word	1073767466
 509              		.cfi_endproc
 510              	.LFE15:
 511              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 43


 512              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 513              		.align	2
 514              		.global	CapSense_SetScanSlotSettings
 515              		.thumb
 516              		.thumb_func
 517              		.type	CapSense_SetScanSlotSettings, %function
 518              	CapSense_SetScanSlotSettings:
 519              	.LFB5:
 816:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 520              		.loc 1 816 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL42:
 525 0000 70B5     		push	{r4, r5, r6, lr}
 526              		.cfi_def_cfa_offset 16
 527              		.cfi_offset 4, -16
 528              		.cfi_offset 5, -12
 529              		.cfi_offset 6, -8
 530              		.cfi_offset 14, -4
 531 0002 0446     		mov	r4, r0
 821:Generated_Source\PSoC5/CapSense.c ****         
 532              		.loc 1 821 0
 533 0004 084B     		ldr	r3, .L45
 534 0006 0344     		add	r3, r3, r0
 535 0008 93F84450 		ldrb	r5, [r3, #68]	@ zero_extendqisi2
 536              	.LVL43:
 825:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 537              		.loc 1 825 0
 538 000c 074E     		ldr	r6, .L45+4
 539 000e 3318     		adds	r3, r6, r0
 540 0010 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 541              	.LVL44:
 542 0012 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 543              	.LVL45:
 833:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 544              		.loc 1 833 0
 545 0016 3544     		add	r5, r5, r6
 546              	.LVL46:
 547 0018 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 548 001a 054B     		ldr	r3, .L45+8
 549 001c 1A70     		strb	r2, [r3]
 838:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 550              		.loc 1 838 0
 551 001e 054B     		ldr	r3, .L45+12
 552 0020 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 553 0022 FFF7FEFF 		bl	CapSense_SetPrescaler
 554              	.LVL47:
 555 0026 70BD     		pop	{r4, r5, r6, pc}
 556              	.LVL48:
 557              	.L46:
 558              		.align	2
 559              	.L45:
 560 0028 00000000 		.word	.LANCHOR1
 561 002c 00000000 		.word	.LANCHOR0
 562 0030 5E640040 		.word	1073767518
 563 0034 00000000 		.word	CapSense_analogSwitchDivider
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 44


 564              		.cfi_endproc
 565              	.LFE5:
 566              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 567              		.section	.text.CapSense_PreScan,"ax",%progbits
 568              		.align	2
 569              		.global	CapSense_PreScan
 570              		.thumb
 571              		.thumb_func
 572              		.type	CapSense_PreScan, %function
 573              	CapSense_PreScan:
 574              	.LFB13:
1423:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 575              		.loc 1 1423 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              	.LVL49:
 580 0000 38B5     		push	{r3, r4, r5, lr}
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 3, -16
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 5, -8
 585              		.cfi_offset 14, -4
 586 0002 0546     		mov	r5, r0
1425:Generated_Source\PSoC5/CapSense.c ****     
 587              		.loc 1 1425 0
 588 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 589              	.LVL50:
1437:Generated_Source\PSoC5/CapSense.c ****         
 590              		.loc 1 1437 0
 591 0008 084C     		ldr	r4, .L49
 592 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 593 000c 43F00103 		orr	r3, r3, #1
 594 0010 2370     		strb	r3, [r4]
1445:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 595              		.loc 1 1445 0
 596 0012 074A     		ldr	r2, .L49+4
 597 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 598 0016 03F0FE03 		and	r3, r3, #254
 599 001a 1370     		strb	r3, [r2]
1449:Generated_Source\PSoC5/CapSense.c ****             
 600              		.loc 1 1449 0
 601 001c 2846     		mov	r0, r5
 602 001e FFF7FEFF 		bl	CapSense_EnableSensor
 603              	.LVL51:
1553:Generated_Source\PSoC5/CapSense.c ****     
 604              		.loc 1 1553 0
 605 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 606 0024 43F00203 		orr	r3, r3, #2
 607 0028 2370     		strb	r3, [r4]
 608 002a 38BD     		pop	{r3, r4, r5, pc}
 609              	.L50:
 610              		.align	2
 611              	.L49:
 612 002c 7A640040 		.word	1073767546
 613 0030 70580040 		.word	1073764464
 614              		.cfi_endproc
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 45


 615              	.LFE13:
 616              		.size	CapSense_PreScan, .-CapSense_PreScan
 617              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 618              		.align	2
 619              		.global	CapSense_ScanSensor
 620              		.thumb
 621              		.thumb_func
 622              		.type	CapSense_ScanSensor, %function
 623              	CapSense_ScanSensor:
 624              	.LFB6:
 928:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 625              		.loc 1 928 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              	.LVL52:
 630 0000 08B5     		push	{r3, lr}
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 3, -8
 633              		.cfi_offset 14, -4
 930:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 634              		.loc 1 930 0
 635 0002 054B     		ldr	r3, .L53
 636 0004 0022     		movs	r2, #0
 637 0006 1A70     		strb	r2, [r3]
 931:Generated_Source\PSoC5/CapSense.c ****     
 638              		.loc 1 931 0
 639 0008 044A     		ldr	r2, .L53+4
 640 000a 1070     		strb	r0, [r2]
 935:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 641              		.loc 1 935 0
 642 000c 8122     		movs	r2, #129
 643 000e 1A70     		strb	r2, [r3]
 936:Generated_Source\PSoC5/CapSense.c ****         
 644              		.loc 1 936 0
 645 0010 FFF7FEFF 		bl	CapSense_PreScan
 646              	.LVL53:
 647 0014 08BD     		pop	{r3, pc}
 648              	.L54:
 649 0016 00BF     		.align	2
 650              	.L53:
 651 0018 00000000 		.word	CapSense_csv
 652 001c 00000000 		.word	CapSense_sensorIndex
 653              		.cfi_endproc
 654              	.LFE6:
 655              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 656              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 657              		.align	2
 658              		.global	CapSense_ScanEnabledWidgets
 659              		.thumb
 660              		.thumb_func
 661              		.type	CapSense_ScanEnabledWidgets, %function
 662              	CapSense_ScanEnabledWidgets:
 663              	.LFB7:
1005:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 664              		.loc 1 1005 0
 665              		.cfi_startproc
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 46


 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668 0000 10B5     		push	{r4, lr}
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 4, -8
 671              		.cfi_offset 14, -4
1007:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 672              		.loc 1 1007 0
 673 0002 0022     		movs	r2, #0
 674 0004 0A4B     		ldr	r3, .L58
 675 0006 1A70     		strb	r2, [r3]
1008:Generated_Source\PSoC5/CapSense.c ****     
 676              		.loc 1 1008 0
 677 0008 0A4C     		ldr	r4, .L58+4
 678 000a FF23     		movs	r3, #255
 679 000c 2370     		strb	r3, [r4]
1012:Generated_Source\PSoC5/CapSense.c **** 
 680              		.loc 1 1012 0
 681 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 682 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 683              	.LVL54:
 684 0014 2070     		strb	r0, [r4]
1015:Generated_Source\PSoC5/CapSense.c ****         {
 685              		.loc 1 1015 0
 686 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 687 0018 DBB2     		uxtb	r3, r3
 688 001a 042B     		cmp	r3, #4
 689 001c 07D8     		bhi	.L55
1017:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 690              		.loc 1 1017 0
 691 001e 044A     		ldr	r2, .L58
 692 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 693 0022 43F00103 		orr	r3, r3, #1
 694 0026 1370     		strb	r3, [r2]
1018:Generated_Source\PSoC5/CapSense.c ****         }
 695              		.loc 1 1018 0
 696 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 697 002a FFF7FEFF 		bl	CapSense_PreScan
 698              	.LVL55:
 699              	.L55:
 700 002e 10BD     		pop	{r4, pc}
 701              	.L59:
 702              		.align	2
 703              	.L58:
 704 0030 00000000 		.word	CapSense_csv
 705 0034 00000000 		.word	CapSense_sensorIndex
 706              		.cfi_endproc
 707              	.LFE7:
 708              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 709              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 710              		.align	2
 711              		.global	CapSense_GetPrescaler
 712              		.thumb
 713              		.thumb_func
 714              		.type	CapSense_GetPrescaler, %function
 715              	CapSense_GetPrescaler:
 716              	.LFB16:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 47


1866:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1867:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1868:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1869:Generated_Source\PSoC5/CapSense.c ****         #else
1870:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1871:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1872:Generated_Source\PSoC5/CapSense.c ****     }
1873:Generated_Source\PSoC5/CapSense.c **** 
1874:Generated_Source\PSoC5/CapSense.c **** 
1875:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1876:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1877:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1878:Generated_Source\PSoC5/CapSense.c ****     *
1879:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1880:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1881:Generated_Source\PSoC5/CapSense.c ****     *
1882:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1883:Generated_Source\PSoC5/CapSense.c ****     *  None
1884:Generated_Source\PSoC5/CapSense.c ****     *
1885:Generated_Source\PSoC5/CapSense.c ****     * Return:
1886:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1887:Generated_Source\PSoC5/CapSense.c ****     *
1888:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1889:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1890:Generated_Source\PSoC5/CapSense.c ****     {
 717              		.loc 1 1890 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722              	.LVL56:
1891:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1892:Generated_Source\PSoC5/CapSense.c **** 
1893:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1894:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1895:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 723              		.loc 1 1895 0
 724 0000 014B     		ldr	r3, .L61
 725 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 726              	.LVL57:
1896:Generated_Source\PSoC5/CapSense.c ****             
1897:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1898:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1899:Generated_Source\PSoC5/CapSense.c ****             
1900:Generated_Source\PSoC5/CapSense.c ****         #else
1901:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1902:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1903:Generated_Source\PSoC5/CapSense.c ****         
1904:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1905:Generated_Source\PSoC5/CapSense.c ****     }
 727              		.loc 1 1905 0
 728 0004 7047     		bx	lr
 729              	.L62:
 730 0006 00BF     		.align	2
 731              	.L61:
 732 0008 2A640040 		.word	1073767466
 733              		.cfi_endproc
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 48


 734              	.LFE16:
 735              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 736              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 737              		.align	2
 738              		.global	CapSense_SetScanSpeed
 739              		.thumb
 740              		.thumb_func
 741              		.type	CapSense_SetScanSpeed, %function
 742              	CapSense_SetScanSpeed:
 743              	.LFB17:
1906:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1907:Generated_Source\PSoC5/CapSense.c **** 
1908:Generated_Source\PSoC5/CapSense.c **** 
1909:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1910:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1911:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1912:Generated_Source\PSoC5/CapSense.c **** *
1913:Generated_Source\PSoC5/CapSense.c **** * Summary:
1914:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1915:Generated_Source\PSoC5/CapSense.c **** *
1916:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1917:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1918:Generated_Source\PSoC5/CapSense.c **** *
1919:Generated_Source\PSoC5/CapSense.c **** * Return:
1920:Generated_Source\PSoC5/CapSense.c **** *  None
1921:Generated_Source\PSoC5/CapSense.c **** *
1922:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1923:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1924:Generated_Source\PSoC5/CapSense.c **** {
 744              		.loc 1 1924 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL58:
1925:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 750              		.loc 1 1925 0
 751 0000 014B     		ldr	r3, .L64
 752 0002 1870     		strb	r0, [r3]
 753 0004 7047     		bx	lr
 754              	.L65:
 755 0006 00BF     		.align	2
 756              	.L64:
 757 0008 8D640040 		.word	1073767565
 758              		.cfi_endproc
 759              	.LFE17:
 760              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 761              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 762              		.align	2
 763              		.global	CapSense_SetAnalogSwitchesSource
 764              		.thumb
 765              		.thumb_func
 766              		.type	CapSense_SetAnalogSwitchesSource, %function
 767              	CapSense_SetAnalogSwitchesSource:
 768              	.LFB18:
1926:Generated_Source\PSoC5/CapSense.c **** }
1927:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 49


1928:Generated_Source\PSoC5/CapSense.c **** 
1929:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1930:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1931:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1932:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1933:Generated_Source\PSoC5/CapSense.c ****     *
1934:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1935:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1936:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1937:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1938:Generated_Source\PSoC5/CapSense.c ****     *
1939:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1940:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1941:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1942:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1943:Generated_Source\PSoC5/CapSense.c ****     *
1944:Generated_Source\PSoC5/CapSense.c ****     * Return:
1945:Generated_Source\PSoC5/CapSense.c ****     *  None
1946:Generated_Source\PSoC5/CapSense.c ****     *
1947:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1948:Generated_Source\PSoC5/CapSense.c ****     *  No
1949:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1950:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1951:Generated_Source\PSoC5/CapSense.c ****                       
1952:Generated_Source\PSoC5/CapSense.c ****     {
 769              		.loc 1 1952 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774              	.LVL59:
1953:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 775              		.loc 1 1953 0
 776 0000 0128     		cmp	r0, #1
 777 0002 05D1     		bne	.L67
1954:Generated_Source\PSoC5/CapSense.c ****         {
1955:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 778              		.loc 1 1955 0
 779 0004 054A     		ldr	r2, .L69
 780 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 781 0008 03F0EF03 		and	r3, r3, #239
 782 000c 1370     		strb	r3, [r2]
 783 000e 7047     		bx	lr
 784              	.L67:
1956:Generated_Source\PSoC5/CapSense.c ****         }
1957:Generated_Source\PSoC5/CapSense.c ****         else
1958:Generated_Source\PSoC5/CapSense.c ****         {
1959:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 785              		.loc 1 1959 0
 786 0010 024A     		ldr	r2, .L69
 787 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 788 0014 43F01003 		orr	r3, r3, #16
 789 0018 1370     		strb	r3, [r2]
 790 001a 7047     		bx	lr
 791              	.L70:
 792              		.align	2
 793              	.L69:
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 50


 794 001c 7A640040 		.word	1073767546
 795              		.cfi_endproc
 796              	.LFE18:
 797              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 798              		.section	.text.CapSense_Init,"ax",%progbits
 799              		.align	2
 800              		.global	CapSense_Init
 801              		.thumb
 802              		.thumb_func
 803              		.type	CapSense_Init, %function
 804              	CapSense_Init:
 805              	.LFB0:
 109:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 806              		.loc 1 109 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810 0000 38B5     		push	{r3, r4, r5, lr}
 811              		.cfi_def_cfa_offset 16
 812              		.cfi_offset 3, -16
 813              		.cfi_offset 4, -12
 814              		.cfi_offset 5, -8
 815              		.cfi_offset 14, -4
 123:Generated_Source\PSoC5/CapSense.c **** 
 816              		.loc 1 123 0
 817 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 818              	.LVL60:
 139:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 819              		.loc 1 139 0
 820 0006 0220     		movs	r0, #2
 821 0008 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 822              	.LVL61:
 155:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 823              		.loc 1 155 0
 824 000c FFF7FEFF 		bl	CyEnterCriticalSection
 825              	.LVL62:
 156:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 826              		.loc 1 156 0
 827 0010 2E4A     		ldr	r2, .L73
 828 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 829 0014 43F00303 		orr	r3, r3, #3
 830 0018 1370     		strb	r3, [r2]
 157:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 831              		.loc 1 157 0
 832 001a 0132     		adds	r2, r2, #1
 833 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 834 001e 43F00303 		orr	r3, r3, #3
 835 0022 1370     		strb	r3, [r2]
 158:Generated_Source\PSoC5/CapSense.c ****         
 836              		.loc 1 158 0
 837 0024 FFF7FEFF 		bl	CyExitCriticalSection
 838              	.LVL63:
 161:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 839              		.loc 1 161 0
 840 0028 4FF43442 		mov	r2, #46080
 841 002c 284B     		ldr	r3, .L73+4
 842 002e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 51


 163:Generated_Source\PSoC5/CapSense.c ****                 
 843              		.loc 1 163 0
 844 0030 4FF6FF75 		movw	r5, #65535
 845 0034 2033     		adds	r3, r3, #32
 846 0036 1D80     		strh	r5, [r3]	@ movhi
 183:Generated_Source\PSoC5/CapSense.c ****     
 847              		.loc 1 183 0
 848 0038 0724     		movs	r4, #7
 849 003a 4133     		adds	r3, r3, #65
 850 003c 1C70     		strb	r4, [r3]
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 851              		.loc 1 199 0
 852 003e FFF7FEFF 		bl	CyEnterCriticalSection
 853              	.LVL64:
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 854              		.loc 1 200 0
 855 0042 244A     		ldr	r2, .L73+8
 856 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 857 0046 43F00303 		orr	r3, r3, #3
 858 004a 1370     		strb	r3, [r2]
 201:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 859              		.loc 1 201 0
 860 004c 0132     		adds	r2, r2, #1
 861 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 862 0050 43F00303 		orr	r3, r3, #3
 863 0054 1370     		strb	r3, [r2]
 202:Generated_Source\PSoC5/CapSense.c ****         
 864              		.loc 1 202 0
 865 0056 FFF7FEFF 		bl	CyExitCriticalSection
 866              	.LVL65:
 205:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 867              		.loc 1 205 0
 868 005a FF23     		movs	r3, #255
 869 005c 1E4A     		ldr	r2, .L73+12
 870 005e 1570     		strb	r5, [r2]
 206:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 871              		.loc 1 206 0
 872 0060 2032     		adds	r2, r2, #32
 873 0062 1370     		strb	r3, [r2]
 207:Generated_Source\PSoC5/CapSense.c ****         
 874              		.loc 1 207 0
 875 0064 403A     		subs	r2, r2, #64
 876 0066 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 877              		.loc 1 210 0
 878 0068 2132     		adds	r2, r2, #33
 879 006a 1370     		strb	r3, [r2]
 211:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 880              		.loc 1 211 0
 881 006c 3032     		adds	r2, r2, #48
 882 006e 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/CapSense.c ****         
 883              		.loc 1 212 0
 884 0070 103A     		subs	r2, r2, #16
 885 0072 1370     		strb	r3, [r2]
 251:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 886              		.loc 1 251 0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 52


 887 0074 0122     		movs	r2, #1
 888 0076 03F1E023 		add	r3, r3, #-536813568
 889 007a 8133     		adds	r3, r3, #129
 890 007c 1A60     		str	r2, [r3]
 252:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 891              		.loc 1 252 0
 892 007e 1749     		ldr	r1, .L73+16
 893 0080 0020     		movs	r0, #0
 894 0082 FFF7FEFF 		bl	CyIntSetVector
 895              	.LVL66:
 253:Generated_Source\PSoC5/CapSense.c ****     
 896              		.loc 1 253 0
 897 0086 2146     		mov	r1, r4
 898 0088 0020     		movs	r0, #0
 899 008a FFF7FEFF 		bl	CyIntSetPriority
 900              	.LVL67:
 262:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 901              		.loc 1 262 0
 902 008e FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 903              	.LVL68:
 263:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 904              		.loc 1 263 0
 905 0092 0520     		movs	r0, #5
 906 0094 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 907              	.LVL69:
 264:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 908              		.loc 1 264 0
 909 0098 0620     		movs	r0, #6
 910 009a FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 911              	.LVL70:
 266:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 912              		.loc 1 266 0
 913 009e 2046     		mov	r0, r4
 914 00a0 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 915              	.LVL71:
 284:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 916              		.loc 1 284 0
 917 00a4 0E4A     		ldr	r2, .L73+20
 918 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 919 00a8 43F00403 		orr	r3, r3, #4
 920 00ac 1370     		strb	r3, [r2]
 290:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 921              		.loc 1 290 0
 922 00ae FFF7FEFF 		bl	CapSense_CompCH0_Init
 923              	.LVL72:
 292:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 924              		.loc 1 292 0
 925 00b2 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 926              	.LVL73:
 293:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 927              		.loc 1 293 0
 928 00b6 0020     		movs	r0, #0
 929 00b8 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 930              	.LVL74:
 294:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 931              		.loc 1 294 0
 932 00bc 0420     		movs	r0, #4
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 53


 933 00be FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 934              	.LVL75:
 295:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 935              		.loc 1 295 0
 936 00c2 0020     		movs	r0, #0
 937 00c4 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 938              	.LVL76:
 939 00c8 38BD     		pop	{r3, r4, r5, pc}
 940              	.L74:
 941 00ca 00BF     		.align	2
 942              	.L73:
 943 00cc 9C640040 		.word	1073767580
 944 00d0 2C640040 		.word	1073767468
 945 00d4 9E640040 		.word	1073767582
 946 00d8 2E640040 		.word	1073767470
 947 00dc 00000000 		.word	CapSense_IsrCH0_ISR
 948 00e0 7A640040 		.word	1073767546
 949              		.cfi_endproc
 950              	.LFE0:
 951              		.size	CapSense_Init, .-CapSense_Init
 952              		.section	.text.CapSense_Start,"ax",%progbits
 953              		.align	2
 954              		.global	CapSense_Start
 955              		.thumb
 956              		.thumb_func
 957              		.type	CapSense_Start, %function
 958              	CapSense_Start:
 959              	.LFB2:
 487:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 960              		.loc 1 487 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964 0000 08B5     		push	{r3, lr}
 965              		.cfi_def_cfa_offset 8
 966              		.cfi_offset 3, -8
 967              		.cfi_offset 14, -4
 488:Generated_Source\PSoC5/CapSense.c ****     {
 968              		.loc 1 488 0
 969 0002 084B     		ldr	r3, .L78
 970 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 0006 23B9     		cbnz	r3, .L76
 490:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 972              		.loc 1 490 0
 973 0008 FFF7FEFF 		bl	CapSense_Init
 974              	.LVL77:
 491:Generated_Source\PSoC5/CapSense.c ****     }
 975              		.loc 1 491 0
 976 000c 0122     		movs	r2, #1
 977 000e 054B     		ldr	r3, .L78
 978 0010 1A70     		strb	r2, [r3]
 979              	.L76:
 493:Generated_Source\PSoC5/CapSense.c ****     
 980              		.loc 1 493 0
 981 0012 FFF7FEFF 		bl	CapSense_Enable
 982              	.LVL78:
 498:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 54


 983              		.loc 1 498 0
 984 0016 FFF7FEFF 		bl	CapSense_AutoTune
 985              	.LVL79:
 499:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 986              		.loc 1 499 0
 987 001a 0122     		movs	r2, #1
 988 001c 024B     		ldr	r3, .L78+4
 989 001e 5A73     		strb	r2, [r3, #13]
 990 0020 08BD     		pop	{r3, pc}
 991              	.L79:
 992 0022 00BF     		.align	2
 993              	.L78:
 994 0024 00000000 		.word	.LANCHOR2
 995 0028 00000000 		.word	.LANCHOR0
 996              		.cfi_endproc
 997              	.LFE2:
 998              		.size	CapSense_Start, .-CapSense_Start
 999              		.global	CapSense_widgetNumber
 1000              		.comm	CapSense_analogSwitchDivider,5,4
 1001              		.global	CapSense_widgetResolution
 1002              		.global	CapSense_idacSettings
 1003              		.global	CapSense_csTable
 1004              		.global	CapSense_maskTable
 1005              		.global	CapSense_portTable
 1006              		.global	CapSense_pcTable
 1007              		.global	CapSense_sensorEnableMask
 1008              		.comm	CapSense_sensorRaw,10,4
 1009              		.global	CapSense_lowLevelTuningDone
 1010              		.comm	CapSense_sensorIndex,1,1
 1011              		.comm	CapSense_csv,1,1
 1012              		.section	.rodata
 1013              		.align	2
 1014              		.set	.LANCHOR1,. + 0
 1015              		.type	CapSense_portTable, %object
 1016              		.size	CapSense_portTable, 5
 1017              	CapSense_portTable:
 1018 0000 03       		.byte	3
 1019 0001 03       		.byte	3
 1020 0002 03       		.byte	3
 1021 0003 03       		.byte	3
 1022 0004 03       		.byte	3
 1023 0005 000000   		.space	3
 1024              		.type	CapSense_maskTable, %object
 1025              		.size	CapSense_maskTable, 5
 1026              	CapSense_maskTable:
 1027 0008 08       		.byte	8
 1028 0009 10       		.byte	16
 1029 000a 20       		.byte	32
 1030 000b 40       		.byte	64
 1031 000c 80       		.byte	-128
 1032 000d 000000   		.space	3
 1033              		.type	CapSense_pcTable, %object
 1034              		.size	CapSense_pcTable, 20
 1035              	CapSense_pcTable:
 1036 0010 1B500040 		.word	1073762331
 1037 0014 1C500040 		.word	1073762332
 1038 0018 1D500040 		.word	1073762333
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 55


 1039 001c 1E500040 		.word	1073762334
 1040 0020 1F500040 		.word	1073762335
 1041              		.type	CapSense_csTable, %object
 1042              		.size	CapSense_csTable, 32
 1043              	CapSense_csTable:
 1044 0024 06520040 		.word	1073762822
 1045 0028 0E520040 		.word	1073762830
 1046 002c 16520040 		.word	1073762838
 1047 0030 1E520040 		.word	1073762846
 1048 0034 26520040 		.word	1073762854
 1049 0038 2E520040 		.word	1073762862
 1050 003c 36520040 		.word	1073762870
 1051 0040 7E520040 		.word	1073762942
 1052              		.type	CapSense_widgetNumber, %object
 1053              		.size	CapSense_widgetNumber, 5
 1054              	CapSense_widgetNumber:
 1055 0044 00000000 		.space	5
 1055      00
 1056              		.data
 1057              		.align	2
 1058              		.set	.LANCHOR0,. + 0
 1059              		.type	CapSense_sensorEnableMask, %object
 1060              		.size	CapSense_sensorEnableMask, 1
 1061              	CapSense_sensorEnableMask:
 1062 0000 1F       		.byte	31
 1063 0001 000000   		.space	3
 1064              		.type	CapSense_idacSettings, %object
 1065              		.size	CapSense_idacSettings, 5
 1066              	CapSense_idacSettings:
 1067 0004 C8       		.byte	-56
 1068 0005 C8       		.byte	-56
 1069 0006 C8       		.byte	-56
 1070 0007 C8       		.byte	-56
 1071 0008 C8       		.byte	-56
 1072 0009 000000   		.space	3
 1073              		.type	CapSense_widgetResolution, %object
 1074              		.size	CapSense_widgetResolution, 1
 1075              	CapSense_widgetResolution:
 1076 000c 03       		.byte	3
 1077              		.type	CapSense_lowLevelTuningDone, %object
 1078              		.size	CapSense_lowLevelTuningDone, 1
 1079              	CapSense_lowLevelTuningDone:
 1080 000d 01       		.byte	1
 1081              		.bss
 1082              		.set	.LANCHOR2,. + 0
 1083              		.type	CapSense_initVar, %object
 1084              		.size	CapSense_initVar, 1
 1085              	CapSense_initVar:
 1086 0000 00       		.space	1
 1087              		.text
 1088              	.Letext0:
 1089              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1090              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1091              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1092              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1093              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1094              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 56


 1095              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1096              		.file 9 "Generated_Source\\PSoC5\\CapSense.h"
 1097              		.section	.debug_info,"",%progbits
 1098              	.Ldebug_info0:
 1099 0000 3C080000 		.4byte	0x83c
 1100 0004 0400     		.2byte	0x4
 1101 0006 00000000 		.4byte	.Ldebug_abbrev0
 1102 000a 04       		.byte	0x4
 1103 000b 01       		.uleb128 0x1
 1104 000c 88040000 		.4byte	.LASF81
 1105 0010 0C       		.byte	0xc
 1106 0011 2A000000 		.4byte	.LASF82
 1107 0015 22060000 		.4byte	.LASF83
 1108 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1109 001d 00000000 		.4byte	0
 1110 0021 00000000 		.4byte	.Ldebug_line0
 1111 0025 02       		.uleb128 0x2
 1112 0026 01       		.byte	0x1
 1113 0027 06       		.byte	0x6
 1114 0028 10010000 		.4byte	.LASF0
 1115 002c 02       		.uleb128 0x2
 1116 002d 01       		.byte	0x1
 1117 002e 08       		.byte	0x8
 1118 002f 06040000 		.4byte	.LASF1
 1119 0033 02       		.uleb128 0x2
 1120 0034 02       		.byte	0x2
 1121 0035 05       		.byte	0x5
 1122 0036 44040000 		.4byte	.LASF2
 1123 003a 02       		.uleb128 0x2
 1124 003b 02       		.byte	0x2
 1125 003c 07       		.byte	0x7
 1126 003d CB020000 		.4byte	.LASF3
 1127 0041 02       		.uleb128 0x2
 1128 0042 04       		.byte	0x4
 1129 0043 05       		.byte	0x5
 1130 0044 3D010000 		.4byte	.LASF4
 1131 0048 02       		.uleb128 0x2
 1132 0049 04       		.byte	0x4
 1133 004a 07       		.byte	0x7
 1134 004b 64020000 		.4byte	.LASF5
 1135 004f 02       		.uleb128 0x2
 1136 0050 08       		.byte	0x8
 1137 0051 05       		.byte	0x5
 1138 0052 02010000 		.4byte	.LASF6
 1139 0056 02       		.uleb128 0x2
 1140 0057 08       		.byte	0x8
 1141 0058 07       		.byte	0x7
 1142 0059 AD000000 		.4byte	.LASF7
 1143 005d 03       		.uleb128 0x3
 1144 005e 04       		.byte	0x4
 1145 005f 05       		.byte	0x5
 1146 0060 696E7400 		.ascii	"int\000"
 1147 0064 02       		.uleb128 0x2
 1148 0065 04       		.byte	0x4
 1149 0066 07       		.byte	0x7
 1150 0067 27020000 		.4byte	.LASF8
 1151 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 57


 1152 006c 4C010000 		.4byte	.LASF9
 1153 0070 02       		.byte	0x2
 1154 0071 E401     		.2byte	0x1e4
 1155 0073 2C000000 		.4byte	0x2c
 1156 0077 04       		.uleb128 0x4
 1157 0078 00000000 		.4byte	.LASF10
 1158 007c 02       		.byte	0x2
 1159 007d E501     		.2byte	0x1e5
 1160 007f 3A000000 		.4byte	0x3a
 1161 0083 04       		.uleb128 0x4
 1162 0084 C8010000 		.4byte	.LASF11
 1163 0088 02       		.byte	0x2
 1164 0089 E601     		.2byte	0x1e6
 1165 008b 48000000 		.4byte	0x48
 1166 008f 02       		.uleb128 0x2
 1167 0090 04       		.byte	0x4
 1168 0091 04       		.byte	0x4
 1169 0092 D9030000 		.4byte	.LASF12
 1170 0096 02       		.uleb128 0x2
 1171 0097 08       		.byte	0x8
 1172 0098 04       		.byte	0x4
 1173 0099 68010000 		.4byte	.LASF13
 1174 009d 02       		.uleb128 0x2
 1175 009e 01       		.byte	0x1
 1176 009f 08       		.byte	0x8
 1177 00a0 16050000 		.4byte	.LASF14
 1178 00a4 04       		.uleb128 0x4
 1179 00a5 E9030000 		.4byte	.LASF15
 1180 00a9 02       		.byte	0x2
 1181 00aa 8E02     		.2byte	0x28e
 1182 00ac B0000000 		.4byte	0xb0
 1183 00b0 05       		.uleb128 0x5
 1184 00b1 6B000000 		.4byte	0x6b
 1185 00b5 04       		.uleb128 0x4
 1186 00b6 46010000 		.4byte	.LASF16
 1187 00ba 02       		.byte	0x2
 1188 00bb 8F02     		.2byte	0x28f
 1189 00bd C1000000 		.4byte	0xc1
 1190 00c1 05       		.uleb128 0x5
 1191 00c2 77000000 		.4byte	0x77
 1192 00c6 04       		.uleb128 0x4
 1193 00c7 2D030000 		.4byte	.LASF17
 1194 00cb 02       		.byte	0x2
 1195 00cc 9002     		.2byte	0x290
 1196 00ce D2000000 		.4byte	0xd2
 1197 00d2 05       		.uleb128 0x5
 1198 00d3 83000000 		.4byte	0x83
 1199 00d7 02       		.uleb128 0x2
 1200 00d8 08       		.byte	0x8
 1201 00d9 04       		.byte	0x4
 1202 00da 6A030000 		.4byte	.LASF18
 1203 00de 02       		.uleb128 0x2
 1204 00df 04       		.byte	0x4
 1205 00e0 07       		.byte	0x7
 1206 00e1 50030000 		.4byte	.LASF19
 1207 00e5 06       		.uleb128 0x6
 1208 00e6 DC000000 		.4byte	.LASF26
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 58


 1209 00ea 01       		.byte	0x1
 1210 00eb 4D01     		.2byte	0x14d
 1211 00ed 00000000 		.4byte	.LFB1
 1212 00f1 68000000 		.4byte	.LFE1-.LFB1
 1213 00f5 01       		.uleb128 0x1
 1214 00f6 9C       		.byte	0x9c
 1215 00f7 40010000 		.4byte	0x140
 1216 00fb 07       		.uleb128 0x7
 1217 00fc 7F050000 		.4byte	.LASF20
 1218 0100 01       		.byte	0x1
 1219 0101 4F01     		.2byte	0x14f
 1220 0103 6B000000 		.4byte	0x6b
 1221 0107 00000000 		.4byte	.LLST0
 1222 010b 08       		.uleb128 0x8
 1223 010c 06000000 		.4byte	.LVL0
 1224 0110 6D070000 		.4byte	0x76d
 1225 0114 08       		.uleb128 0x8
 1226 0115 16000000 		.4byte	.LVL2
 1227 0119 78070000 		.4byte	0x778
 1228 011d 08       		.uleb128 0x8
 1229 011e 1A000000 		.4byte	.LVL3
 1230 0122 83070000 		.4byte	0x783
 1231 0126 08       		.uleb128 0x8
 1232 0127 1E000000 		.4byte	.LVL4
 1233 012b 8E070000 		.4byte	0x78e
 1234 012f 09       		.uleb128 0x9
 1235 0130 46000000 		.4byte	.LVL5
 1236 0134 99070000 		.4byte	0x799
 1237 0138 0A       		.uleb128 0xa
 1238 0139 01       		.uleb128 0x1
 1239 013a 50       		.byte	0x50
 1240 013b 02       		.uleb128 0x2
 1241 013c 74       		.byte	0x74
 1242 013d 00       		.sleb128 0
 1243 013e 00       		.byte	0
 1244 013f 00       		.byte	0
 1245 0140 0B       		.uleb128 0xb
 1246 0141 EE030000 		.4byte	.LASF22
 1247 0145 01       		.byte	0x1
 1248 0146 9502     		.2byte	0x295
 1249 0148 6B000000 		.4byte	0x6b
 1250 014c 00000000 		.4byte	.LFB4
 1251 0150 20000000 		.4byte	.LFE4-.LFB4
 1252 0154 01       		.uleb128 0x1
 1253 0155 9C       		.byte	0x9c
 1254 0156 89010000 		.4byte	0x189
 1255 015a 0C       		.uleb128 0xc
 1256 015b A4000000 		.4byte	.LASF24
 1257 015f 01       		.byte	0x1
 1258 0160 9502     		.2byte	0x295
 1259 0162 6B000000 		.4byte	0x6b
 1260 0166 13000000 		.4byte	.LLST1
 1261 016a 0D       		.uleb128 0xd
 1262 016b 706F7300 		.ascii	"pos\000"
 1263 016f 01       		.byte	0x1
 1264 0170 9702     		.2byte	0x297
 1265 0172 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 59


 1266 0176 01       		.uleb128 0x1
 1267 0177 52       		.byte	0x52
 1268 0178 07       		.uleb128 0x7
 1269 0179 8E030000 		.4byte	.LASF21
 1270 017d 01       		.byte	0x1
 1271 017e 9802     		.2byte	0x298
 1272 0180 6B000000 		.4byte	0x6b
 1273 0184 3F000000 		.4byte	.LLST2
 1274 0188 00       		.byte	0
 1275 0189 0E       		.uleb128 0xe
 1276 018a 65060000 		.4byte	.LASF84
 1277 018e 01       		.byte	0x1
 1278 018f 2104     		.2byte	0x421
 1279 0191 6B000000 		.4byte	0x6b
 1280 0195 00000000 		.4byte	.LFB8
 1281 0199 10000000 		.4byte	.LFE8-.LFB8
 1282 019d 01       		.uleb128 0x1
 1283 019e 9C       		.byte	0x9c
 1284 019f 0B       		.uleb128 0xb
 1285 01a0 B1010000 		.4byte	.LASF23
 1286 01a4 01       		.byte	0x1
 1287 01a5 3A04     		.2byte	0x43a
 1288 01a7 77000000 		.4byte	0x77
 1289 01ab 00000000 		.4byte	.LFB9
 1290 01af 0C000000 		.4byte	.LFE9-.LFB9
 1291 01b3 01       		.uleb128 0x1
 1292 01b4 9C       		.byte	0x9c
 1293 01b5 CA010000 		.4byte	0x1ca
 1294 01b9 0C       		.uleb128 0xc
 1295 01ba F5020000 		.4byte	.LASF25
 1296 01be 01       		.byte	0x1
 1297 01bf 3A04     		.2byte	0x43a
 1298 01c1 6B000000 		.4byte	0x6b
 1299 01c5 52000000 		.4byte	.LLST3
 1300 01c9 00       		.byte	0
 1301 01ca 06       		.uleb128 0x6
 1302 01cb 6F010000 		.4byte	.LASF27
 1303 01cf 01       		.byte	0x1
 1304 01d0 E504     		.2byte	0x4e5
 1305 01d2 00000000 		.4byte	.LFB11
 1306 01d6 34000000 		.4byte	.LFE11-.LFB11
 1307 01da 01       		.uleb128 0x1
 1308 01db 9C       		.byte	0x9c
 1309 01dc 1A020000 		.4byte	0x21a
 1310 01e0 0C       		.uleb128 0xc
 1311 01e1 F5020000 		.4byte	.LASF25
 1312 01e5 01       		.byte	0x1
 1313 01e6 E504     		.2byte	0x4e5
 1314 01e8 6B000000 		.4byte	0x6b
 1315 01ec 73000000 		.4byte	.LLST4
 1316 01f0 07       		.uleb128 0x7
 1317 01f1 F9010000 		.4byte	.LASF28
 1318 01f5 01       		.byte	0x1
 1319 01f6 E704     		.2byte	0x4e7
 1320 01f8 6B000000 		.4byte	0x6b
 1321 01fc 94000000 		.4byte	.LLST5
 1322 0200 07       		.uleb128 0x7
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 60


 1323 0201 DE010000 		.4byte	.LASF29
 1324 0205 01       		.byte	0x1
 1325 0206 E804     		.2byte	0x4e8
 1326 0208 6B000000 		.4byte	0x6b
 1327 020c A7000000 		.4byte	.LLST6
 1328 0210 08       		.uleb128 0x8
 1329 0211 2C000000 		.4byte	.LVL17
 1330 0215 A4070000 		.4byte	0x7a4
 1331 0219 00       		.byte	0
 1332 021a 06       		.uleb128 0x6
 1333 021b A6050000 		.4byte	.LASF30
 1334 021f 01       		.byte	0x1
 1335 0220 3A05     		.2byte	0x53a
 1336 0222 00000000 		.4byte	.LFB12
 1337 0226 38000000 		.4byte	.LFE12-.LFB12
 1338 022a 01       		.uleb128 0x1
 1339 022b 9C       		.byte	0x9c
 1340 022c 71020000 		.4byte	0x271
 1341 0230 0C       		.uleb128 0xc
 1342 0231 F5020000 		.4byte	.LASF25
 1343 0235 01       		.byte	0x1
 1344 0236 3A05     		.2byte	0x53a
 1345 0238 6B000000 		.4byte	0x6b
 1346 023c BA000000 		.4byte	.LLST7
 1347 0240 07       		.uleb128 0x7
 1348 0241 F9010000 		.4byte	.LASF28
 1349 0245 01       		.byte	0x1
 1350 0246 3C05     		.2byte	0x53c
 1351 0248 6B000000 		.4byte	0x6b
 1352 024c DB000000 		.4byte	.LLST8
 1353 0250 07       		.uleb128 0x7
 1354 0251 DE010000 		.4byte	.LASF29
 1355 0255 01       		.byte	0x1
 1356 0256 3D05     		.2byte	0x53d
 1357 0258 6B000000 		.4byte	0x6b
 1358 025c EE000000 		.4byte	.LLST9
 1359 0260 09       		.uleb128 0x9
 1360 0261 10000000 		.4byte	.LVL22
 1361 0265 AF070000 		.4byte	0x7af
 1362 0269 0A       		.uleb128 0xa
 1363 026a 01       		.uleb128 0x1
 1364 026b 50       		.byte	0x50
 1365 026c 02       		.uleb128 0x2
 1366 026d 75       		.byte	0x75
 1367 026e 00       		.sleb128 0
 1368 026f 00       		.byte	0
 1369 0270 00       		.byte	0
 1370 0271 06       		.uleb128 0x6
 1371 0272 34020000 		.4byte	.LASF31
 1372 0276 01       		.byte	0x1
 1373 0277 4F04     		.2byte	0x44f
 1374 0279 00000000 		.4byte	.LFB10
 1375 027d 16000000 		.4byte	.LFE10-.LFB10
 1376 0281 01       		.uleb128 0x1
 1377 0282 9C       		.byte	0x9c
 1378 0283 A6020000 		.4byte	0x2a6
 1379 0287 0F       		.uleb128 0xf
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 61


 1380 0288 6900     		.ascii	"i\000"
 1381 028a 01       		.byte	0x1
 1382 028b 5104     		.2byte	0x451
 1383 028d 6B000000 		.4byte	0x6b
 1384 0291 01010000 		.4byte	.LLST10
 1385 0295 09       		.uleb128 0x9
 1386 0296 0C000000 		.4byte	.LVL28
 1387 029a 1A020000 		.4byte	0x21a
 1388 029e 0A       		.uleb128 0xa
 1389 029f 01       		.uleb128 0x1
 1390 02a0 50       		.byte	0x50
 1391 02a1 02       		.uleb128 0x2
 1392 02a2 74       		.byte	0x74
 1393 02a3 00       		.sleb128 0
 1394 02a4 00       		.byte	0
 1395 02a5 00       		.byte	0
 1396 02a6 06       		.uleb128 0x6
 1397 02a7 76030000 		.4byte	.LASF32
 1398 02ab 01       		.byte	0x1
 1399 02ac 0B02     		.2byte	0x20b
 1400 02ae 00000000 		.4byte	.LFB3
 1401 02b2 68000000 		.4byte	.LFE3-.LFB3
 1402 02b6 01       		.uleb128 0x1
 1403 02b7 9C       		.byte	0x9c
 1404 02b8 E1020000 		.4byte	0x2e1
 1405 02bc 08       		.uleb128 0x8
 1406 02bd 16000000 		.4byte	.LVL31
 1407 02c1 71020000 		.4byte	0x271
 1408 02c5 08       		.uleb128 0x8
 1409 02c6 24000000 		.4byte	.LVL32
 1410 02ca BA070000 		.4byte	0x7ba
 1411 02ce 08       		.uleb128 0x8
 1412 02cf 28000000 		.4byte	.LVL33
 1413 02d3 C5070000 		.4byte	0x7c5
 1414 02d7 08       		.uleb128 0x8
 1415 02d8 2C000000 		.4byte	.LVL34
 1416 02dc D0070000 		.4byte	0x7d0
 1417 02e0 00       		.byte	0
 1418 02e1 06       		.uleb128 0x6
 1419 02e2 6D050000 		.4byte	.LASF33
 1420 02e6 01       		.byte	0x1
 1421 02e7 3606     		.2byte	0x636
 1422 02e9 00000000 		.4byte	.LFB14
 1423 02ed 4C000000 		.4byte	.LFE14-.LFB14
 1424 02f1 01       		.uleb128 0x1
 1425 02f2 9C       		.byte	0x9c
 1426 02f3 20030000 		.4byte	0x320
 1427 02f7 0C       		.uleb128 0xc
 1428 02f8 F5020000 		.4byte	.LASF25
 1429 02fc 01       		.byte	0x1
 1430 02fd 3606     		.2byte	0x636
 1431 02ff 6B000000 		.4byte	0x6b
 1432 0303 2B010000 		.4byte	.LLST11
 1433 0307 08       		.uleb128 0x8
 1434 0308 28000000 		.4byte	.LVL36
 1435 030c 1A020000 		.4byte	0x21a
 1436 0310 09       		.uleb128 0x9
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 62


 1437 0311 2E000000 		.4byte	.LVL37
 1438 0315 DB070000 		.4byte	0x7db
 1439 0319 0A       		.uleb128 0xa
 1440 031a 01       		.uleb128 0x1
 1441 031b 50       		.byte	0x50
 1442 031c 01       		.uleb128 0x1
 1443 031d 30       		.byte	0x30
 1444 031e 00       		.byte	0
 1445 031f 00       		.byte	0
 1446 0320 06       		.uleb128 0x6
 1447 0321 EC000000 		.4byte	.LASF34
 1448 0325 01       		.byte	0x1
 1449 0326 4407     		.2byte	0x744
 1450 0328 00000000 		.4byte	.LFB15
 1451 032c 10000000 		.4byte	.LFE15-.LFB15
 1452 0330 01       		.uleb128 0x1
 1453 0331 9C       		.byte	0x9c
 1454 0332 47030000 		.4byte	0x347
 1455 0336 0C       		.uleb128 0xc
 1456 0337 DF030000 		.4byte	.LASF35
 1457 033b 01       		.byte	0x1
 1458 033c 4407     		.2byte	0x744
 1459 033e 6B000000 		.4byte	0x6b
 1460 0342 4C010000 		.4byte	.LLST12
 1461 0346 00       		.byte	0
 1462 0347 06       		.uleb128 0x6
 1463 0348 55040000 		.4byte	.LASF36
 1464 034c 01       		.byte	0x1
 1465 034d 2F03     		.2byte	0x32f
 1466 034f 00000000 		.4byte	.LFB5
 1467 0353 38000000 		.4byte	.LFE5-.LFB5
 1468 0357 01       		.uleb128 0x1
 1469 0358 9C       		.byte	0x9c
 1470 0359 90030000 		.4byte	0x390
 1471 035d 0C       		.uleb128 0xc
 1472 035e 16030000 		.4byte	.LASF37
 1473 0362 01       		.byte	0x1
 1474 0363 2F03     		.2byte	0x32f
 1475 0365 6B000000 		.4byte	0x6b
 1476 0369 88010000 		.4byte	.LLST13
 1477 036d 07       		.uleb128 0x7
 1478 036e 4E040000 		.4byte	.LASF38
 1479 0372 01       		.byte	0x1
 1480 0373 3103     		.2byte	0x331
 1481 0375 6B000000 		.4byte	0x6b
 1482 0379 A9010000 		.4byte	.LLST14
 1483 037d 08       		.uleb128 0x8
 1484 037e 16000000 		.4byte	.LVL45
 1485 0382 DB070000 		.4byte	0x7db
 1486 0386 08       		.uleb128 0x8
 1487 0387 26000000 		.4byte	.LVL47
 1488 038b 20030000 		.4byte	0x320
 1489 038f 00       		.byte	0
 1490 0390 06       		.uleb128 0x6
 1491 0391 BD050000 		.4byte	.LASF39
 1492 0395 01       		.byte	0x1
 1493 0396 8E05     		.2byte	0x58e
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 63


 1494 0398 00000000 		.4byte	.LFB13
 1495 039c 34000000 		.4byte	.LFE13-.LFB13
 1496 03a0 01       		.uleb128 0x1
 1497 03a1 9C       		.byte	0x9c
 1498 03a2 DB030000 		.4byte	0x3db
 1499 03a6 0C       		.uleb128 0xc
 1500 03a7 F5020000 		.4byte	.LASF25
 1501 03ab 01       		.byte	0x1
 1502 03ac 8E05     		.2byte	0x58e
 1503 03ae 6B000000 		.4byte	0x6b
 1504 03b2 CF010000 		.4byte	.LLST15
 1505 03b6 10       		.uleb128 0x10
 1506 03b7 08000000 		.4byte	.LVL50
 1507 03bb 47030000 		.4byte	0x347
 1508 03bf CA030000 		.4byte	0x3ca
 1509 03c3 0A       		.uleb128 0xa
 1510 03c4 01       		.uleb128 0x1
 1511 03c5 50       		.byte	0x50
 1512 03c6 02       		.uleb128 0x2
 1513 03c7 75       		.byte	0x75
 1514 03c8 00       		.sleb128 0
 1515 03c9 00       		.byte	0
 1516 03ca 09       		.uleb128 0x9
 1517 03cb 22000000 		.4byte	.LVL51
 1518 03cf CA010000 		.4byte	0x1ca
 1519 03d3 0A       		.uleb128 0xa
 1520 03d4 01       		.uleb128 0x1
 1521 03d5 50       		.byte	0x50
 1522 03d6 02       		.uleb128 0x2
 1523 03d7 75       		.byte	0x75
 1524 03d8 00       		.sleb128 0
 1525 03d9 00       		.byte	0
 1526 03da 00       		.byte	0
 1527 03db 06       		.uleb128 0x6
 1528 03dc 13020000 		.4byte	.LASF40
 1529 03e0 01       		.byte	0x1
 1530 03e1 9F03     		.2byte	0x39f
 1531 03e3 00000000 		.4byte	.LFB6
 1532 03e7 20000000 		.4byte	.LFE6-.LFB6
 1533 03eb 01       		.uleb128 0x1
 1534 03ec 9C       		.byte	0x9c
 1535 03ed 0B040000 		.4byte	0x40b
 1536 03f1 0C       		.uleb128 0xc
 1537 03f2 F5020000 		.4byte	.LASF25
 1538 03f6 01       		.byte	0x1
 1539 03f7 9F03     		.2byte	0x39f
 1540 03f9 6B000000 		.4byte	0x6b
 1541 03fd F0010000 		.4byte	.LLST16
 1542 0401 08       		.uleb128 0x8
 1543 0402 14000000 		.4byte	.LVL53
 1544 0406 90030000 		.4byte	0x390
 1545 040a 00       		.byte	0
 1546 040b 06       		.uleb128 0x6
 1547 040c EF050000 		.4byte	.LASF41
 1548 0410 01       		.byte	0x1
 1549 0411 EC03     		.2byte	0x3ec
 1550 0413 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 64


 1551 0417 38000000 		.4byte	.LFE7-.LFB7
 1552 041b 01       		.uleb128 0x1
 1553 041c 9C       		.byte	0x9c
 1554 041d 34040000 		.4byte	0x434
 1555 0421 08       		.uleb128 0x8
 1556 0422 14000000 		.4byte	.LVL54
 1557 0426 40010000 		.4byte	0x140
 1558 042a 08       		.uleb128 0x8
 1559 042b 2E000000 		.4byte	.LVL55
 1560 042f 90030000 		.4byte	0x390
 1561 0433 00       		.byte	0
 1562 0434 0B       		.uleb128 0xb
 1563 0435 72040000 		.4byte	.LASF42
 1564 0439 01       		.byte	0x1
 1565 043a 6107     		.2byte	0x761
 1566 043c 6B000000 		.4byte	0x6b
 1567 0440 00000000 		.4byte	.LFB16
 1568 0444 0C000000 		.4byte	.LFE16-.LFB16
 1569 0448 01       		.uleb128 0x1
 1570 0449 9C       		.byte	0x9c
 1571 044a 5F040000 		.4byte	0x45f
 1572 044e 07       		.uleb128 0x7
 1573 044f DF030000 		.4byte	.LASF35
 1574 0453 01       		.byte	0x1
 1575 0454 6307     		.2byte	0x763
 1576 0456 6B000000 		.4byte	0x6b
 1577 045a 11020000 		.4byte	.LLST17
 1578 045e 00       		.byte	0
 1579 045f 06       		.uleb128 0x6
 1580 0460 33050000 		.4byte	.LASF43
 1581 0464 01       		.byte	0x1
 1582 0465 8307     		.2byte	0x783
 1583 0467 00000000 		.4byte	.LFB17
 1584 046b 0C000000 		.4byte	.LFE17-.LFB17
 1585 046f 01       		.uleb128 0x1
 1586 0470 9C       		.byte	0x9c
 1587 0471 84040000 		.4byte	0x484
 1588 0475 11       		.uleb128 0x11
 1589 0476 84030000 		.4byte	.LASF44
 1590 047a 01       		.byte	0x1
 1591 047b 8307     		.2byte	0x783
 1592 047d 6B000000 		.4byte	0x6b
 1593 0481 01       		.uleb128 0x1
 1594 0482 50       		.byte	0x50
 1595 0483 00       		.byte	0
 1596 0484 06       		.uleb128 0x6
 1597 0485 1C010000 		.4byte	.LASF45
 1598 0489 01       		.byte	0x1
 1599 048a 9E07     		.2byte	0x79e
 1600 048c 00000000 		.4byte	.LFB18
 1601 0490 20000000 		.4byte	.LFE18-.LFB18
 1602 0494 01       		.uleb128 0x1
 1603 0495 9C       		.byte	0x9c
 1604 0496 A9040000 		.4byte	0x4a9
 1605 049a 12       		.uleb128 0x12
 1606 049b 73726300 		.ascii	"src\000"
 1607 049f 01       		.byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 65


 1608 04a0 9E07     		.2byte	0x79e
 1609 04a2 6B000000 		.4byte	0x6b
 1610 04a6 01       		.uleb128 0x1
 1611 04a7 50       		.byte	0x50
 1612 04a8 00       		.byte	0
 1613 04a9 13       		.uleb128 0x13
 1614 04aa CE050000 		.4byte	.LASF46
 1615 04ae 01       		.byte	0x1
 1616 04af 6C       		.byte	0x6c
 1617 04b0 00000000 		.4byte	.LFB0
 1618 04b4 E4000000 		.4byte	.LFE0-.LFB0
 1619 04b8 01       		.uleb128 0x1
 1620 04b9 9C       		.byte	0x9c
 1621 04ba C4050000 		.4byte	0x5c4
 1622 04be 14       		.uleb128 0x14
 1623 04bf 7F050000 		.4byte	.LASF20
 1624 04c3 01       		.byte	0x1
 1625 04c4 73       		.byte	0x73
 1626 04c5 6B000000 		.4byte	0x6b
 1627 04c9 30020000 		.4byte	.LLST18
 1628 04cd 08       		.uleb128 0x8
 1629 04ce 06000000 		.4byte	.LVL60
 1630 04d2 71020000 		.4byte	0x271
 1631 04d6 10       		.uleb128 0x10
 1632 04d7 0C000000 		.4byte	.LVL61
 1633 04db 84040000 		.4byte	0x484
 1634 04df E9040000 		.4byte	0x4e9
 1635 04e3 0A       		.uleb128 0xa
 1636 04e4 01       		.uleb128 0x1
 1637 04e5 50       		.byte	0x50
 1638 04e6 01       		.uleb128 0x1
 1639 04e7 32       		.byte	0x32
 1640 04e8 00       		.byte	0
 1641 04e9 08       		.uleb128 0x8
 1642 04ea 10000000 		.4byte	.LVL62
 1643 04ee 6D070000 		.4byte	0x76d
 1644 04f2 08       		.uleb128 0x8
 1645 04f3 28000000 		.4byte	.LVL63
 1646 04f7 99070000 		.4byte	0x799
 1647 04fb 08       		.uleb128 0x8
 1648 04fc 42000000 		.4byte	.LVL64
 1649 0500 6D070000 		.4byte	0x76d
 1650 0504 08       		.uleb128 0x8
 1651 0505 5A000000 		.4byte	.LVL65
 1652 0509 99070000 		.4byte	0x799
 1653 050d 10       		.uleb128 0x10
 1654 050e 86000000 		.4byte	.LVL66
 1655 0512 E6070000 		.4byte	0x7e6
 1656 0516 20050000 		.4byte	0x520
 1657 051a 0A       		.uleb128 0xa
 1658 051b 01       		.uleb128 0x1
 1659 051c 50       		.byte	0x50
 1660 051d 01       		.uleb128 0x1
 1661 051e 30       		.byte	0x30
 1662 051f 00       		.byte	0
 1663 0520 10       		.uleb128 0x10
 1664 0521 8E000000 		.4byte	.LVL67
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 66


 1665 0525 F1070000 		.4byte	0x7f1
 1666 0529 39050000 		.4byte	0x539
 1667 052d 0A       		.uleb128 0xa
 1668 052e 01       		.uleb128 0x1
 1669 052f 50       		.byte	0x50
 1670 0530 01       		.uleb128 0x1
 1671 0531 30       		.byte	0x30
 1672 0532 0A       		.uleb128 0xa
 1673 0533 01       		.uleb128 0x1
 1674 0534 51       		.byte	0x51
 1675 0535 02       		.uleb128 0x2
 1676 0536 74       		.byte	0x74
 1677 0537 00       		.sleb128 0
 1678 0538 00       		.byte	0
 1679 0539 08       		.uleb128 0x8
 1680 053a 92000000 		.4byte	.LVL68
 1681 053e FC070000 		.4byte	0x7fc
 1682 0542 10       		.uleb128 0x10
 1683 0543 98000000 		.4byte	.LVL69
 1684 0547 A4070000 		.4byte	0x7a4
 1685 054b 55050000 		.4byte	0x555
 1686 054f 0A       		.uleb128 0xa
 1687 0550 01       		.uleb128 0x1
 1688 0551 50       		.byte	0x50
 1689 0552 01       		.uleb128 0x1
 1690 0553 35       		.byte	0x35
 1691 0554 00       		.byte	0
 1692 0555 10       		.uleb128 0x10
 1693 0556 9E000000 		.4byte	.LVL70
 1694 055a A4070000 		.4byte	0x7a4
 1695 055e 68050000 		.4byte	0x568
 1696 0562 0A       		.uleb128 0xa
 1697 0563 01       		.uleb128 0x1
 1698 0564 50       		.byte	0x50
 1699 0565 01       		.uleb128 0x1
 1700 0566 36       		.byte	0x36
 1701 0567 00       		.byte	0
 1702 0568 10       		.uleb128 0x10
 1703 0569 A4000000 		.4byte	.LVL71
 1704 056d A4070000 		.4byte	0x7a4
 1705 0571 7C050000 		.4byte	0x57c
 1706 0575 0A       		.uleb128 0xa
 1707 0576 01       		.uleb128 0x1
 1708 0577 50       		.byte	0x50
 1709 0578 02       		.uleb128 0x2
 1710 0579 74       		.byte	0x74
 1711 057a 00       		.sleb128 0
 1712 057b 00       		.byte	0
 1713 057c 08       		.uleb128 0x8
 1714 057d B2000000 		.4byte	.LVL72
 1715 0581 07080000 		.4byte	0x807
 1716 0585 08       		.uleb128 0x8
 1717 0586 B6000000 		.4byte	.LVL73
 1718 058a 12080000 		.4byte	0x812
 1719 058e 10       		.uleb128 0x10
 1720 058f BC000000 		.4byte	.LVL74
 1721 0593 1D080000 		.4byte	0x81d
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 67


 1722 0597 A1050000 		.4byte	0x5a1
 1723 059b 0A       		.uleb128 0xa
 1724 059c 01       		.uleb128 0x1
 1725 059d 50       		.byte	0x50
 1726 059e 01       		.uleb128 0x1
 1727 059f 30       		.byte	0x30
 1728 05a0 00       		.byte	0
 1729 05a1 10       		.uleb128 0x10
 1730 05a2 C2000000 		.4byte	.LVL75
 1731 05a6 28080000 		.4byte	0x828
 1732 05aa B4050000 		.4byte	0x5b4
 1733 05ae 0A       		.uleb128 0xa
 1734 05af 01       		.uleb128 0x1
 1735 05b0 50       		.byte	0x50
 1736 05b1 01       		.uleb128 0x1
 1737 05b2 34       		.byte	0x34
 1738 05b3 00       		.byte	0
 1739 05b4 09       		.uleb128 0x9
 1740 05b5 C8000000 		.4byte	.LVL76
 1741 05b9 DB070000 		.4byte	0x7db
 1742 05bd 0A       		.uleb128 0xa
 1743 05be 01       		.uleb128 0x1
 1744 05bf 50       		.byte	0x50
 1745 05c0 01       		.uleb128 0x1
 1746 05c1 30       		.byte	0x30
 1747 05c2 00       		.byte	0
 1748 05c3 00       		.byte	0
 1749 05c4 06       		.uleb128 0x6
 1750 05c5 5E050000 		.4byte	.LASF47
 1751 05c9 01       		.byte	0x1
 1752 05ca E601     		.2byte	0x1e6
 1753 05cc 00000000 		.4byte	.LFB2
 1754 05d0 2C000000 		.4byte	.LFE2-.LFB2
 1755 05d4 01       		.uleb128 0x1
 1756 05d5 9C       		.byte	0x9c
 1757 05d6 F6050000 		.4byte	0x5f6
 1758 05da 08       		.uleb128 0x8
 1759 05db 0C000000 		.4byte	.LVL77
 1760 05df A9040000 		.4byte	0x4a9
 1761 05e3 08       		.uleb128 0x8
 1762 05e4 16000000 		.4byte	.LVL78
 1763 05e8 E5000000 		.4byte	0xe5
 1764 05ec 08       		.uleb128 0x8
 1765 05ed 1A000000 		.4byte	.LVL79
 1766 05f1 33080000 		.4byte	0x833
 1767 05f5 00       		.byte	0
 1768 05f6 15       		.uleb128 0x15
 1769 05f7 4C000000 		.4byte	.LASF48
 1770 05fb 01       		.byte	0x1
 1771 05fc 16       		.byte	0x16
 1772 05fd 6B000000 		.4byte	0x6b
 1773 0601 05       		.uleb128 0x5
 1774 0602 03       		.byte	0x3
 1775 0603 00000000 		.4byte	CapSense_initVar
 1776 0607 16       		.uleb128 0x16
 1777 0608 6E000000 		.4byte	.LASF49
 1778 060c 01       		.byte	0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 68


 1779 060d 1E       		.byte	0x1e
 1780 060e 6B000000 		.4byte	0x6b
 1781 0612 05       		.uleb128 0x5
 1782 0613 03       		.byte	0x3
 1783 0614 00000000 		.4byte	CapSense_lowLevelTuningDone
 1784 0618 16       		.uleb128 0x16
 1785 0619 07000000 		.4byte	.LASF50
 1786 061d 01       		.byte	0x1
 1787 061e 19       		.byte	0x19
 1788 061f B0000000 		.4byte	0xb0
 1789 0623 05       		.uleb128 0x5
 1790 0624 03       		.byte	0x3
 1791 0625 00000000 		.4byte	CapSense_csv
 1792 0629 16       		.uleb128 0x16
 1793 062a FE010000 		.4byte	.LASF51
 1794 062e 01       		.byte	0x1
 1795 062f 1A       		.byte	0x1a
 1796 0630 B0000000 		.4byte	0xb0
 1797 0634 05       		.uleb128 0x5
 1798 0635 03       		.byte	0x3
 1799 0636 00000000 		.4byte	CapSense_sensorIndex
 1800 063a 17       		.uleb128 0x17
 1801 063b 77000000 		.4byte	0x77
 1802 063f 4A060000 		.4byte	0x64a
 1803 0643 18       		.uleb128 0x18
 1804 0644 DE000000 		.4byte	0xde
 1805 0648 04       		.byte	0x4
 1806 0649 00       		.byte	0
 1807 064a 16       		.uleb128 0x16
 1808 064b DC050000 		.4byte	.LASF52
 1809 064f 01       		.byte	0x1
 1810 0650 29       		.byte	0x29
 1811 0651 3A060000 		.4byte	0x63a
 1812 0655 05       		.uleb128 0x5
 1813 0656 03       		.byte	0x3
 1814 0657 00000000 		.4byte	CapSense_sensorRaw
 1815 065b 17       		.uleb128 0x17
 1816 065c 6B000000 		.4byte	0x6b
 1817 0660 6B060000 		.4byte	0x66b
 1818 0664 18       		.uleb128 0x18
 1819 0665 DE000000 		.4byte	0xde
 1820 0669 00       		.byte	0
 1821 066a 00       		.byte	0
 1822 066b 16       		.uleb128 0x16
 1823 066c FC020000 		.4byte	.LASF53
 1824 0670 01       		.byte	0x1
 1825 0671 2B       		.byte	0x2b
 1826 0672 5B060000 		.4byte	0x65b
 1827 0676 05       		.uleb128 0x5
 1828 0677 03       		.byte	0x3
 1829 0678 00000000 		.4byte	CapSense_sensorEnableMask
 1830 067c 17       		.uleb128 0x17
 1831 067d 92060000 		.4byte	0x692
 1832 0681 8C060000 		.4byte	0x68c
 1833 0685 18       		.uleb128 0x18
 1834 0686 DE000000 		.4byte	0xde
 1835 068a 04       		.byte	0x4
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 69


 1836 068b 00       		.byte	0
 1837 068c 19       		.uleb128 0x19
 1838 068d 04       		.byte	0x4
 1839 068e 6B000000 		.4byte	0x6b
 1840 0692 1A       		.uleb128 0x1a
 1841 0693 8C060000 		.4byte	0x68c
 1842 0697 16       		.uleb128 0x16
 1843 0698 5D000000 		.4byte	.LASF54
 1844 069c 01       		.byte	0x1
 1845 069d 2E       		.byte	0x2e
 1846 069e A8060000 		.4byte	0x6a8
 1847 06a2 05       		.uleb128 0x5
 1848 06a3 03       		.byte	0x3
 1849 06a4 00000000 		.4byte	CapSense_pcTable
 1850 06a8 1A       		.uleb128 0x1a
 1851 06a9 7C060000 		.4byte	0x67c
 1852 06ad 17       		.uleb128 0x17
 1853 06ae BD060000 		.4byte	0x6bd
 1854 06b2 BD060000 		.4byte	0x6bd
 1855 06b6 18       		.uleb128 0x18
 1856 06b7 DE000000 		.4byte	0xde
 1857 06bb 04       		.byte	0x4
 1858 06bc 00       		.byte	0
 1859 06bd 1A       		.uleb128 0x1a
 1860 06be 6B000000 		.4byte	0x6b
 1861 06c2 16       		.uleb128 0x16
 1862 06c3 89020000 		.4byte	.LASF55
 1863 06c7 01       		.byte	0x1
 1864 06c8 36       		.byte	0x36
 1865 06c9 D3060000 		.4byte	0x6d3
 1866 06cd 05       		.uleb128 0x5
 1867 06ce 03       		.byte	0x3
 1868 06cf 00000000 		.4byte	CapSense_portTable
 1869 06d3 1A       		.uleb128 0x1a
 1870 06d4 AD060000 		.4byte	0x6ad
 1871 06d8 16       		.uleb128 0x16
 1872 06d9 76020000 		.4byte	.LASF56
 1873 06dd 01       		.byte	0x1
 1874 06de 3E       		.byte	0x3e
 1875 06df E9060000 		.4byte	0x6e9
 1876 06e3 05       		.uleb128 0x5
 1877 06e4 03       		.byte	0x3
 1878 06e5 00000000 		.4byte	CapSense_maskTable
 1879 06e9 1A       		.uleb128 0x1a
 1880 06ea AD060000 		.4byte	0x6ad
 1881 06ee 17       		.uleb128 0x17
 1882 06ef 92060000 		.4byte	0x692
 1883 06f3 FE060000 		.4byte	0x6fe
 1884 06f7 18       		.uleb128 0x18
 1885 06f8 DE000000 		.4byte	0xde
 1886 06fc 07       		.byte	0x7
 1887 06fd 00       		.byte	0
 1888 06fe 16       		.uleb128 0x16
 1889 06ff 59030000 		.4byte	.LASF57
 1890 0703 01       		.byte	0x1
 1891 0704 46       		.byte	0x46
 1892 0705 0F070000 		.4byte	0x70f
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 70


 1893 0709 05       		.uleb128 0x5
 1894 070a 03       		.byte	0x3
 1895 070b 00000000 		.4byte	CapSense_csTable
 1896 070f 1A       		.uleb128 0x1a
 1897 0710 EE060000 		.4byte	0x6ee
 1898 0714 17       		.uleb128 0x17
 1899 0715 6B000000 		.4byte	0x6b
 1900 0719 24070000 		.4byte	0x724
 1901 071d 18       		.uleb128 0x18
 1902 071e DE000000 		.4byte	0xde
 1903 0722 04       		.byte	0x4
 1904 0723 00       		.byte	0
 1905 0724 16       		.uleb128 0x16
 1906 0725 C3030000 		.4byte	.LASF58
 1907 0729 01       		.byte	0x1
 1908 072a 4C       		.byte	0x4c
 1909 072b 14070000 		.4byte	0x714
 1910 072f 05       		.uleb128 0x5
 1911 0730 03       		.byte	0x3
 1912 0731 00000000 		.4byte	CapSense_idacSettings
 1913 0735 16       		.uleb128 0x16
 1914 0736 2A040000 		.4byte	.LASF59
 1915 073a 01       		.byte	0x1
 1916 073b 50       		.byte	0x50
 1917 073c 5B060000 		.4byte	0x65b
 1918 0740 05       		.uleb128 0x5
 1919 0741 03       		.byte	0x3
 1920 0742 00000000 		.4byte	CapSense_widgetResolution
 1921 0746 16       		.uleb128 0x16
 1922 0747 33030000 		.4byte	.LASF60
 1923 074b 01       		.byte	0x1
 1924 074c 54       		.byte	0x54
 1925 074d 14070000 		.4byte	0x714
 1926 0751 05       		.uleb128 0x5
 1927 0752 03       		.byte	0x3
 1928 0753 00000000 		.4byte	CapSense_analogSwitchDivider
 1929 0757 16       		.uleb128 0x16
 1930 0758 9B010000 		.4byte	.LASF61
 1931 075c 01       		.byte	0x1
 1932 075d 55       		.byte	0x55
 1933 075e 68070000 		.4byte	0x768
 1934 0762 05       		.uleb128 0x5
 1935 0763 03       		.byte	0x3
 1936 0764 00000000 		.4byte	CapSense_widgetNumber
 1937 0768 1A       		.uleb128 0x1a
 1938 0769 AD060000 		.4byte	0x6ad
 1939 076d 1B       		.uleb128 0x1b
 1940 076e B4020000 		.4byte	.LASF62
 1941 0772 B4020000 		.4byte	.LASF62
 1942 0776 03       		.byte	0x3
 1943 0777 7D       		.byte	0x7d
 1944 0778 1B       		.uleb128 0x1b
 1945 0779 9C020000 		.4byte	.LASF63
 1946 077d 9C020000 		.4byte	.LASF63
 1947 0781 04       		.byte	0x4
 1948 0782 27       		.byte	0x27
 1949 0783 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 71


 1950 0784 C4000000 		.4byte	.LASF64
 1951 0788 C4000000 		.4byte	.LASF64
 1952 078c 05       		.byte	0x5
 1953 078d 46       		.byte	0x46
 1954 078e 1B       		.uleb128 0x1b
 1955 078f 1B050000 		.4byte	.LASF65
 1956 0793 1B050000 		.4byte	.LASF65
 1957 0797 06       		.byte	0x6
 1958 0798 46       		.byte	0x46
 1959 0799 1B       		.uleb128 0x1b
 1960 079a 14000000 		.4byte	.LASF66
 1961 079e 14000000 		.4byte	.LASF66
 1962 07a2 03       		.byte	0x3
 1963 07a3 7E       		.byte	0x7e
 1964 07a4 1B       		.uleb128 0x1b
 1965 07a5 49050000 		.4byte	.LASF67
 1966 07a9 49050000 		.4byte	.LASF67
 1967 07ad 07       		.byte	0x7
 1968 07ae 1A       		.byte	0x1a
 1969 07af 1B       		.uleb128 0x1b
 1970 07b0 0B060000 		.4byte	.LASF68
 1971 07b4 0B060000 		.4byte	.LASF68
 1972 07b8 07       		.byte	0x7
 1973 07b9 1B       		.byte	0x1b
 1974 07ba 1B       		.uleb128 0x1b
 1975 07bb DE020000 		.4byte	.LASF69
 1976 07bf DE020000 		.4byte	.LASF69
 1977 07c3 04       		.byte	0x4
 1978 07c4 28       		.byte	0x28
 1979 07c5 1B       		.uleb128 0x1b
 1980 07c6 90050000 		.4byte	.LASF70
 1981 07ca 90050000 		.4byte	.LASF70
 1982 07ce 05       		.byte	0x5
 1983 07cf 40       		.byte	0x40
 1984 07d0 1B       		.uleb128 0x1b
 1985 07d1 85010000 		.4byte	.LASF71
 1986 07d5 85010000 		.4byte	.LASF71
 1987 07d9 06       		.byte	0x6
 1988 07da 3D       		.byte	0x3d
 1989 07db 1B       		.uleb128 0x1b
 1990 07dc 8A000000 		.4byte	.LASF72
 1991 07e0 8A000000 		.4byte	.LASF72
 1992 07e4 06       		.byte	0x6
 1993 07e5 41       		.byte	0x41
 1994 07e6 1B       		.uleb128 0x1b
 1995 07e7 CF010000 		.4byte	.LASF73
 1996 07eb CF010000 		.4byte	.LASF73
 1997 07ef 03       		.byte	0x3
 1998 07f0 88       		.byte	0x88
 1999 07f1 1B       		.uleb128 0x1b
 2000 07f2 B2030000 		.4byte	.LASF74
 2001 07f6 B2030000 		.4byte	.LASF74
 2002 07fa 03       		.byte	0x3
 2003 07fb 8B       		.byte	0x8b
 2004 07fc 1B       		.uleb128 0x1b
 2005 07fd 52010000 		.4byte	.LASF75
 2006 0801 52010000 		.4byte	.LASF75
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 72


 2007 0805 08       		.byte	0x8
 2008 0806 1F       		.byte	0x1f
 2009 0807 1B       		.uleb128 0x1b
 2010 0808 E3010000 		.4byte	.LASF76
 2011 080c E3010000 		.4byte	.LASF76
 2012 0810 05       		.byte	0x5
 2013 0811 45       		.byte	0x45
 2014 0812 1B       		.uleb128 0x1b
 2015 0813 14040000 		.4byte	.LASF77
 2016 0817 14040000 		.4byte	.LASF77
 2017 081b 06       		.byte	0x6
 2018 081c 45       		.byte	0x45
 2019 081d 1B       		.uleb128 0x1b
 2020 081e 95030000 		.4byte	.LASF78
 2021 0822 95030000 		.4byte	.LASF78
 2022 0826 06       		.byte	0x6
 2023 0827 3F       		.byte	0x3f
 2024 0828 1B       		.uleb128 0x1b
 2025 0829 4A020000 		.4byte	.LASF79
 2026 082d 4A020000 		.4byte	.LASF79
 2027 0831 06       		.byte	0x6
 2028 0832 40       		.byte	0x40
 2029 0833 1C       		.uleb128 0x1c
 2030 0834 1B030000 		.4byte	.LASF80
 2031 0838 1B030000 		.4byte	.LASF80
 2032 083c 09       		.byte	0x9
 2033 083d AE02     		.2byte	0x2ae
 2034 083f 00       		.byte	0
 2035              		.section	.debug_abbrev,"",%progbits
 2036              	.Ldebug_abbrev0:
 2037 0000 01       		.uleb128 0x1
 2038 0001 11       		.uleb128 0x11
 2039 0002 01       		.byte	0x1
 2040 0003 25       		.uleb128 0x25
 2041 0004 0E       		.uleb128 0xe
 2042 0005 13       		.uleb128 0x13
 2043 0006 0B       		.uleb128 0xb
 2044 0007 03       		.uleb128 0x3
 2045 0008 0E       		.uleb128 0xe
 2046 0009 1B       		.uleb128 0x1b
 2047 000a 0E       		.uleb128 0xe
 2048 000b 55       		.uleb128 0x55
 2049 000c 17       		.uleb128 0x17
 2050 000d 11       		.uleb128 0x11
 2051 000e 01       		.uleb128 0x1
 2052 000f 10       		.uleb128 0x10
 2053 0010 17       		.uleb128 0x17
 2054 0011 00       		.byte	0
 2055 0012 00       		.byte	0
 2056 0013 02       		.uleb128 0x2
 2057 0014 24       		.uleb128 0x24
 2058 0015 00       		.byte	0
 2059 0016 0B       		.uleb128 0xb
 2060 0017 0B       		.uleb128 0xb
 2061 0018 3E       		.uleb128 0x3e
 2062 0019 0B       		.uleb128 0xb
 2063 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 73


 2064 001b 0E       		.uleb128 0xe
 2065 001c 00       		.byte	0
 2066 001d 00       		.byte	0
 2067 001e 03       		.uleb128 0x3
 2068 001f 24       		.uleb128 0x24
 2069 0020 00       		.byte	0
 2070 0021 0B       		.uleb128 0xb
 2071 0022 0B       		.uleb128 0xb
 2072 0023 3E       		.uleb128 0x3e
 2073 0024 0B       		.uleb128 0xb
 2074 0025 03       		.uleb128 0x3
 2075 0026 08       		.uleb128 0x8
 2076 0027 00       		.byte	0
 2077 0028 00       		.byte	0
 2078 0029 04       		.uleb128 0x4
 2079 002a 16       		.uleb128 0x16
 2080 002b 00       		.byte	0
 2081 002c 03       		.uleb128 0x3
 2082 002d 0E       		.uleb128 0xe
 2083 002e 3A       		.uleb128 0x3a
 2084 002f 0B       		.uleb128 0xb
 2085 0030 3B       		.uleb128 0x3b
 2086 0031 05       		.uleb128 0x5
 2087 0032 49       		.uleb128 0x49
 2088 0033 13       		.uleb128 0x13
 2089 0034 00       		.byte	0
 2090 0035 00       		.byte	0
 2091 0036 05       		.uleb128 0x5
 2092 0037 35       		.uleb128 0x35
 2093 0038 00       		.byte	0
 2094 0039 49       		.uleb128 0x49
 2095 003a 13       		.uleb128 0x13
 2096 003b 00       		.byte	0
 2097 003c 00       		.byte	0
 2098 003d 06       		.uleb128 0x6
 2099 003e 2E       		.uleb128 0x2e
 2100 003f 01       		.byte	0x1
 2101 0040 3F       		.uleb128 0x3f
 2102 0041 19       		.uleb128 0x19
 2103 0042 03       		.uleb128 0x3
 2104 0043 0E       		.uleb128 0xe
 2105 0044 3A       		.uleb128 0x3a
 2106 0045 0B       		.uleb128 0xb
 2107 0046 3B       		.uleb128 0x3b
 2108 0047 05       		.uleb128 0x5
 2109 0048 27       		.uleb128 0x27
 2110 0049 19       		.uleb128 0x19
 2111 004a 11       		.uleb128 0x11
 2112 004b 01       		.uleb128 0x1
 2113 004c 12       		.uleb128 0x12
 2114 004d 06       		.uleb128 0x6
 2115 004e 40       		.uleb128 0x40
 2116 004f 18       		.uleb128 0x18
 2117 0050 9742     		.uleb128 0x2117
 2118 0052 19       		.uleb128 0x19
 2119 0053 01       		.uleb128 0x1
 2120 0054 13       		.uleb128 0x13
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 74


 2121 0055 00       		.byte	0
 2122 0056 00       		.byte	0
 2123 0057 07       		.uleb128 0x7
 2124 0058 34       		.uleb128 0x34
 2125 0059 00       		.byte	0
 2126 005a 03       		.uleb128 0x3
 2127 005b 0E       		.uleb128 0xe
 2128 005c 3A       		.uleb128 0x3a
 2129 005d 0B       		.uleb128 0xb
 2130 005e 3B       		.uleb128 0x3b
 2131 005f 05       		.uleb128 0x5
 2132 0060 49       		.uleb128 0x49
 2133 0061 13       		.uleb128 0x13
 2134 0062 02       		.uleb128 0x2
 2135 0063 17       		.uleb128 0x17
 2136 0064 00       		.byte	0
 2137 0065 00       		.byte	0
 2138 0066 08       		.uleb128 0x8
 2139 0067 898201   		.uleb128 0x4109
 2140 006a 00       		.byte	0
 2141 006b 11       		.uleb128 0x11
 2142 006c 01       		.uleb128 0x1
 2143 006d 31       		.uleb128 0x31
 2144 006e 13       		.uleb128 0x13
 2145 006f 00       		.byte	0
 2146 0070 00       		.byte	0
 2147 0071 09       		.uleb128 0x9
 2148 0072 898201   		.uleb128 0x4109
 2149 0075 01       		.byte	0x1
 2150 0076 11       		.uleb128 0x11
 2151 0077 01       		.uleb128 0x1
 2152 0078 31       		.uleb128 0x31
 2153 0079 13       		.uleb128 0x13
 2154 007a 00       		.byte	0
 2155 007b 00       		.byte	0
 2156 007c 0A       		.uleb128 0xa
 2157 007d 8A8201   		.uleb128 0x410a
 2158 0080 00       		.byte	0
 2159 0081 02       		.uleb128 0x2
 2160 0082 18       		.uleb128 0x18
 2161 0083 9142     		.uleb128 0x2111
 2162 0085 18       		.uleb128 0x18
 2163 0086 00       		.byte	0
 2164 0087 00       		.byte	0
 2165 0088 0B       		.uleb128 0xb
 2166 0089 2E       		.uleb128 0x2e
 2167 008a 01       		.byte	0x1
 2168 008b 3F       		.uleb128 0x3f
 2169 008c 19       		.uleb128 0x19
 2170 008d 03       		.uleb128 0x3
 2171 008e 0E       		.uleb128 0xe
 2172 008f 3A       		.uleb128 0x3a
 2173 0090 0B       		.uleb128 0xb
 2174 0091 3B       		.uleb128 0x3b
 2175 0092 05       		.uleb128 0x5
 2176 0093 27       		.uleb128 0x27
 2177 0094 19       		.uleb128 0x19
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 75


 2178 0095 49       		.uleb128 0x49
 2179 0096 13       		.uleb128 0x13
 2180 0097 11       		.uleb128 0x11
 2181 0098 01       		.uleb128 0x1
 2182 0099 12       		.uleb128 0x12
 2183 009a 06       		.uleb128 0x6
 2184 009b 40       		.uleb128 0x40
 2185 009c 18       		.uleb128 0x18
 2186 009d 9742     		.uleb128 0x2117
 2187 009f 19       		.uleb128 0x19
 2188 00a0 01       		.uleb128 0x1
 2189 00a1 13       		.uleb128 0x13
 2190 00a2 00       		.byte	0
 2191 00a3 00       		.byte	0
 2192 00a4 0C       		.uleb128 0xc
 2193 00a5 05       		.uleb128 0x5
 2194 00a6 00       		.byte	0
 2195 00a7 03       		.uleb128 0x3
 2196 00a8 0E       		.uleb128 0xe
 2197 00a9 3A       		.uleb128 0x3a
 2198 00aa 0B       		.uleb128 0xb
 2199 00ab 3B       		.uleb128 0x3b
 2200 00ac 05       		.uleb128 0x5
 2201 00ad 49       		.uleb128 0x49
 2202 00ae 13       		.uleb128 0x13
 2203 00af 02       		.uleb128 0x2
 2204 00b0 17       		.uleb128 0x17
 2205 00b1 00       		.byte	0
 2206 00b2 00       		.byte	0
 2207 00b3 0D       		.uleb128 0xd
 2208 00b4 34       		.uleb128 0x34
 2209 00b5 00       		.byte	0
 2210 00b6 03       		.uleb128 0x3
 2211 00b7 08       		.uleb128 0x8
 2212 00b8 3A       		.uleb128 0x3a
 2213 00b9 0B       		.uleb128 0xb
 2214 00ba 3B       		.uleb128 0x3b
 2215 00bb 05       		.uleb128 0x5
 2216 00bc 49       		.uleb128 0x49
 2217 00bd 13       		.uleb128 0x13
 2218 00be 02       		.uleb128 0x2
 2219 00bf 18       		.uleb128 0x18
 2220 00c0 00       		.byte	0
 2221 00c1 00       		.byte	0
 2222 00c2 0E       		.uleb128 0xe
 2223 00c3 2E       		.uleb128 0x2e
 2224 00c4 00       		.byte	0
 2225 00c5 3F       		.uleb128 0x3f
 2226 00c6 19       		.uleb128 0x19
 2227 00c7 03       		.uleb128 0x3
 2228 00c8 0E       		.uleb128 0xe
 2229 00c9 3A       		.uleb128 0x3a
 2230 00ca 0B       		.uleb128 0xb
 2231 00cb 3B       		.uleb128 0x3b
 2232 00cc 05       		.uleb128 0x5
 2233 00cd 27       		.uleb128 0x27
 2234 00ce 19       		.uleb128 0x19
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 76


 2235 00cf 49       		.uleb128 0x49
 2236 00d0 13       		.uleb128 0x13
 2237 00d1 11       		.uleb128 0x11
 2238 00d2 01       		.uleb128 0x1
 2239 00d3 12       		.uleb128 0x12
 2240 00d4 06       		.uleb128 0x6
 2241 00d5 40       		.uleb128 0x40
 2242 00d6 18       		.uleb128 0x18
 2243 00d7 9742     		.uleb128 0x2117
 2244 00d9 19       		.uleb128 0x19
 2245 00da 00       		.byte	0
 2246 00db 00       		.byte	0
 2247 00dc 0F       		.uleb128 0xf
 2248 00dd 34       		.uleb128 0x34
 2249 00de 00       		.byte	0
 2250 00df 03       		.uleb128 0x3
 2251 00e0 08       		.uleb128 0x8
 2252 00e1 3A       		.uleb128 0x3a
 2253 00e2 0B       		.uleb128 0xb
 2254 00e3 3B       		.uleb128 0x3b
 2255 00e4 05       		.uleb128 0x5
 2256 00e5 49       		.uleb128 0x49
 2257 00e6 13       		.uleb128 0x13
 2258 00e7 02       		.uleb128 0x2
 2259 00e8 17       		.uleb128 0x17
 2260 00e9 00       		.byte	0
 2261 00ea 00       		.byte	0
 2262 00eb 10       		.uleb128 0x10
 2263 00ec 898201   		.uleb128 0x4109
 2264 00ef 01       		.byte	0x1
 2265 00f0 11       		.uleb128 0x11
 2266 00f1 01       		.uleb128 0x1
 2267 00f2 31       		.uleb128 0x31
 2268 00f3 13       		.uleb128 0x13
 2269 00f4 01       		.uleb128 0x1
 2270 00f5 13       		.uleb128 0x13
 2271 00f6 00       		.byte	0
 2272 00f7 00       		.byte	0
 2273 00f8 11       		.uleb128 0x11
 2274 00f9 05       		.uleb128 0x5
 2275 00fa 00       		.byte	0
 2276 00fb 03       		.uleb128 0x3
 2277 00fc 0E       		.uleb128 0xe
 2278 00fd 3A       		.uleb128 0x3a
 2279 00fe 0B       		.uleb128 0xb
 2280 00ff 3B       		.uleb128 0x3b
 2281 0100 05       		.uleb128 0x5
 2282 0101 49       		.uleb128 0x49
 2283 0102 13       		.uleb128 0x13
 2284 0103 02       		.uleb128 0x2
 2285 0104 18       		.uleb128 0x18
 2286 0105 00       		.byte	0
 2287 0106 00       		.byte	0
 2288 0107 12       		.uleb128 0x12
 2289 0108 05       		.uleb128 0x5
 2290 0109 00       		.byte	0
 2291 010a 03       		.uleb128 0x3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 77


 2292 010b 08       		.uleb128 0x8
 2293 010c 3A       		.uleb128 0x3a
 2294 010d 0B       		.uleb128 0xb
 2295 010e 3B       		.uleb128 0x3b
 2296 010f 05       		.uleb128 0x5
 2297 0110 49       		.uleb128 0x49
 2298 0111 13       		.uleb128 0x13
 2299 0112 02       		.uleb128 0x2
 2300 0113 18       		.uleb128 0x18
 2301 0114 00       		.byte	0
 2302 0115 00       		.byte	0
 2303 0116 13       		.uleb128 0x13
 2304 0117 2E       		.uleb128 0x2e
 2305 0118 01       		.byte	0x1
 2306 0119 3F       		.uleb128 0x3f
 2307 011a 19       		.uleb128 0x19
 2308 011b 03       		.uleb128 0x3
 2309 011c 0E       		.uleb128 0xe
 2310 011d 3A       		.uleb128 0x3a
 2311 011e 0B       		.uleb128 0xb
 2312 011f 3B       		.uleb128 0x3b
 2313 0120 0B       		.uleb128 0xb
 2314 0121 27       		.uleb128 0x27
 2315 0122 19       		.uleb128 0x19
 2316 0123 11       		.uleb128 0x11
 2317 0124 01       		.uleb128 0x1
 2318 0125 12       		.uleb128 0x12
 2319 0126 06       		.uleb128 0x6
 2320 0127 40       		.uleb128 0x40
 2321 0128 18       		.uleb128 0x18
 2322 0129 9742     		.uleb128 0x2117
 2323 012b 19       		.uleb128 0x19
 2324 012c 01       		.uleb128 0x1
 2325 012d 13       		.uleb128 0x13
 2326 012e 00       		.byte	0
 2327 012f 00       		.byte	0
 2328 0130 14       		.uleb128 0x14
 2329 0131 34       		.uleb128 0x34
 2330 0132 00       		.byte	0
 2331 0133 03       		.uleb128 0x3
 2332 0134 0E       		.uleb128 0xe
 2333 0135 3A       		.uleb128 0x3a
 2334 0136 0B       		.uleb128 0xb
 2335 0137 3B       		.uleb128 0x3b
 2336 0138 0B       		.uleb128 0xb
 2337 0139 49       		.uleb128 0x49
 2338 013a 13       		.uleb128 0x13
 2339 013b 02       		.uleb128 0x2
 2340 013c 17       		.uleb128 0x17
 2341 013d 00       		.byte	0
 2342 013e 00       		.byte	0
 2343 013f 15       		.uleb128 0x15
 2344 0140 34       		.uleb128 0x34
 2345 0141 00       		.byte	0
 2346 0142 03       		.uleb128 0x3
 2347 0143 0E       		.uleb128 0xe
 2348 0144 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 78


 2349 0145 0B       		.uleb128 0xb
 2350 0146 3B       		.uleb128 0x3b
 2351 0147 0B       		.uleb128 0xb
 2352 0148 49       		.uleb128 0x49
 2353 0149 13       		.uleb128 0x13
 2354 014a 02       		.uleb128 0x2
 2355 014b 18       		.uleb128 0x18
 2356 014c 00       		.byte	0
 2357 014d 00       		.byte	0
 2358 014e 16       		.uleb128 0x16
 2359 014f 34       		.uleb128 0x34
 2360 0150 00       		.byte	0
 2361 0151 03       		.uleb128 0x3
 2362 0152 0E       		.uleb128 0xe
 2363 0153 3A       		.uleb128 0x3a
 2364 0154 0B       		.uleb128 0xb
 2365 0155 3B       		.uleb128 0x3b
 2366 0156 0B       		.uleb128 0xb
 2367 0157 49       		.uleb128 0x49
 2368 0158 13       		.uleb128 0x13
 2369 0159 3F       		.uleb128 0x3f
 2370 015a 19       		.uleb128 0x19
 2371 015b 02       		.uleb128 0x2
 2372 015c 18       		.uleb128 0x18
 2373 015d 00       		.byte	0
 2374 015e 00       		.byte	0
 2375 015f 17       		.uleb128 0x17
 2376 0160 01       		.uleb128 0x1
 2377 0161 01       		.byte	0x1
 2378 0162 49       		.uleb128 0x49
 2379 0163 13       		.uleb128 0x13
 2380 0164 01       		.uleb128 0x1
 2381 0165 13       		.uleb128 0x13
 2382 0166 00       		.byte	0
 2383 0167 00       		.byte	0
 2384 0168 18       		.uleb128 0x18
 2385 0169 21       		.uleb128 0x21
 2386 016a 00       		.byte	0
 2387 016b 49       		.uleb128 0x49
 2388 016c 13       		.uleb128 0x13
 2389 016d 2F       		.uleb128 0x2f
 2390 016e 0B       		.uleb128 0xb
 2391 016f 00       		.byte	0
 2392 0170 00       		.byte	0
 2393 0171 19       		.uleb128 0x19
 2394 0172 0F       		.uleb128 0xf
 2395 0173 00       		.byte	0
 2396 0174 0B       		.uleb128 0xb
 2397 0175 0B       		.uleb128 0xb
 2398 0176 49       		.uleb128 0x49
 2399 0177 13       		.uleb128 0x13
 2400 0178 00       		.byte	0
 2401 0179 00       		.byte	0
 2402 017a 1A       		.uleb128 0x1a
 2403 017b 26       		.uleb128 0x26
 2404 017c 00       		.byte	0
 2405 017d 49       		.uleb128 0x49
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 79


 2406 017e 13       		.uleb128 0x13
 2407 017f 00       		.byte	0
 2408 0180 00       		.byte	0
 2409 0181 1B       		.uleb128 0x1b
 2410 0182 2E       		.uleb128 0x2e
 2411 0183 00       		.byte	0
 2412 0184 3F       		.uleb128 0x3f
 2413 0185 19       		.uleb128 0x19
 2414 0186 3C       		.uleb128 0x3c
 2415 0187 19       		.uleb128 0x19
 2416 0188 6E       		.uleb128 0x6e
 2417 0189 0E       		.uleb128 0xe
 2418 018a 03       		.uleb128 0x3
 2419 018b 0E       		.uleb128 0xe
 2420 018c 3A       		.uleb128 0x3a
 2421 018d 0B       		.uleb128 0xb
 2422 018e 3B       		.uleb128 0x3b
 2423 018f 0B       		.uleb128 0xb
 2424 0190 00       		.byte	0
 2425 0191 00       		.byte	0
 2426 0192 1C       		.uleb128 0x1c
 2427 0193 2E       		.uleb128 0x2e
 2428 0194 00       		.byte	0
 2429 0195 3F       		.uleb128 0x3f
 2430 0196 19       		.uleb128 0x19
 2431 0197 3C       		.uleb128 0x3c
 2432 0198 19       		.uleb128 0x19
 2433 0199 6E       		.uleb128 0x6e
 2434 019a 0E       		.uleb128 0xe
 2435 019b 03       		.uleb128 0x3
 2436 019c 0E       		.uleb128 0xe
 2437 019d 3A       		.uleb128 0x3a
 2438 019e 0B       		.uleb128 0xb
 2439 019f 3B       		.uleb128 0x3b
 2440 01a0 05       		.uleb128 0x5
 2441 01a1 00       		.byte	0
 2442 01a2 00       		.byte	0
 2443 01a3 00       		.byte	0
 2444              		.section	.debug_loc,"",%progbits
 2445              	.Ldebug_loc0:
 2446              	.LLST0:
 2447 0000 08000000 		.4byte	.LVL1
 2448 0004 58000000 		.4byte	.LVL6
 2449 0008 0100     		.2byte	0x1
 2450 000a 54       		.byte	0x54
 2451 000b 00000000 		.4byte	0
 2452 000f 00000000 		.4byte	0
 2453              	.LLST1:
 2454 0013 00000000 		.4byte	.LVL7
 2455 0017 00000000 		.4byte	.LVL7
 2456 001b 0100     		.2byte	0x1
 2457 001d 50       		.byte	0x50
 2458 001e 00000000 		.4byte	.LVL7
 2459 0022 04000000 		.4byte	.LVL8
 2460 0026 0400     		.2byte	0x4
 2461 0028 F3       		.byte	0xf3
 2462 0029 01       		.uleb128 0x1
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 80


 2463 002a 50       		.byte	0x50
 2464 002b 9F       		.byte	0x9f
 2465 002c 04000000 		.4byte	.LVL8
 2466 0030 20000000 		.4byte	.LFE4
 2467 0034 0100     		.2byte	0x1
 2468 0036 50       		.byte	0x50
 2469 0037 00000000 		.4byte	0
 2470 003b 00000000 		.4byte	0
 2471              	.LLST2:
 2472 003f 12000000 		.4byte	.LVL9
 2473 0043 1A000000 		.4byte	.LVL10
 2474 0047 0100     		.2byte	0x1
 2475 0049 53       		.byte	0x53
 2476 004a 00000000 		.4byte	0
 2477 004e 00000000 		.4byte	0
 2478              	.LLST3:
 2479 0052 00000000 		.4byte	.LVL11
 2480 0056 06000000 		.4byte	.LVL12
 2481 005a 0100     		.2byte	0x1
 2482 005c 50       		.byte	0x50
 2483 005d 06000000 		.4byte	.LVL12
 2484 0061 0C000000 		.4byte	.LFE9
 2485 0065 0400     		.2byte	0x4
 2486 0067 F3       		.byte	0xf3
 2487 0068 01       		.uleb128 0x1
 2488 0069 50       		.byte	0x50
 2489 006a 9F       		.byte	0x9f
 2490 006b 00000000 		.4byte	0
 2491 006f 00000000 		.4byte	0
 2492              	.LLST4:
 2493 0073 00000000 		.4byte	.LVL13
 2494 0077 2B000000 		.4byte	.LVL17-1
 2495 007b 0100     		.2byte	0x1
 2496 007d 50       		.byte	0x50
 2497 007e 2B000000 		.4byte	.LVL17-1
 2498 0082 34000000 		.4byte	.LFE11
 2499 0086 0400     		.2byte	0x4
 2500 0088 F3       		.byte	0xf3
 2501 0089 01       		.uleb128 0x1
 2502 008a 50       		.byte	0x50
 2503 008b 9F       		.byte	0x9f
 2504 008c 00000000 		.4byte	0
 2505 0090 00000000 		.4byte	0
 2506              	.LLST5:
 2507 0094 06000000 		.4byte	.LVL14
 2508 0098 2B000000 		.4byte	.LVL17-1
 2509 009c 0100     		.2byte	0x1
 2510 009e 51       		.byte	0x51
 2511 009f 00000000 		.4byte	0
 2512 00a3 00000000 		.4byte	0
 2513              	.LLST6:
 2514 00a7 0A000000 		.4byte	.LVL15
 2515 00ab 2E000000 		.4byte	.LVL18
 2516 00af 0100     		.2byte	0x1
 2517 00b1 54       		.byte	0x54
 2518 00b2 00000000 		.4byte	0
 2519 00b6 00000000 		.4byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 81


 2520              	.LLST7:
 2521 00ba 00000000 		.4byte	.LVL19
 2522 00be 0F000000 		.4byte	.LVL22-1
 2523 00c2 0100     		.2byte	0x1
 2524 00c4 50       		.byte	0x50
 2525 00c5 0F000000 		.4byte	.LVL22-1
 2526 00c9 38000000 		.4byte	.LFE12
 2527 00cd 0400     		.2byte	0x4
 2528 00cf F3       		.byte	0xf3
 2529 00d0 01       		.uleb128 0x1
 2530 00d1 50       		.byte	0x50
 2531 00d2 9F       		.byte	0x9f
 2532 00d3 00000000 		.4byte	0
 2533 00d7 00000000 		.4byte	0
 2534              	.LLST8:
 2535 00db 08000000 		.4byte	.LVL20
 2536 00df 1C000000 		.4byte	.LVL24
 2537 00e3 0100     		.2byte	0x1
 2538 00e5 54       		.byte	0x54
 2539 00e6 00000000 		.4byte	0
 2540 00ea 00000000 		.4byte	0
 2541              	.LLST9:
 2542 00ee 0C000000 		.4byte	.LVL21
 2543 00f2 32000000 		.4byte	.LVL25
 2544 00f6 0100     		.2byte	0x1
 2545 00f8 56       		.byte	0x56
 2546 00f9 00000000 		.4byte	0
 2547 00fd 00000000 		.4byte	0
 2548              	.LLST10:
 2549 0101 02000000 		.4byte	.LVL26
 2550 0105 06000000 		.4byte	.LVL27
 2551 0109 0200     		.2byte	0x2
 2552 010b 30       		.byte	0x30
 2553 010c 9F       		.byte	0x9f
 2554 010d 06000000 		.4byte	.LVL27
 2555 0111 0E000000 		.4byte	.LVL29
 2556 0115 0100     		.2byte	0x1
 2557 0117 54       		.byte	0x54
 2558 0118 10000000 		.4byte	.LVL30
 2559 011c 16000000 		.4byte	.LFE10
 2560 0120 0100     		.2byte	0x1
 2561 0122 54       		.byte	0x54
 2562 0123 00000000 		.4byte	0
 2563 0127 00000000 		.4byte	0
 2564              	.LLST11:
 2565 012b 00000000 		.4byte	.LVL35
 2566 012f 27000000 		.4byte	.LVL36-1
 2567 0133 0100     		.2byte	0x1
 2568 0135 50       		.byte	0x50
 2569 0136 27000000 		.4byte	.LVL36-1
 2570 013a 4C000000 		.4byte	.LFE14
 2571 013e 0400     		.2byte	0x4
 2572 0140 F3       		.byte	0xf3
 2573 0141 01       		.uleb128 0x1
 2574 0142 50       		.byte	0x50
 2575 0143 9F       		.byte	0x9f
 2576 0144 00000000 		.4byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 82


 2577 0148 00000000 		.4byte	0
 2578              	.LLST12:
 2579 014c 00000000 		.4byte	.LVL38
 2580 0150 06000000 		.4byte	.LVL39
 2581 0154 0100     		.2byte	0x1
 2582 0156 50       		.byte	0x50
 2583 0157 06000000 		.4byte	.LVL39
 2584 015b 08000000 		.4byte	.LVL40
 2585 015f 0200     		.2byte	0x2
 2586 0161 73       		.byte	0x73
 2587 0162 00       		.sleb128 0
 2588 0163 08000000 		.4byte	.LVL40
 2589 0167 0A000000 		.4byte	.LVL41
 2590 016b 0500     		.2byte	0x5
 2591 016d 0C       		.byte	0xc
 2592 016e 2A640040 		.4byte	0x4000642a
 2593 0172 0A000000 		.4byte	.LVL41
 2594 0176 10000000 		.4byte	.LFE15
 2595 017a 0400     		.2byte	0x4
 2596 017c F3       		.byte	0xf3
 2597 017d 01       		.uleb128 0x1
 2598 017e 50       		.byte	0x50
 2599 017f 9F       		.byte	0x9f
 2600 0180 00000000 		.4byte	0
 2601 0184 00000000 		.4byte	0
 2602              	.LLST13:
 2603 0188 00000000 		.4byte	.LVL42
 2604 018c 12000000 		.4byte	.LVL44
 2605 0190 0100     		.2byte	0x1
 2606 0192 50       		.byte	0x50
 2607 0193 12000000 		.4byte	.LVL44
 2608 0197 38000000 		.4byte	.LFE5
 2609 019b 0400     		.2byte	0x4
 2610 019d F3       		.byte	0xf3
 2611 019e 01       		.uleb128 0x1
 2612 019f 50       		.byte	0x50
 2613 01a0 9F       		.byte	0x9f
 2614 01a1 00000000 		.4byte	0
 2615 01a5 00000000 		.4byte	0
 2616              	.LLST14:
 2617 01a9 0C000000 		.4byte	.LVL43
 2618 01ad 18000000 		.4byte	.LVL46
 2619 01b1 0100     		.2byte	0x1
 2620 01b3 55       		.byte	0x55
 2621 01b4 18000000 		.4byte	.LVL46
 2622 01b8 28000000 		.4byte	.LVL48
 2623 01bc 0900     		.2byte	0x9
 2624 01be 75       		.byte	0x75
 2625 01bf 00       		.sleb128 0
 2626 01c0 03       		.byte	0x3
 2627 01c1 00000000 		.4byte	.LANCHOR0
 2628 01c5 1C       		.byte	0x1c
 2629 01c6 9F       		.byte	0x9f
 2630 01c7 00000000 		.4byte	0
 2631 01cb 00000000 		.4byte	0
 2632              	.LLST15:
 2633 01cf 00000000 		.4byte	.LVL49
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 83


 2634 01d3 07000000 		.4byte	.LVL50-1
 2635 01d7 0100     		.2byte	0x1
 2636 01d9 50       		.byte	0x50
 2637 01da 07000000 		.4byte	.LVL50-1
 2638 01de 34000000 		.4byte	.LFE13
 2639 01e2 0400     		.2byte	0x4
 2640 01e4 F3       		.byte	0xf3
 2641 01e5 01       		.uleb128 0x1
 2642 01e6 50       		.byte	0x50
 2643 01e7 9F       		.byte	0x9f
 2644 01e8 00000000 		.4byte	0
 2645 01ec 00000000 		.4byte	0
 2646              	.LLST16:
 2647 01f0 00000000 		.4byte	.LVL52
 2648 01f4 13000000 		.4byte	.LVL53-1
 2649 01f8 0100     		.2byte	0x1
 2650 01fa 50       		.byte	0x50
 2651 01fb 13000000 		.4byte	.LVL53-1
 2652 01ff 20000000 		.4byte	.LFE6
 2653 0203 0400     		.2byte	0x4
 2654 0205 F3       		.byte	0xf3
 2655 0206 01       		.uleb128 0x1
 2656 0207 50       		.byte	0x50
 2657 0208 9F       		.byte	0x9f
 2658 0209 00000000 		.4byte	0
 2659 020d 00000000 		.4byte	0
 2660              	.LLST17:
 2661 0211 00000000 		.4byte	.LVL56
 2662 0215 04000000 		.4byte	.LVL57
 2663 0219 0200     		.2byte	0x2
 2664 021b 30       		.byte	0x30
 2665 021c 9F       		.byte	0x9f
 2666 021d 04000000 		.4byte	.LVL57
 2667 0221 0C000000 		.4byte	.LFE16
 2668 0225 0100     		.2byte	0x1
 2669 0227 50       		.byte	0x50
 2670 0228 00000000 		.4byte	0
 2671 022c 00000000 		.4byte	0
 2672              	.LLST18:
 2673 0230 10000000 		.4byte	.LVL62
 2674 0234 27000000 		.4byte	.LVL63-1
 2675 0238 0100     		.2byte	0x1
 2676 023a 50       		.byte	0x50
 2677 023b 42000000 		.4byte	.LVL64
 2678 023f 59000000 		.4byte	.LVL65-1
 2679 0243 0100     		.2byte	0x1
 2680 0245 50       		.byte	0x50
 2681 0246 00000000 		.4byte	0
 2682 024a 00000000 		.4byte	0
 2683              		.section	.debug_aranges,"",%progbits
 2684 0000 AC000000 		.4byte	0xac
 2685 0004 0200     		.2byte	0x2
 2686 0006 00000000 		.4byte	.Ldebug_info0
 2687 000a 04       		.byte	0x4
 2688 000b 00       		.byte	0
 2689 000c 0000     		.2byte	0
 2690 000e 0000     		.2byte	0
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 84


 2691 0010 00000000 		.4byte	.LFB1
 2692 0014 68000000 		.4byte	.LFE1-.LFB1
 2693 0018 00000000 		.4byte	.LFB4
 2694 001c 20000000 		.4byte	.LFE4-.LFB4
 2695 0020 00000000 		.4byte	.LFB8
 2696 0024 10000000 		.4byte	.LFE8-.LFB8
 2697 0028 00000000 		.4byte	.LFB9
 2698 002c 0C000000 		.4byte	.LFE9-.LFB9
 2699 0030 00000000 		.4byte	.LFB11
 2700 0034 34000000 		.4byte	.LFE11-.LFB11
 2701 0038 00000000 		.4byte	.LFB12
 2702 003c 38000000 		.4byte	.LFE12-.LFB12
 2703 0040 00000000 		.4byte	.LFB10
 2704 0044 16000000 		.4byte	.LFE10-.LFB10
 2705 0048 00000000 		.4byte	.LFB3
 2706 004c 68000000 		.4byte	.LFE3-.LFB3
 2707 0050 00000000 		.4byte	.LFB14
 2708 0054 4C000000 		.4byte	.LFE14-.LFB14
 2709 0058 00000000 		.4byte	.LFB15
 2710 005c 10000000 		.4byte	.LFE15-.LFB15
 2711 0060 00000000 		.4byte	.LFB5
 2712 0064 38000000 		.4byte	.LFE5-.LFB5
 2713 0068 00000000 		.4byte	.LFB13
 2714 006c 34000000 		.4byte	.LFE13-.LFB13
 2715 0070 00000000 		.4byte	.LFB6
 2716 0074 20000000 		.4byte	.LFE6-.LFB6
 2717 0078 00000000 		.4byte	.LFB7
 2718 007c 38000000 		.4byte	.LFE7-.LFB7
 2719 0080 00000000 		.4byte	.LFB16
 2720 0084 0C000000 		.4byte	.LFE16-.LFB16
 2721 0088 00000000 		.4byte	.LFB17
 2722 008c 0C000000 		.4byte	.LFE17-.LFB17
 2723 0090 00000000 		.4byte	.LFB18
 2724 0094 20000000 		.4byte	.LFE18-.LFB18
 2725 0098 00000000 		.4byte	.LFB0
 2726 009c E4000000 		.4byte	.LFE0-.LFB0
 2727 00a0 00000000 		.4byte	.LFB2
 2728 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2729 00a8 00000000 		.4byte	0
 2730 00ac 00000000 		.4byte	0
 2731              		.section	.debug_ranges,"",%progbits
 2732              	.Ldebug_ranges0:
 2733 0000 00000000 		.4byte	.LFB1
 2734 0004 68000000 		.4byte	.LFE1
 2735 0008 00000000 		.4byte	.LFB4
 2736 000c 20000000 		.4byte	.LFE4
 2737 0010 00000000 		.4byte	.LFB8
 2738 0014 10000000 		.4byte	.LFE8
 2739 0018 00000000 		.4byte	.LFB9
 2740 001c 0C000000 		.4byte	.LFE9
 2741 0020 00000000 		.4byte	.LFB11
 2742 0024 34000000 		.4byte	.LFE11
 2743 0028 00000000 		.4byte	.LFB12
 2744 002c 38000000 		.4byte	.LFE12
 2745 0030 00000000 		.4byte	.LFB10
 2746 0034 16000000 		.4byte	.LFE10
 2747 0038 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 85


 2748 003c 68000000 		.4byte	.LFE3
 2749 0040 00000000 		.4byte	.LFB14
 2750 0044 4C000000 		.4byte	.LFE14
 2751 0048 00000000 		.4byte	.LFB15
 2752 004c 10000000 		.4byte	.LFE15
 2753 0050 00000000 		.4byte	.LFB5
 2754 0054 38000000 		.4byte	.LFE5
 2755 0058 00000000 		.4byte	.LFB13
 2756 005c 34000000 		.4byte	.LFE13
 2757 0060 00000000 		.4byte	.LFB6
 2758 0064 20000000 		.4byte	.LFE6
 2759 0068 00000000 		.4byte	.LFB7
 2760 006c 38000000 		.4byte	.LFE7
 2761 0070 00000000 		.4byte	.LFB16
 2762 0074 0C000000 		.4byte	.LFE16
 2763 0078 00000000 		.4byte	.LFB17
 2764 007c 0C000000 		.4byte	.LFE17
 2765 0080 00000000 		.4byte	.LFB18
 2766 0084 20000000 		.4byte	.LFE18
 2767 0088 00000000 		.4byte	.LFB0
 2768 008c E4000000 		.4byte	.LFE0
 2769 0090 00000000 		.4byte	.LFB2
 2770 0094 2C000000 		.4byte	.LFE2
 2771 0098 00000000 		.4byte	0
 2772 009c 00000000 		.4byte	0
 2773              		.section	.debug_line,"",%progbits
 2774              	.Ldebug_line0:
 2775 0000 B5020000 		.section	.debug_str,"MS",%progbits,1
 2775      0200C900 
 2775      00000201 
 2775      FB0E0D00 
 2775      01010101 
 2776              	.LASF10:
 2777 0000 75696E74 		.ascii	"uint16\000"
 2777      313600
 2778              	.LASF50:
 2779 0007 43617053 		.ascii	"CapSense_csv\000"
 2779      656E7365 
 2779      5F637376 
 2779      00
 2780              	.LASF66:
 2781 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2781      69744372 
 2781      69746963 
 2781      616C5365 
 2781      6374696F 
 2782              	.LASF82:
 2783 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2783      72617465 
 2783      645F536F 
 2783      75726365 
 2783      5C50536F 
 2784              	.LASF48:
 2785 004c 43617053 		.ascii	"CapSense_initVar\000"
 2785      656E7365 
 2785      5F696E69 
 2785      74566172 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 86


 2785      00
 2786              	.LASF54:
 2787 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2787      656E7365 
 2787      5F706354 
 2787      61626C65 
 2787      00
 2788              	.LASF49:
 2789 006e 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2789      656E7365 
 2789      5F6C6F77 
 2789      4C657665 
 2789      6C54756E 
 2790              	.LASF72:
 2791 008a 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2791      656E7365 
 2791      5F496461 
 2791      63434830 
 2791      5F536574 
 2792              	.LASF24:
 2793 00a4 736E7349 		.ascii	"snsIndex\000"
 2793      6E646578 
 2793      00
 2794              	.LASF7:
 2795 00ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 2795      206C6F6E 
 2795      6720756E 
 2795      7369676E 
 2795      65642069 
 2796              	.LASF64:
 2797 00c4 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2797      656E7365 
 2797      5F436F6D 
 2797      70434830 
 2797      5F456E61 
 2798              	.LASF26:
 2799 00dc 43617053 		.ascii	"CapSense_Enable\000"
 2799      656E7365 
 2799      5F456E61 
 2799      626C6500 
 2800              	.LASF34:
 2801 00ec 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2801      656E7365 
 2801      5F536574 
 2801      50726573 
 2801      63616C65 
 2802              	.LASF6:
 2803 0102 6C6F6E67 		.ascii	"long long int\000"
 2803      206C6F6E 
 2803      6720696E 
 2803      7400
 2804              	.LASF0:
 2805 0110 7369676E 		.ascii	"signed char\000"
 2805      65642063 
 2805      68617200 
 2806              	.LASF45:
 2807 011c 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 87


 2807      656E7365 
 2807      5F536574 
 2807      416E616C 
 2807      6F675377 
 2808              	.LASF4:
 2809 013d 6C6F6E67 		.ascii	"long int\000"
 2809      20696E74 
 2809      00
 2810              	.LASF16:
 2811 0146 72656731 		.ascii	"reg16\000"
 2811      3600
 2812              	.LASF9:
 2813 014c 75696E74 		.ascii	"uint8\000"
 2813      3800
 2814              	.LASF75:
 2815 0152 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 2815      656E7365 
 2815      5F414D75 
 2815      78434830 
 2815      5F496E69 
 2816              	.LASF13:
 2817 0168 646F7562 		.ascii	"double\000"
 2817      6C6500
 2818              	.LASF27:
 2819 016f 43617053 		.ascii	"CapSense_EnableSensor\000"
 2819      656E7365 
 2819      5F456E61 
 2819      626C6553 
 2819      656E736F 
 2820              	.LASF71:
 2821 0185 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2821      656E7365 
 2821      5F496461 
 2821      63434830 
 2821      5F53746F 
 2822              	.LASF61:
 2823 019b 43617053 		.ascii	"CapSense_widgetNumber\000"
 2823      656E7365 
 2823      5F776964 
 2823      6765744E 
 2823      756D6265 
 2824              	.LASF23:
 2825 01b1 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2825      656E7365 
 2825      5F526561 
 2825      6453656E 
 2825      736F7252 
 2826              	.LASF11:
 2827 01c8 75696E74 		.ascii	"uint32\000"
 2827      333200
 2828              	.LASF73:
 2829 01cf 4379496E 		.ascii	"CyIntSetVector\000"
 2829      74536574 
 2829      56656374 
 2829      6F7200
 2830              	.LASF29:
 2831 01de 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 88


 2831      00
 2832              	.LASF76:
 2833 01e3 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2833      656E7365 
 2833      5F436F6D 
 2833      70434830 
 2833      5F496E69 
 2834              	.LASF28:
 2835 01f9 706F7274 		.ascii	"port\000"
 2835      00
 2836              	.LASF51:
 2837 01fe 43617053 		.ascii	"CapSense_sensorIndex\000"
 2837      656E7365 
 2837      5F73656E 
 2837      736F7249 
 2837      6E646578 
 2838              	.LASF40:
 2839 0213 43617053 		.ascii	"CapSense_ScanSensor\000"
 2839      656E7365 
 2839      5F536361 
 2839      6E53656E 
 2839      736F7200 
 2840              	.LASF8:
 2841 0227 756E7369 		.ascii	"unsigned int\000"
 2841      676E6564 
 2841      20696E74 
 2841      00
 2842              	.LASF31:
 2843 0234 43617053 		.ascii	"CapSense_ClearSensors\000"
 2843      656E7365 
 2843      5F436C65 
 2843      61725365 
 2843      6E736F72 
 2844              	.LASF79:
 2845 024a 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2845      656E7365 
 2845      5F496461 
 2845      63434830 
 2845      5F536574 
 2846              	.LASF5:
 2847 0264 6C6F6E67 		.ascii	"long unsigned int\000"
 2847      20756E73 
 2847      69676E65 
 2847      6420696E 
 2847      7400
 2848              	.LASF56:
 2849 0276 43617053 		.ascii	"CapSense_maskTable\000"
 2849      656E7365 
 2849      5F6D6173 
 2849      6B546162 
 2849      6C6500
 2850              	.LASF55:
 2851 0289 43617053 		.ascii	"CapSense_portTable\000"
 2851      656E7365 
 2851      5F706F72 
 2851      74546162 
 2851      6C6500
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 89


 2852              	.LASF63:
 2853 029c 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2853      656E7365 
 2853      5F496E74 
 2853      436C6F63 
 2853      6B5F5374 
 2854              	.LASF62:
 2855 02b4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2855      74657243 
 2855      72697469 
 2855      63616C53 
 2855      65637469 
 2856              	.LASF3:
 2857 02cb 73686F72 		.ascii	"short unsigned int\000"
 2857      7420756E 
 2857      7369676E 
 2857      65642069 
 2857      6E7400
 2858              	.LASF69:
 2859 02de 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2859      656E7365 
 2859      5F496E74 
 2859      436C6F63 
 2859      6B5F5374 
 2860              	.LASF25:
 2861 02f5 73656E73 		.ascii	"sensor\000"
 2861      6F7200
 2862              	.LASF53:
 2863 02fc 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2863      656E7365 
 2863      5F73656E 
 2863      736F7245 
 2863      6E61626C 
 2864              	.LASF37:
 2865 0316 736C6F74 		.ascii	"slot\000"
 2865      00
 2866              	.LASF80:
 2867 031b 43617053 		.ascii	"CapSense_AutoTune\000"
 2867      656E7365 
 2867      5F417574 
 2867      6F54756E 
 2867      6500
 2868              	.LASF17:
 2869 032d 72656733 		.ascii	"reg32\000"
 2869      3200
 2870              	.LASF60:
 2871 0333 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2871      656E7365 
 2871      5F616E61 
 2871      6C6F6753 
 2871      77697463 
 2872              	.LASF19:
 2873 0350 73697A65 		.ascii	"sizetype\000"
 2873      74797065 
 2873      00
 2874              	.LASF57:
 2875 0359 43617053 		.ascii	"CapSense_csTable\000"
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 90


 2875      656E7365 
 2875      5F637354 
 2875      61626C65 
 2875      00
 2876              	.LASF18:
 2877 036a 6C6F6E67 		.ascii	"long double\000"
 2877      20646F75 
 2877      626C6500 
 2878              	.LASF32:
 2879 0376 43617053 		.ascii	"CapSense_Stop\000"
 2879      656E7365 
 2879      5F53746F 
 2879      7000
 2880              	.LASF44:
 2881 0384 7363616E 		.ascii	"scanSpeed\000"
 2881      53706565 
 2881      6400
 2882              	.LASF21:
 2883 038e 656E4D61 		.ascii	"enMask\000"
 2883      736B00
 2884              	.LASF78:
 2885 0395 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2885      656E7365 
 2885      5F496461 
 2885      63434830 
 2885      5F536574 
 2886              	.LASF74:
 2887 03b2 4379496E 		.ascii	"CyIntSetPriority\000"
 2887      74536574 
 2887      5072696F 
 2887      72697479 
 2887      00
 2888              	.LASF58:
 2889 03c3 43617053 		.ascii	"CapSense_idacSettings\000"
 2889      656E7365 
 2889      5F696461 
 2889      63536574 
 2889      74696E67 
 2890              	.LASF12:
 2891 03d9 666C6F61 		.ascii	"float\000"
 2891      7400
 2892              	.LASF35:
 2893 03df 70726573 		.ascii	"prescaler\000"
 2893      63616C65 
 2893      7200
 2894              	.LASF15:
 2895 03e9 72656738 		.ascii	"reg8\000"
 2895      00
 2896              	.LASF22:
 2897 03ee 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2897      656E7365 
 2897      5F46696E 
 2897      644E6578 
 2897      7453656E 
 2898              	.LASF1:
 2899 0406 756E7369 		.ascii	"unsigned char\000"
 2899      676E6564 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 91


 2899      20636861 
 2899      7200
 2900              	.LASF77:
 2901 0414 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2901      656E7365 
 2901      5F496461 
 2901      63434830 
 2901      5F496E69 
 2902              	.LASF59:
 2903 042a 43617053 		.ascii	"CapSense_widgetResolution\000"
 2903      656E7365 
 2903      5F776964 
 2903      67657452 
 2903      65736F6C 
 2904              	.LASF2:
 2905 0444 73686F72 		.ascii	"short int\000"
 2905      7420696E 
 2905      7400
 2906              	.LASF38:
 2907 044e 77696467 		.ascii	"widget\000"
 2907      657400
 2908              	.LASF36:
 2909 0455 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2909      656E7365 
 2909      5F536574 
 2909      5363616E 
 2909      536C6F74 
 2910              	.LASF42:
 2911 0472 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2911      656E7365 
 2911      5F476574 
 2911      50726573 
 2911      63616C65 
 2912              	.LASF81:
 2913 0488 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2913      43313120 
 2913      352E342E 
 2913      31203230 
 2913      31363036 
 2914 04bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2914      20726576 
 2914      6973696F 
 2914      6E203233 
 2914      37373135 
 2915 04ee 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2915      66756E63 
 2915      74696F6E 
 2915      2D736563 
 2915      74696F6E 
 2916              	.LASF14:
 2917 0516 63686172 		.ascii	"char\000"
 2917      00
 2918              	.LASF65:
 2919 051b 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 2919      656E7365 
 2919      5F496461 
 2919      63434830 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 92


 2919      5F456E61 
 2920              	.LASF43:
 2921 0533 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2921      656E7365 
 2921      5F536574 
 2921      5363616E 
 2921      53706565 
 2922              	.LASF67:
 2923 0549 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 2923      656E7365 
 2923      5F414D75 
 2923      78434830 
 2923      5F536574 
 2924              	.LASF47:
 2925 055e 43617053 		.ascii	"CapSense_Start\000"
 2925      656E7365 
 2925      5F537461 
 2925      727400
 2926              	.LASF33:
 2927 056d 43617053 		.ascii	"CapSense_PostScan\000"
 2927      656E7365 
 2927      5F506F73 
 2927      74536361 
 2927      6E00
 2928              	.LASF20:
 2929 057f 656E6162 		.ascii	"enableInterrupts\000"
 2929      6C65496E 
 2929      74657272 
 2929      75707473 
 2929      00
 2930              	.LASF70:
 2931 0590 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 2931      656E7365 
 2931      5F436F6D 
 2931      70434830 
 2931      5F53746F 
 2932              	.LASF30:
 2933 05a6 43617053 		.ascii	"CapSense_DisableSensor\000"
 2933      656E7365 
 2933      5F446973 
 2933      61626C65 
 2933      53656E73 
 2934              	.LASF39:
 2935 05bd 43617053 		.ascii	"CapSense_PreScan\000"
 2935      656E7365 
 2935      5F507265 
 2935      5363616E 
 2935      00
 2936              	.LASF46:
 2937 05ce 43617053 		.ascii	"CapSense_Init\000"
 2937      656E7365 
 2937      5F496E69 
 2937      7400
 2938              	.LASF52:
 2939 05dc 43617053 		.ascii	"CapSense_sensorRaw\000"
 2939      656E7365 
 2939      5F73656E 
ARM GAS  C:\Users\Tri94\AppData\Local\Temp\ccrAJwoI.s 			page 93


 2939      736F7252 
 2939      617700
 2940              	.LASF41:
 2941 05ef 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2941      656E7365 
 2941      5F536361 
 2941      6E456E61 
 2941      626C6564 
 2942              	.LASF68:
 2943 060b 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 2943      656E7365 
 2943      5F414D75 
 2943      78434830 
 2943      5F556E73 
 2944              	.LASF83:
 2945 0622 433A5C55 		.ascii	"C:\\Users\\Tri94\\Documents\\PSoC Creator\\EE4450\\"
 2945      73657273 
 2945      5C547269 
 2945      39345C44 
 2945      6F63756D 
 2946 064f 43617053 		.ascii	"CapSense_Slider.cydsn\000"
 2946      656E7365 
 2946      5F536C69 
 2946      6465722E 
 2946      63796473 
 2947              	.LASF84:
 2948 0665 43617053 		.ascii	"CapSense_IsBusy\000"
 2948      656E7365 
 2948      5F497342 
 2948      75737900 
 2949              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
